{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _neo4jDriverCore = require(\"neo4j-driver-core\");\nvar _rxjs = require(\"rxjs\");\nvar _operators = require(\"rxjs/operators\");\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar States = {\n  READY: 0,\n  STREAMING: 1,\n  COMPLETED: 2\n};\n/**\n * The reactive result interface.\n */\n\nvar RxResult = /*#__PURE__*/function () {\n  /**\n   * @constructor\n   * @protected\n   * @param {Observable<Result>} result - An observable of single Result instance to relay requests.\n   */\n  function RxResult(result) {\n    (0, _classCallCheck2[\"default\"])(this, RxResult);\n    var replayedResult = result.pipe((0, _operators.publishReplay)(1), (0, _operators.refCount)());\n    this._result = replayedResult;\n    this._keys = replayedResult.pipe((0, _operators.flatMap)(function (r) {\n      return (0, _rxjs.from)(r.keys());\n    }), (0, _operators.publishReplay)(1), (0, _operators.refCount)());\n    this._records = new _rxjs.Subject();\n    this._summary = new _rxjs.ReplaySubject();\n    this._state = States.READY;\n  }\n  /**\n   * Returns an observable that exposes a single item containing field names\n   * returned by the executing query.\n   *\n   * Errors raised by actual query execution can surface on the returned\n   * observable stream.\n   *\n   * @public\n   * @returns {Observable<string[]>} - An observable stream (with exactly one element) of field names.\n   */\n\n  (0, _createClass2[\"default\"])(RxResult, [{\n    key: \"keys\",\n    value: function keys() {\n      return this._keys;\n    }\n    /**\n     * Returns an observable that exposes each record returned by the executing query.\n     *\n     * Errors raised during the streaming phase can surface on the returned observable stream.\n     *\n     * @public\n     * @returns {Observable<Record>} - An observable stream of records.\n     */\n  }, {\n    key: \"records\",\n    value: function records() {\n      var _this = this;\n      return this._result.pipe((0, _operators.flatMap)(function (result) {\n        return new _rxjs.Observable(function (recordsObserver) {\n          return _this._startStreaming({\n            result: result,\n            recordsObserver: recordsObserver\n          });\n        });\n      }));\n    }\n    /**\n     * Returns an observable that exposes a single item of {@link ResultSummary} that is generated by\n     * the server after the streaming of the executing query is completed.\n     *\n     * *Subscribing to this stream before subscribing to records() stream causes the results to be discarded on the server.*\n     *\n     * @public\n     * @returns {Observable<ResultSummary>} - An observable stream (with exactly one element) of result summary.\n     */\n  }, {\n    key: \"consume\",\n    value: function consume() {\n      var _this2 = this;\n      return this._result.pipe((0, _operators.flatMap)(function (result) {\n        return new _rxjs.Observable(function (summaryObserver) {\n          return _this2._startStreaming({\n            result: result,\n            summaryObserver: summaryObserver\n          });\n        });\n      }));\n    }\n  }, {\n    key: \"_startStreaming\",\n    value: function _startStreaming() {\n      var _this3 = this;\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        result = _ref.result,\n        _ref$recordsObserver = _ref.recordsObserver,\n        recordsObserver = _ref$recordsObserver === void 0 ? null : _ref$recordsObserver,\n        _ref$summaryObserver = _ref.summaryObserver,\n        summaryObserver = _ref$summaryObserver === void 0 ? null : _ref$summaryObserver;\n      var subscriptions = [];\n      if (summaryObserver) {\n        subscriptions.push(this._summary.subscribe(summaryObserver));\n      }\n      if (this._state < States.STREAMING) {\n        this._state = States.STREAMING;\n        if (recordsObserver) {\n          subscriptions.push(this._records.subscribe(recordsObserver));\n        }\n        subscriptions.push({\n          unsubscribe: function unsubscribe() {\n            if (result._cancel) {\n              result._cancel();\n            }\n          }\n        });\n        if (this._records.observers.length === 0) {\n          result._cancel();\n        }\n        result.subscribe({\n          onNext: function onNext(record) {\n            _this3._records.next(record);\n          },\n          onCompleted: function onCompleted(summary) {\n            _this3._records.complete();\n            _this3._summary.next(summary);\n            _this3._summary.complete();\n            _this3._state = States.COMPLETED;\n          },\n          onError: function onError(err) {\n            _this3._records.error(err);\n            _this3._summary.error(err);\n            _this3._state = States.COMPLETED;\n          }\n        });\n      } else if (recordsObserver) {\n        recordsObserver.error((0, _neo4jDriverCore.newError)('Streaming has already started/consumed with a previous records or summary subscription.'));\n      }\n      return function () {\n        subscriptions.forEach(function (s) {\n          return s.unsubscribe();\n        });\n      };\n    }\n  }]);\n  return RxResult;\n}();\nexports[\"default\"] = RxResult;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_classCallCheck2","_createClass2","_neo4jDriverCore","_rxjs","_operators","States","READY","STREAMING","COMPLETED","RxResult","result","replayedResult","pipe","publishReplay","refCount","_result","_keys","flatMap","r","from","keys","_records","Subject","_summary","ReplaySubject","_state","key","records","_this","Observable","recordsObserver","_startStreaming","consume","_this2","summaryObserver","_this3","_ref","arguments","length","undefined","_ref$recordsObserver","_ref$summaryObserver","subscriptions","push","subscribe","unsubscribe","_cancel","observers","onNext","record","next","onCompleted","summary","complete","onError","err","error","newError","forEach","s"],"sources":["C:/Stanford/DigitalTracesApp3/node_modules/neo4j-driver/lib/result-rx.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _neo4jDriverCore = require(\"neo4j-driver-core\");\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar States = {\n  READY: 0,\n  STREAMING: 1,\n  COMPLETED: 2\n};\n/**\n * The reactive result interface.\n */\n\nvar RxResult = /*#__PURE__*/function () {\n  /**\n   * @constructor\n   * @protected\n   * @param {Observable<Result>} result - An observable of single Result instance to relay requests.\n   */\n  function RxResult(result) {\n    (0, _classCallCheck2[\"default\"])(this, RxResult);\n    var replayedResult = result.pipe((0, _operators.publishReplay)(1), (0, _operators.refCount)());\n    this._result = replayedResult;\n    this._keys = replayedResult.pipe((0, _operators.flatMap)(function (r) {\n      return (0, _rxjs.from)(r.keys());\n    }), (0, _operators.publishReplay)(1), (0, _operators.refCount)());\n    this._records = new _rxjs.Subject();\n    this._summary = new _rxjs.ReplaySubject();\n    this._state = States.READY;\n  }\n  /**\n   * Returns an observable that exposes a single item containing field names\n   * returned by the executing query.\n   *\n   * Errors raised by actual query execution can surface on the returned\n   * observable stream.\n   *\n   * @public\n   * @returns {Observable<string[]>} - An observable stream (with exactly one element) of field names.\n   */\n\n\n  (0, _createClass2[\"default\"])(RxResult, [{\n    key: \"keys\",\n    value: function keys() {\n      return this._keys;\n    }\n    /**\n     * Returns an observable that exposes each record returned by the executing query.\n     *\n     * Errors raised during the streaming phase can surface on the returned observable stream.\n     *\n     * @public\n     * @returns {Observable<Record>} - An observable stream of records.\n     */\n\n  }, {\n    key: \"records\",\n    value: function records() {\n      var _this = this;\n\n      return this._result.pipe((0, _operators.flatMap)(function (result) {\n        return new _rxjs.Observable(function (recordsObserver) {\n          return _this._startStreaming({\n            result: result,\n            recordsObserver: recordsObserver\n          });\n        });\n      }));\n    }\n    /**\n     * Returns an observable that exposes a single item of {@link ResultSummary} that is generated by\n     * the server after the streaming of the executing query is completed.\n     *\n     * *Subscribing to this stream before subscribing to records() stream causes the results to be discarded on the server.*\n     *\n     * @public\n     * @returns {Observable<ResultSummary>} - An observable stream (with exactly one element) of result summary.\n     */\n\n  }, {\n    key: \"consume\",\n    value: function consume() {\n      var _this2 = this;\n\n      return this._result.pipe((0, _operators.flatMap)(function (result) {\n        return new _rxjs.Observable(function (summaryObserver) {\n          return _this2._startStreaming({\n            result: result,\n            summaryObserver: summaryObserver\n          });\n        });\n      }));\n    }\n  }, {\n    key: \"_startStreaming\",\n    value: function _startStreaming() {\n      var _this3 = this;\n\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          result = _ref.result,\n          _ref$recordsObserver = _ref.recordsObserver,\n          recordsObserver = _ref$recordsObserver === void 0 ? null : _ref$recordsObserver,\n          _ref$summaryObserver = _ref.summaryObserver,\n          summaryObserver = _ref$summaryObserver === void 0 ? null : _ref$summaryObserver;\n\n      var subscriptions = [];\n\n      if (summaryObserver) {\n        subscriptions.push(this._summary.subscribe(summaryObserver));\n      }\n\n      if (this._state < States.STREAMING) {\n        this._state = States.STREAMING;\n\n        if (recordsObserver) {\n          subscriptions.push(this._records.subscribe(recordsObserver));\n        }\n\n        subscriptions.push({\n          unsubscribe: function unsubscribe() {\n            if (result._cancel) {\n              result._cancel();\n            }\n          }\n        });\n\n        if (this._records.observers.length === 0) {\n          result._cancel();\n        }\n\n        result.subscribe({\n          onNext: function onNext(record) {\n            _this3._records.next(record);\n          },\n          onCompleted: function onCompleted(summary) {\n            _this3._records.complete();\n\n            _this3._summary.next(summary);\n\n            _this3._summary.complete();\n\n            _this3._state = States.COMPLETED;\n          },\n          onError: function onError(err) {\n            _this3._records.error(err);\n\n            _this3._summary.error(err);\n\n            _this3._state = States.COMPLETED;\n          }\n        });\n      } else if (recordsObserver) {\n        recordsObserver.error((0, _neo4jDriverCore.newError)('Streaming has already started/consumed with a previous records or summary subscription.'));\n      }\n\n      return function () {\n        subscriptions.forEach(function (s) {\n          return s.unsubscribe();\n        });\n      };\n    }\n  }]);\n  return RxResult;\n}();\n\nexports[\"default\"] = RxResult;"],"mappings":"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"},"metadata":{},"sourceType":"script"}