{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar channel_buf_1 = __importDefault(require(\"../channel-buf\"));\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar _a = neo4j_driver_core_1.internal.util,\n  ENCRYPTION_OFF = _a.ENCRYPTION_OFF,\n  ENCRYPTION_ON = _a.ENCRYPTION_ON;\n// Just to be sure that these values are with us even after WebSocket is injected\n// for tests.\nvar WS_CONNECTING = 0;\nvar WS_OPEN = 1;\nvar WS_CLOSING = 2;\nvar WS_CLOSED = 3;\n/**\n * Create a new WebSocketChannel to be used in web browsers.\n * @access private\n */\nvar WebSocketChannel = /** @class */function () {\n  /**\n   * Create new instance\n   * @param {ChannelConfig} config - configuration for this channel.\n   * @param {function(): string} protocolSupplier - function that detects protocol of the web page. Should only be used in tests.\n   */\n  function WebSocketChannel(config, protocolSupplier, socketFactory) {\n    if (protocolSupplier === void 0) {\n      protocolSupplier = detectWebPageProtocol;\n    }\n    if (socketFactory === void 0) {\n      socketFactory = function socketFactory(url) {\n        return new WebSocket(url);\n      };\n    }\n    this._open = true;\n    this._pending = [];\n    this._error = null;\n    this._handleConnectionError = this._handleConnectionError.bind(this);\n    this._config = config;\n    var _a = determineWebSocketScheme(config, protocolSupplier),\n      scheme = _a.scheme,\n      error = _a.error;\n    if (error) {\n      this._error = error;\n      return;\n    }\n    this._ws = createWebSocket(scheme, config.address, socketFactory);\n    this._ws.binaryType = 'arraybuffer';\n    var self = this;\n    // All connection errors are not sent to the error handler\n    // we must also check for dirty close calls\n    this._ws.onclose = function (e) {\n      if (e && !e.wasClean) {\n        self._handleConnectionError();\n      }\n      self._open = false;\n    };\n    this._ws.onopen = function () {\n      // Connected! Cancel the connection timeout\n      self._clearConnectionTimeout();\n      // Drain all pending messages\n      var pending = self._pending;\n      self._pending = null;\n      for (var i = 0; i < pending.length; i++) {\n        self.write(pending[i]);\n      }\n    };\n    this._ws.onmessage = function (event) {\n      if (self.onmessage) {\n        var b = new channel_buf_1.default(event.data);\n        self.onmessage(b);\n      }\n    };\n    this._ws.onerror = this._handleConnectionError;\n    this._connectionTimeoutFired = false;\n    this._connectionTimeoutId = this._setupConnectionTimeout();\n  }\n  WebSocketChannel.prototype._handleConnectionError = function () {\n    if (this._connectionTimeoutFired) {\n      // timeout fired - not connected within configured time\n      this._error = (0, neo4j_driver_core_1.newError)(\"Failed to establish connection in \" + this._config.connectionTimeout + \"ms\", this._config.connectionErrorCode);\n      if (this.onerror) {\n        this.onerror(this._error);\n      }\n      return;\n    }\n    // onerror triggers on websocket close as well.. don't get me started.\n    if (this._open) {\n      // http://stackoverflow.com/questions/25779831/how-to-catch-websocket-connection-to-ws-xxxnn-failed-connection-closed-be\n      this._error = (0, neo4j_driver_core_1.newError)('WebSocket connection failure. Due to security ' + 'constraints in your web browser, the reason for the failure is not available ' + 'to this Neo4j Driver. Please use your browsers development console to determine ' + 'the root cause of the failure. Common reasons include the database being ' + 'unavailable, using the wrong connection URL or temporary network problems. ' + 'If you have enabled encryption, ensure your browser is configured to trust the ' + 'certificate Neo4j is configured to use. WebSocket `readyState` is: ' + this._ws.readyState, this._config.connectionErrorCode);\n      if (this.onerror) {\n        this.onerror(this._error);\n      }\n    }\n  };\n  /**\n   * Write the passed in buffer to connection\n   * @param {ChannelBuffer} buffer - Buffer to write\n   */\n  WebSocketChannel.prototype.write = function (buffer) {\n    // If there is a pending queue, push this on that queue. This means\n    // we are not yet connected, so we queue things locally.\n    if (this._pending !== null) {\n      this._pending.push(buffer);\n    } else if (buffer instanceof channel_buf_1.default) {\n      try {\n        this._ws.send(buffer._buffer);\n      } catch (error) {\n        if (this._ws.readyState !== WS_OPEN) {\n          // Websocket has been closed\n          this._handleConnectionError();\n        } else {\n          // Some other error occured\n          throw error;\n        }\n      }\n    } else {\n      throw (0, neo4j_driver_core_1.newError)(\"Don't know how to send buffer: \" + buffer);\n    }\n  };\n  /**\n   * Close the connection\n   * @returns {Promise} A promise that will be resolved after channel is closed\n   */\n  WebSocketChannel.prototype.close = function () {\n    var _this = this;\n    return new Promise(function (resolve, reject) {\n      if (_this._ws && _this._ws.readyState !== WS_CLOSED) {\n        _this._open = false;\n        _this._clearConnectionTimeout();\n        _this._ws.onclose = function () {\n          return resolve();\n        };\n        _this._ws.close();\n      } else {\n        resolve();\n      }\n    });\n  };\n  /**\n   * Setup the receive timeout for the channel.\n   *\n   * Not supported for the browser channel.\n   *\n   * @param {number} receiveTimeout The amount of time the channel will keep without receive any data before timeout (ms)\n   * @returns {void}\n   */\n  WebSocketChannel.prototype.setupReceiveTimeout = function (receiveTimeout) {};\n  /**\n   * Set connection timeout on the given WebSocket, if configured.\n   * @return {number} the timeout id or null.\n   * @private\n   */\n  WebSocketChannel.prototype._setupConnectionTimeout = function () {\n    var _this = this;\n    var timeout = this._config.connectionTimeout;\n    if (timeout) {\n      var webSocket_1 = this._ws;\n      return setTimeout(function () {\n        if (webSocket_1.readyState !== WS_OPEN) {\n          _this._connectionTimeoutFired = true;\n          webSocket_1.close();\n        }\n      }, timeout);\n    }\n    return null;\n  };\n  /**\n   * Remove active connection timeout, if any.\n   * @private\n   */\n  WebSocketChannel.prototype._clearConnectionTimeout = function () {\n    var timeoutId = this._connectionTimeoutId;\n    if (timeoutId || timeoutId === 0) {\n      this._connectionTimeoutFired = false;\n      this._connectionTimeoutId = null;\n      clearTimeout(timeoutId);\n    }\n  };\n  return WebSocketChannel;\n}();\nexports.default = WebSocketChannel;\nfunction createWebSocket(scheme, address, socketFactory) {\n  var url = scheme + '://' + address.asHostPort();\n  try {\n    return socketFactory(url);\n  } catch (error) {\n    if (isIPv6AddressIssueOnWindows(error, address)) {\n      // WebSocket in IE and Edge browsers on Windows do not support regular IPv6 address syntax because they contain ':'.\n      // It's an invalid character for UNC (https://en.wikipedia.org/wiki/IPv6_address#Literal_IPv6_addresses_in_UNC_path_names)\n      // and Windows requires IPv6 to be changes in the following way:\n      //   1) replace all ':' with '-'\n      //   2) replace '%' with 's' for link-local address\n      //   3) append '.ipv6-literal.net' suffix\n      // only then resulting string can be considered a valid IPv6 address. Yes, this is extremely weird!\n      // For more details see:\n      //   https://social.msdn.microsoft.com/Forums/ie/en-US/06cca73b-63c2-4bf9-899b-b229c50449ff/whether-ie10-websocket-support-ipv6?forum=iewebdevelopment\n      //   https://www.itdojo.com/ipv6-addresses-and-unc-path-names-overcoming-illegal/\n      // Creation of WebSocket with unconverted address results in SyntaxError without message or stacktrace.\n      // That is why here we \"catch\" SyntaxError and rewrite IPv6 address if needed.\n      var windowsFriendlyUrl = asWindowsFriendlyIPv6Address(scheme, address);\n      return socketFactory(windowsFriendlyUrl);\n    } else {\n      throw error;\n    }\n  }\n}\nfunction isIPv6AddressIssueOnWindows(error, address) {\n  return error.name === 'SyntaxError' && isIPv6Address(address.asHostPort());\n}\nfunction isIPv6Address(hostAndPort) {\n  return hostAndPort.charAt(0) === '[' && hostAndPort.indexOf(']') !== -1;\n}\nfunction asWindowsFriendlyIPv6Address(scheme, address) {\n  // replace all ':' with '-'\n  var hostWithoutColons = address.host().replace(new RegExp(':', 'g'), '-');\n  // replace '%' with 's' for link-local IPv6 address like 'fe80::1%lo0'\n  var hostWithoutPercent = hostWithoutColons.replace('%', 's');\n  // append magic '.ipv6-literal.net' suffix\n  var ipv6Host = hostWithoutPercent + '.ipv6-literal.net';\n  return scheme + \"://\" + ipv6Host + \":\" + address.port();\n}\n/**\n * @param {ChannelConfig} config - configuration for the channel.\n * @param {function(): string} protocolSupplier - function that detects protocol of the web page.\n * @return {{scheme: string|null, error: Neo4jError|null}} object containing either scheme or error.\n */\nfunction determineWebSocketScheme(config, protocolSupplier) {\n  var encryptionOn = isEncryptionExplicitlyTurnedOn(config);\n  var encryptionOff = isEncryptionExplicitlyTurnedOff(config);\n  var trust = config.trust;\n  var secureProtocol = isProtocolSecure(protocolSupplier);\n  verifyEncryptionSettings(encryptionOn, encryptionOff, secureProtocol);\n  if (encryptionOff) {\n    // encryption explicitly turned off in the config\n    return {\n      scheme: 'ws',\n      error: null\n    };\n  }\n  if (secureProtocol) {\n    // driver is used in a secure https web page, use 'wss'\n    return {\n      scheme: 'wss',\n      error: null\n    };\n  }\n  if (encryptionOn) {\n    // encryption explicitly requested in the config\n    if (!trust || trust === 'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES') {\n      // trust strategy not specified or the only supported strategy is specified\n      return {\n        scheme: 'wss',\n        error: null\n      };\n    } else {\n      var error = (0, neo4j_driver_core_1.newError)('The browser version of this driver only supports one trust ' + \"strategy, 'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES'. \" + trust + ' is not supported. Please ' + 'either use TRUST_SYSTEM_CA_SIGNED_CERTIFICATES or disable encryption by setting ' + '`encrypted:\"' + ENCRYPTION_OFF + '\"` in the driver configuration.');\n      return {\n        scheme: null,\n        error: error\n      };\n    }\n  }\n  // default to unencrypted web socket\n  return {\n    scheme: 'ws',\n    error: null\n  };\n}\n/**\n * @param {ChannelConfig} config - configuration for the channel.\n * @return {boolean} `true` if encryption enabled in the config, `false` otherwise.\n */\nfunction isEncryptionExplicitlyTurnedOn(config) {\n  return config.encrypted === true || config.encrypted === ENCRYPTION_ON;\n}\n/**\n * @param {ChannelConfig} config - configuration for the channel.\n * @return {boolean} `true` if encryption disabled in the config, `false` otherwise.\n */\nfunction isEncryptionExplicitlyTurnedOff(config) {\n  return config.encrypted === false || config.encrypted === ENCRYPTION_OFF;\n}\n/**\n * @param {function(): string} protocolSupplier - function that detects protocol of the web page.\n * @return {boolean} `true` if protocol returned by the given function is secure, `false` otherwise.\n */\nfunction isProtocolSecure(protocolSupplier) {\n  var protocol = typeof protocolSupplier === 'function' ? protocolSupplier() : '';\n  return protocol && protocol.toLowerCase().indexOf('https') >= 0;\n}\nfunction verifyEncryptionSettings(encryptionOn, encryptionOff, secureProtocol) {\n  if (secureProtocol === null) {\n    // do nothing sice the protocol could not be identified\n  } else if (encryptionOn && !secureProtocol) {\n    // encryption explicitly turned on for a driver used on a HTTP web page\n    console.warn('Neo4j driver is configured to use secure WebSocket on a HTTP web page. ' + 'WebSockets might not work in a mixed content environment. ' + 'Please consider configuring driver to not use encryption.');\n  } else if (encryptionOff && secureProtocol) {\n    // encryption explicitly turned off for a driver used on a HTTPS web page\n    console.warn('Neo4j driver is configured to use insecure WebSocket on a HTTPS web page. ' + 'WebSockets might not work in a mixed content environment. ' + 'Please consider configuring driver to use encryption.');\n  }\n}\nfunction detectWebPageProtocol() {\n  return typeof window !== 'undefined' && window.location ? window.location.protocol : null;\n}","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","channel_buf_1","require","neo4j_driver_core_1","_a","internal","util","ENCRYPTION_OFF","ENCRYPTION_ON","WS_CONNECTING","WS_OPEN","WS_CLOSING","WS_CLOSED","WebSocketChannel","config","protocolSupplier","socketFactory","detectWebPageProtocol","url","WebSocket","_open","_pending","_error","_handleConnectionError","bind","_config","determineWebSocketScheme","scheme","error","_ws","createWebSocket","address","binaryType","self","onclose","e","wasClean","onopen","_clearConnectionTimeout","pending","i","length","write","onmessage","event","b","default","data","onerror","_connectionTimeoutFired","_connectionTimeoutId","_setupConnectionTimeout","prototype","newError","connectionTimeout","connectionErrorCode","readyState","buffer","push","send","_buffer","close","_this","Promise","resolve","reject","setupReceiveTimeout","receiveTimeout","timeout","webSocket_1","setTimeout","timeoutId","clearTimeout","asHostPort","isIPv6AddressIssueOnWindows","windowsFriendlyUrl","asWindowsFriendlyIPv6Address","name","isIPv6Address","hostAndPort","charAt","indexOf","hostWithoutColons","host","replace","RegExp","hostWithoutPercent","ipv6Host","port","encryptionOn","isEncryptionExplicitlyTurnedOn","encryptionOff","isEncryptionExplicitlyTurnedOff","trust","secureProtocol","isProtocolSecure","verifyEncryptionSettings","encrypted","protocol","toLowerCase","console","warn","window","location"],"sources":["C:/Stanford/DigitalTracesApp3/node_modules/neo4j-driver-bolt-connection/lib/channel/browser/browser-channel.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar channel_buf_1 = __importDefault(require(\"../channel-buf\"));\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar _a = neo4j_driver_core_1.internal.util, ENCRYPTION_OFF = _a.ENCRYPTION_OFF, ENCRYPTION_ON = _a.ENCRYPTION_ON;\n// Just to be sure that these values are with us even after WebSocket is injected\n// for tests.\nvar WS_CONNECTING = 0;\nvar WS_OPEN = 1;\nvar WS_CLOSING = 2;\nvar WS_CLOSED = 3;\n/**\n * Create a new WebSocketChannel to be used in web browsers.\n * @access private\n */\nvar WebSocketChannel = /** @class */ (function () {\n    /**\n     * Create new instance\n     * @param {ChannelConfig} config - configuration for this channel.\n     * @param {function(): string} protocolSupplier - function that detects protocol of the web page. Should only be used in tests.\n     */\n    function WebSocketChannel(config, protocolSupplier, socketFactory) {\n        if (protocolSupplier === void 0) { protocolSupplier = detectWebPageProtocol; }\n        if (socketFactory === void 0) { socketFactory = function (url) { return new WebSocket(url); }; }\n        this._open = true;\n        this._pending = [];\n        this._error = null;\n        this._handleConnectionError = this._handleConnectionError.bind(this);\n        this._config = config;\n        var _a = determineWebSocketScheme(config, protocolSupplier), scheme = _a.scheme, error = _a.error;\n        if (error) {\n            this._error = error;\n            return;\n        }\n        this._ws = createWebSocket(scheme, config.address, socketFactory);\n        this._ws.binaryType = 'arraybuffer';\n        var self = this;\n        // All connection errors are not sent to the error handler\n        // we must also check for dirty close calls\n        this._ws.onclose = function (e) {\n            if (e && !e.wasClean) {\n                self._handleConnectionError();\n            }\n            self._open = false;\n        };\n        this._ws.onopen = function () {\n            // Connected! Cancel the connection timeout\n            self._clearConnectionTimeout();\n            // Drain all pending messages\n            var pending = self._pending;\n            self._pending = null;\n            for (var i = 0; i < pending.length; i++) {\n                self.write(pending[i]);\n            }\n        };\n        this._ws.onmessage = function (event) {\n            if (self.onmessage) {\n                var b = new channel_buf_1.default(event.data);\n                self.onmessage(b);\n            }\n        };\n        this._ws.onerror = this._handleConnectionError;\n        this._connectionTimeoutFired = false;\n        this._connectionTimeoutId = this._setupConnectionTimeout();\n    }\n    WebSocketChannel.prototype._handleConnectionError = function () {\n        if (this._connectionTimeoutFired) {\n            // timeout fired - not connected within configured time\n            this._error = (0, neo4j_driver_core_1.newError)(\"Failed to establish connection in \" + this._config.connectionTimeout + \"ms\", this._config.connectionErrorCode);\n            if (this.onerror) {\n                this.onerror(this._error);\n            }\n            return;\n        }\n        // onerror triggers on websocket close as well.. don't get me started.\n        if (this._open) {\n            // http://stackoverflow.com/questions/25779831/how-to-catch-websocket-connection-to-ws-xxxnn-failed-connection-closed-be\n            this._error = (0, neo4j_driver_core_1.newError)('WebSocket connection failure. Due to security ' +\n                'constraints in your web browser, the reason for the failure is not available ' +\n                'to this Neo4j Driver. Please use your browsers development console to determine ' +\n                'the root cause of the failure. Common reasons include the database being ' +\n                'unavailable, using the wrong connection URL or temporary network problems. ' +\n                'If you have enabled encryption, ensure your browser is configured to trust the ' +\n                'certificate Neo4j is configured to use. WebSocket `readyState` is: ' +\n                this._ws.readyState, this._config.connectionErrorCode);\n            if (this.onerror) {\n                this.onerror(this._error);\n            }\n        }\n    };\n    /**\n     * Write the passed in buffer to connection\n     * @param {ChannelBuffer} buffer - Buffer to write\n     */\n    WebSocketChannel.prototype.write = function (buffer) {\n        // If there is a pending queue, push this on that queue. This means\n        // we are not yet connected, so we queue things locally.\n        if (this._pending !== null) {\n            this._pending.push(buffer);\n        }\n        else if (buffer instanceof channel_buf_1.default) {\n            try {\n                this._ws.send(buffer._buffer);\n            }\n            catch (error) {\n                if (this._ws.readyState !== WS_OPEN) {\n                    // Websocket has been closed\n                    this._handleConnectionError();\n                }\n                else {\n                    // Some other error occured\n                    throw error;\n                }\n            }\n        }\n        else {\n            throw (0, neo4j_driver_core_1.newError)(\"Don't know how to send buffer: \" + buffer);\n        }\n    };\n    /**\n     * Close the connection\n     * @returns {Promise} A promise that will be resolved after channel is closed\n     */\n    WebSocketChannel.prototype.close = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this._ws && _this._ws.readyState !== WS_CLOSED) {\n                _this._open = false;\n                _this._clearConnectionTimeout();\n                _this._ws.onclose = function () { return resolve(); };\n                _this._ws.close();\n            }\n            else {\n                resolve();\n            }\n        });\n    };\n    /**\n     * Setup the receive timeout for the channel.\n     *\n     * Not supported for the browser channel.\n     *\n     * @param {number} receiveTimeout The amount of time the channel will keep without receive any data before timeout (ms)\n     * @returns {void}\n     */\n    WebSocketChannel.prototype.setupReceiveTimeout = function (receiveTimeout) { };\n    /**\n     * Set connection timeout on the given WebSocket, if configured.\n     * @return {number} the timeout id or null.\n     * @private\n     */\n    WebSocketChannel.prototype._setupConnectionTimeout = function () {\n        var _this = this;\n        var timeout = this._config.connectionTimeout;\n        if (timeout) {\n            var webSocket_1 = this._ws;\n            return setTimeout(function () {\n                if (webSocket_1.readyState !== WS_OPEN) {\n                    _this._connectionTimeoutFired = true;\n                    webSocket_1.close();\n                }\n            }, timeout);\n        }\n        return null;\n    };\n    /**\n     * Remove active connection timeout, if any.\n     * @private\n     */\n    WebSocketChannel.prototype._clearConnectionTimeout = function () {\n        var timeoutId = this._connectionTimeoutId;\n        if (timeoutId || timeoutId === 0) {\n            this._connectionTimeoutFired = false;\n            this._connectionTimeoutId = null;\n            clearTimeout(timeoutId);\n        }\n    };\n    return WebSocketChannel;\n}());\nexports.default = WebSocketChannel;\nfunction createWebSocket(scheme, address, socketFactory) {\n    var url = scheme + '://' + address.asHostPort();\n    try {\n        return socketFactory(url);\n    }\n    catch (error) {\n        if (isIPv6AddressIssueOnWindows(error, address)) {\n            // WebSocket in IE and Edge browsers on Windows do not support regular IPv6 address syntax because they contain ':'.\n            // It's an invalid character for UNC (https://en.wikipedia.org/wiki/IPv6_address#Literal_IPv6_addresses_in_UNC_path_names)\n            // and Windows requires IPv6 to be changes in the following way:\n            //   1) replace all ':' with '-'\n            //   2) replace '%' with 's' for link-local address\n            //   3) append '.ipv6-literal.net' suffix\n            // only then resulting string can be considered a valid IPv6 address. Yes, this is extremely weird!\n            // For more details see:\n            //   https://social.msdn.microsoft.com/Forums/ie/en-US/06cca73b-63c2-4bf9-899b-b229c50449ff/whether-ie10-websocket-support-ipv6?forum=iewebdevelopment\n            //   https://www.itdojo.com/ipv6-addresses-and-unc-path-names-overcoming-illegal/\n            // Creation of WebSocket with unconverted address results in SyntaxError without message or stacktrace.\n            // That is why here we \"catch\" SyntaxError and rewrite IPv6 address if needed.\n            var windowsFriendlyUrl = asWindowsFriendlyIPv6Address(scheme, address);\n            return socketFactory(windowsFriendlyUrl);\n        }\n        else {\n            throw error;\n        }\n    }\n}\nfunction isIPv6AddressIssueOnWindows(error, address) {\n    return error.name === 'SyntaxError' && isIPv6Address(address.asHostPort());\n}\nfunction isIPv6Address(hostAndPort) {\n    return hostAndPort.charAt(0) === '[' && hostAndPort.indexOf(']') !== -1;\n}\nfunction asWindowsFriendlyIPv6Address(scheme, address) {\n    // replace all ':' with '-'\n    var hostWithoutColons = address.host().replace(new RegExp(':', 'g'), '-');\n    // replace '%' with 's' for link-local IPv6 address like 'fe80::1%lo0'\n    var hostWithoutPercent = hostWithoutColons.replace('%', 's');\n    // append magic '.ipv6-literal.net' suffix\n    var ipv6Host = hostWithoutPercent + '.ipv6-literal.net';\n    return scheme + \"://\" + ipv6Host + \":\" + address.port();\n}\n/**\n * @param {ChannelConfig} config - configuration for the channel.\n * @param {function(): string} protocolSupplier - function that detects protocol of the web page.\n * @return {{scheme: string|null, error: Neo4jError|null}} object containing either scheme or error.\n */\nfunction determineWebSocketScheme(config, protocolSupplier) {\n    var encryptionOn = isEncryptionExplicitlyTurnedOn(config);\n    var encryptionOff = isEncryptionExplicitlyTurnedOff(config);\n    var trust = config.trust;\n    var secureProtocol = isProtocolSecure(protocolSupplier);\n    verifyEncryptionSettings(encryptionOn, encryptionOff, secureProtocol);\n    if (encryptionOff) {\n        // encryption explicitly turned off in the config\n        return { scheme: 'ws', error: null };\n    }\n    if (secureProtocol) {\n        // driver is used in a secure https web page, use 'wss'\n        return { scheme: 'wss', error: null };\n    }\n    if (encryptionOn) {\n        // encryption explicitly requested in the config\n        if (!trust || trust === 'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES') {\n            // trust strategy not specified or the only supported strategy is specified\n            return { scheme: 'wss', error: null };\n        }\n        else {\n            var error = (0, neo4j_driver_core_1.newError)('The browser version of this driver only supports one trust ' +\n                \"strategy, 'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES'. \" +\n                trust +\n                ' is not supported. Please ' +\n                'either use TRUST_SYSTEM_CA_SIGNED_CERTIFICATES or disable encryption by setting ' +\n                '`encrypted:\"' +\n                ENCRYPTION_OFF +\n                '\"` in the driver configuration.');\n            return { scheme: null, error: error };\n        }\n    }\n    // default to unencrypted web socket\n    return { scheme: 'ws', error: null };\n}\n/**\n * @param {ChannelConfig} config - configuration for the channel.\n * @return {boolean} `true` if encryption enabled in the config, `false` otherwise.\n */\nfunction isEncryptionExplicitlyTurnedOn(config) {\n    return config.encrypted === true || config.encrypted === ENCRYPTION_ON;\n}\n/**\n * @param {ChannelConfig} config - configuration for the channel.\n * @return {boolean} `true` if encryption disabled in the config, `false` otherwise.\n */\nfunction isEncryptionExplicitlyTurnedOff(config) {\n    return config.encrypted === false || config.encrypted === ENCRYPTION_OFF;\n}\n/**\n * @param {function(): string} protocolSupplier - function that detects protocol of the web page.\n * @return {boolean} `true` if protocol returned by the given function is secure, `false` otherwise.\n */\nfunction isProtocolSecure(protocolSupplier) {\n    var protocol = typeof protocolSupplier === 'function' ? protocolSupplier() : '';\n    return protocol && protocol.toLowerCase().indexOf('https') >= 0;\n}\nfunction verifyEncryptionSettings(encryptionOn, encryptionOff, secureProtocol) {\n    if (secureProtocol === null) {\n        // do nothing sice the protocol could not be identified\n    }\n    else if (encryptionOn && !secureProtocol) {\n        // encryption explicitly turned on for a driver used on a HTTP web page\n        console.warn('Neo4j driver is configured to use secure WebSocket on a HTTP web page. ' +\n            'WebSockets might not work in a mixed content environment. ' +\n            'Please consider configuring driver to not use encryption.');\n    }\n    else if (encryptionOff && secureProtocol) {\n        // encryption explicitly turned off for a driver used on a HTTPS web page\n        console.warn('Neo4j driver is configured to use insecure WebSocket on a HTTPS web page. ' +\n            'WebSockets might not work in a mixed content environment. ' +\n            'Please consider configuring driver to use encryption.');\n    }\n}\nfunction detectWebPageProtocol() {\n    return typeof window !== 'undefined' && window.location\n        ? window.location.protocol\n        : null;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}