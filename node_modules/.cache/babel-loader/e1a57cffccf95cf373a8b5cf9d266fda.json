{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Url = exports.formatIPv6Address = exports.formatIPv4Address = exports.defaultPortForScheme = exports.parseDatabaseUrl = void 0;\nvar util_1 = require(\"./util\");\nvar DEFAULT_BOLT_PORT = 7687;\nvar DEFAULT_HTTP_PORT = 7474;\nvar DEFAULT_HTTPS_PORT = 7473;\nvar Url = /** @class */function () {\n  function Url(scheme, host, port, hostAndPort, query) {\n    /**\n     * Nullable scheme (protocol) of the URL.\n     * Example: 'bolt', 'neo4j', 'http', 'https', etc.\n     * @type {string}\n     */\n    this.scheme = scheme;\n    /**\n     * Nonnull host name or IP address. IPv6 not wrapped in square brackets.\n     * Example: 'neo4j.com', 'localhost', '127.0.0.1', '192.168.10.15', '::1', '2001:4860:4860::8844', etc.\n     * @type {string}\n     */\n    this.host = host;\n    /**\n     * Nonnull number representing port. Default port for the given scheme is used if given URL string\n     * does not contain port. Example: 7687 for bolt, 7474 for HTTP and 7473 for HTTPS.\n     * @type {number}\n     */\n    this.port = port;\n    /**\n     * Nonnull host name or IP address plus port, separated by ':'. IPv6 wrapped in square brackets.\n     * Example: 'neo4j.com', 'neo4j.com:7687', '127.0.0.1', '127.0.0.1:8080', '[2001:4860:4860::8844]',\n     * '[2001:4860:4860::8844]:9090', etc.\n     * @type {string}\n     */\n    this.hostAndPort = hostAndPort;\n    /**\n     * Nonnull object representing parsed query string key-value pairs. Duplicated keys not supported.\n     * Example: '{}', '{'key1': 'value1', 'key2': 'value2'}', etc.\n     * @type {Object}\n     */\n    this.query = query;\n  }\n  return Url;\n}();\nexports.Url = Url;\nfunction parseDatabaseUrl(url) {\n  (0, util_1.assertString)(url, 'URL');\n  var sanitized = sanitizeUrl(url);\n  var parsedUrl = uriJsParse(sanitized.url);\n  var scheme = sanitized.schemeMissing ? null : extractScheme(parsedUrl.scheme);\n  var host = extractHost(parsedUrl.host); // no square brackets for IPv6\n  var formattedHost = formatHost(host); // has square brackets for IPv6\n  var port = extractPort(parsedUrl.port, scheme);\n  var hostAndPort = formattedHost + \":\" + port;\n  var query = extractQuery(\n  // @ts-ignore\n  parsedUrl.query || extractResourceQueryString(parsedUrl.resourceName), url);\n  return new Url(scheme, host, port, hostAndPort, query);\n}\nexports.parseDatabaseUrl = parseDatabaseUrl;\nfunction extractResourceQueryString(resource) {\n  if (typeof resource !== 'string') {\n    return null;\n  }\n  var _a = __read(resource.split('?'), 2),\n    _ = _a[0],\n    query = _a[1];\n  return query;\n}\nfunction sanitizeUrl(url) {\n  url = url.trim();\n  if (url.indexOf('://') === -1) {\n    // url does not contain scheme, add dummy 'none://' to make parser work correctly\n    return {\n      schemeMissing: true,\n      url: \"none://\" + url\n    };\n  }\n  return {\n    schemeMissing: false,\n    url: url\n  };\n}\nfunction extractScheme(scheme) {\n  if (scheme) {\n    scheme = scheme.trim();\n    if (scheme.charAt(scheme.length - 1) === ':') {\n      scheme = scheme.substring(0, scheme.length - 1);\n    }\n    return scheme;\n  }\n  return null;\n}\nfunction extractHost(host, url) {\n  if (!host) {\n    throw new Error(\"Unable to extract host from \" + url);\n  }\n  return host.trim();\n}\nfunction extractPort(portString, scheme) {\n  var port = typeof portString === 'string' ? parseInt(portString, 10) : portString;\n  return port === 0 || port ? port : defaultPortForScheme(scheme);\n}\nfunction extractQuery(queryString, url) {\n  var query = queryString ? trimAndSanitizeQuery(queryString) : null;\n  var context = {};\n  if (query) {\n    query.split('&').forEach(function (pair) {\n      var keyValue = pair.split('=');\n      if (keyValue.length !== 2) {\n        throw new Error(\"Invalid parameters: '\" + keyValue + \"' in URL '\" + url + \"'.\");\n      }\n      var key = trimAndVerifyQueryElement(keyValue[0], 'key', url);\n      var value = trimAndVerifyQueryElement(keyValue[1], 'value', url);\n      if (context[key]) {\n        throw new Error(\"Duplicated query parameters with key '\" + key + \"' in URL '\" + url + \"'\");\n      }\n      context[key] = value;\n    });\n  }\n  return context;\n}\nfunction trimAndSanitizeQuery(query) {\n  query = (query || '').trim();\n  if (query && query.charAt(0) === '?') {\n    query = query.substring(1, query.length);\n  }\n  return query;\n}\nfunction trimAndVerifyQueryElement(element, name, url) {\n  element = (element || '').trim();\n  if (!element) {\n    throw new Error(\"Illegal empty \" + name + \" in URL query '\" + url + \"'\");\n  }\n  return element;\n}\nfunction escapeIPv6Address(address) {\n  var startsWithSquareBracket = address.charAt(0) === '[';\n  var endsWithSquareBracket = address.charAt(address.length - 1) === ']';\n  if (!startsWithSquareBracket && !endsWithSquareBracket) {\n    return \"[\" + address + \"]\";\n  } else if (startsWithSquareBracket && endsWithSquareBracket) {\n    return address;\n  } else {\n    throw new Error(\"Illegal IPv6 address \" + address);\n  }\n}\nfunction formatHost(host) {\n  if (!host) {\n    throw new Error(\"Illegal host \" + host);\n  }\n  var isIPv6Address = host.indexOf(':') >= 0;\n  return isIPv6Address ? escapeIPv6Address(host) : host;\n}\nfunction formatIPv4Address(address, port) {\n  return address + \":\" + port;\n}\nexports.formatIPv4Address = formatIPv4Address;\nfunction formatIPv6Address(address, port) {\n  var escapedAddress = escapeIPv6Address(address);\n  return escapedAddress + \":\" + port;\n}\nexports.formatIPv6Address = formatIPv6Address;\nfunction defaultPortForScheme(scheme) {\n  if (scheme === 'http') {\n    return DEFAULT_HTTP_PORT;\n  } else if (scheme === 'https') {\n    return DEFAULT_HTTPS_PORT;\n  } else {\n    return DEFAULT_BOLT_PORT;\n  }\n}\nexports.defaultPortForScheme = defaultPortForScheme;\nfunction uriJsParse(value) {\n  // JS version of Python partition function\n  function partition(s, delimiter) {\n    var i = s.indexOf(delimiter);\n    if (i >= 0) return [s.substring(0, i), s[i], s.substring(i + 1)];else return [s, '', ''];\n  }\n  // JS version of Python rpartition function\n  function rpartition(s, delimiter) {\n    var i = s.lastIndexOf(delimiter);\n    if (i >= 0) return [s.substring(0, i), s[i], s.substring(i + 1)];else return ['', '', s];\n  }\n  function between(s, ldelimiter, rdelimiter) {\n    var lpartition = partition(s, ldelimiter);\n    var rpartition = partition(lpartition[2], rdelimiter);\n    return [rpartition[0], rpartition[2]];\n  }\n  // Parse an authority string into an object\n  // with the following keys:\n  // - userInfo (optional, might contain both user name and password)\n  // - host\n  // - port (optional, included only as a string)\n  function parseAuthority(value) {\n    var parsed = {},\n      parts;\n    // Parse user info\n    parts = rpartition(value, '@');\n    if (parts[1] === '@') {\n      parsed.userInfo = decodeURIComponent(parts[0]);\n      value = parts[2];\n    }\n    // Parse host and port\n    var _a = __read(between(value, \"[\", \"]\"), 2),\n      ipv6Host = _a[0],\n      rest = _a[1];\n    if (ipv6Host !== '') {\n      parsed.host = ipv6Host;\n      parts = partition(rest, ':');\n    } else {\n      parts = partition(value, ':');\n      parsed.host = parts[0];\n    }\n    if (parts[1] === ':') {\n      parsed.port = parts[2];\n    }\n    return parsed;\n  }\n  var parsed = {},\n    parts;\n  // Parse scheme\n  parts = partition(value, ':');\n  if (parts[1] === ':') {\n    parsed.scheme = decodeURIComponent(parts[0]);\n    value = parts[2];\n  }\n  // Parse fragment\n  parts = partition(value, '#');\n  if (parts[1] === '#') {\n    parsed.fragment = decodeURIComponent(parts[2]);\n    value = parts[0];\n  }\n  // Parse query\n  parts = partition(value, '?');\n  if (parts[1] === '?') {\n    parsed.query = parts[2];\n    value = parts[0];\n  }\n  // Parse authority and path\n  if (value.startsWith('//')) {\n    parts = partition(value.substr(2), '/');\n    parsed = __assign(__assign({}, parsed), parseAuthority(parts[0]));\n    parsed.path = parts[1] + parts[2];\n  } else {\n    parsed.path = value;\n  }\n  return parsed;\n}","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__read","o","m","Symbol","iterator","r","ar","e","next","done","push","value","error","defineProperty","exports","Url","formatIPv6Address","formatIPv4Address","defaultPortForScheme","parseDatabaseUrl","util_1","require","DEFAULT_BOLT_PORT","DEFAULT_HTTP_PORT","DEFAULT_HTTPS_PORT","scheme","host","port","hostAndPort","query","url","assertString","sanitized","sanitizeUrl","parsedUrl","uriJsParse","schemeMissing","extractScheme","extractHost","formattedHost","formatHost","extractPort","extractQuery","extractResourceQueryString","resourceName","resource","_a","split","_","trim","indexOf","charAt","substring","Error","portString","parseInt","queryString","trimAndSanitizeQuery","context","forEach","pair","keyValue","key","trimAndVerifyQueryElement","element","name","escapeIPv6Address","address","startsWithSquareBracket","endsWithSquareBracket","isIPv6Address","escapedAddress","partition","delimiter","rpartition","lastIndexOf","between","ldelimiter","rdelimiter","lpartition","parseAuthority","parsed","parts","userInfo","decodeURIComponent","ipv6Host","rest","fragment","startsWith","substr","path"],"sources":["C:/Stanford/DigitalTracesApp3/node_modules/neo4j-driver-core/lib/internal/url-util.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Url = exports.formatIPv6Address = exports.formatIPv4Address = exports.defaultPortForScheme = exports.parseDatabaseUrl = void 0;\nvar util_1 = require(\"./util\");\nvar DEFAULT_BOLT_PORT = 7687;\nvar DEFAULT_HTTP_PORT = 7474;\nvar DEFAULT_HTTPS_PORT = 7473;\nvar Url = /** @class */ (function () {\n    function Url(scheme, host, port, hostAndPort, query) {\n        /**\n         * Nullable scheme (protocol) of the URL.\n         * Example: 'bolt', 'neo4j', 'http', 'https', etc.\n         * @type {string}\n         */\n        this.scheme = scheme;\n        /**\n         * Nonnull host name or IP address. IPv6 not wrapped in square brackets.\n         * Example: 'neo4j.com', 'localhost', '127.0.0.1', '192.168.10.15', '::1', '2001:4860:4860::8844', etc.\n         * @type {string}\n         */\n        this.host = host;\n        /**\n         * Nonnull number representing port. Default port for the given scheme is used if given URL string\n         * does not contain port. Example: 7687 for bolt, 7474 for HTTP and 7473 for HTTPS.\n         * @type {number}\n         */\n        this.port = port;\n        /**\n         * Nonnull host name or IP address plus port, separated by ':'. IPv6 wrapped in square brackets.\n         * Example: 'neo4j.com', 'neo4j.com:7687', '127.0.0.1', '127.0.0.1:8080', '[2001:4860:4860::8844]',\n         * '[2001:4860:4860::8844]:9090', etc.\n         * @type {string}\n         */\n        this.hostAndPort = hostAndPort;\n        /**\n         * Nonnull object representing parsed query string key-value pairs. Duplicated keys not supported.\n         * Example: '{}', '{'key1': 'value1', 'key2': 'value2'}', etc.\n         * @type {Object}\n         */\n        this.query = query;\n    }\n    return Url;\n}());\nexports.Url = Url;\nfunction parseDatabaseUrl(url) {\n    (0, util_1.assertString)(url, 'URL');\n    var sanitized = sanitizeUrl(url);\n    var parsedUrl = uriJsParse(sanitized.url);\n    var scheme = sanitized.schemeMissing\n        ? null\n        : extractScheme(parsedUrl.scheme);\n    var host = extractHost(parsedUrl.host); // no square brackets for IPv6\n    var formattedHost = formatHost(host); // has square brackets for IPv6\n    var port = extractPort(parsedUrl.port, scheme);\n    var hostAndPort = formattedHost + \":\" + port;\n    var query = extractQuery(\n    // @ts-ignore\n    parsedUrl.query || extractResourceQueryString(parsedUrl.resourceName), url);\n    return new Url(scheme, host, port, hostAndPort, query);\n}\nexports.parseDatabaseUrl = parseDatabaseUrl;\nfunction extractResourceQueryString(resource) {\n    if (typeof resource !== 'string') {\n        return null;\n    }\n    var _a = __read(resource.split('?'), 2), _ = _a[0], query = _a[1];\n    return query;\n}\nfunction sanitizeUrl(url) {\n    url = url.trim();\n    if (url.indexOf('://') === -1) {\n        // url does not contain scheme, add dummy 'none://' to make parser work correctly\n        return { schemeMissing: true, url: \"none://\" + url };\n    }\n    return { schemeMissing: false, url: url };\n}\nfunction extractScheme(scheme) {\n    if (scheme) {\n        scheme = scheme.trim();\n        if (scheme.charAt(scheme.length - 1) === ':') {\n            scheme = scheme.substring(0, scheme.length - 1);\n        }\n        return scheme;\n    }\n    return null;\n}\nfunction extractHost(host, url) {\n    if (!host) {\n        throw new Error(\"Unable to extract host from \" + url);\n    }\n    return host.trim();\n}\nfunction extractPort(portString, scheme) {\n    var port = typeof portString === 'string' ? parseInt(portString, 10) : portString;\n    return port === 0 || port ? port : defaultPortForScheme(scheme);\n}\nfunction extractQuery(queryString, url) {\n    var query = queryString ? trimAndSanitizeQuery(queryString) : null;\n    var context = {};\n    if (query) {\n        query.split('&').forEach(function (pair) {\n            var keyValue = pair.split('=');\n            if (keyValue.length !== 2) {\n                throw new Error(\"Invalid parameters: '\" + keyValue + \"' in URL '\" + url + \"'.\");\n            }\n            var key = trimAndVerifyQueryElement(keyValue[0], 'key', url);\n            var value = trimAndVerifyQueryElement(keyValue[1], 'value', url);\n            if (context[key]) {\n                throw new Error(\"Duplicated query parameters with key '\" + key + \"' in URL '\" + url + \"'\");\n            }\n            context[key] = value;\n        });\n    }\n    return context;\n}\nfunction trimAndSanitizeQuery(query) {\n    query = (query || '').trim();\n    if (query && query.charAt(0) === '?') {\n        query = query.substring(1, query.length);\n    }\n    return query;\n}\nfunction trimAndVerifyQueryElement(element, name, url) {\n    element = (element || '').trim();\n    if (!element) {\n        throw new Error(\"Illegal empty \" + name + \" in URL query '\" + url + \"'\");\n    }\n    return element;\n}\nfunction escapeIPv6Address(address) {\n    var startsWithSquareBracket = address.charAt(0) === '[';\n    var endsWithSquareBracket = address.charAt(address.length - 1) === ']';\n    if (!startsWithSquareBracket && !endsWithSquareBracket) {\n        return \"[\" + address + \"]\";\n    }\n    else if (startsWithSquareBracket && endsWithSquareBracket) {\n        return address;\n    }\n    else {\n        throw new Error(\"Illegal IPv6 address \" + address);\n    }\n}\nfunction formatHost(host) {\n    if (!host) {\n        throw new Error(\"Illegal host \" + host);\n    }\n    var isIPv6Address = host.indexOf(':') >= 0;\n    return isIPv6Address ? escapeIPv6Address(host) : host;\n}\nfunction formatIPv4Address(address, port) {\n    return address + \":\" + port;\n}\nexports.formatIPv4Address = formatIPv4Address;\nfunction formatIPv6Address(address, port) {\n    var escapedAddress = escapeIPv6Address(address);\n    return escapedAddress + \":\" + port;\n}\nexports.formatIPv6Address = formatIPv6Address;\nfunction defaultPortForScheme(scheme) {\n    if (scheme === 'http') {\n        return DEFAULT_HTTP_PORT;\n    }\n    else if (scheme === 'https') {\n        return DEFAULT_HTTPS_PORT;\n    }\n    else {\n        return DEFAULT_BOLT_PORT;\n    }\n}\nexports.defaultPortForScheme = defaultPortForScheme;\nfunction uriJsParse(value) {\n    // JS version of Python partition function\n    function partition(s, delimiter) {\n        var i = s.indexOf(delimiter);\n        if (i >= 0)\n            return [s.substring(0, i), s[i], s.substring(i + 1)];\n        else\n            return [s, '', ''];\n    }\n    // JS version of Python rpartition function\n    function rpartition(s, delimiter) {\n        var i = s.lastIndexOf(delimiter);\n        if (i >= 0)\n            return [s.substring(0, i), s[i], s.substring(i + 1)];\n        else\n            return ['', '', s];\n    }\n    function between(s, ldelimiter, rdelimiter) {\n        var lpartition = partition(s, ldelimiter);\n        var rpartition = partition(lpartition[2], rdelimiter);\n        return [rpartition[0], rpartition[2]];\n    }\n    // Parse an authority string into an object\n    // with the following keys:\n    // - userInfo (optional, might contain both user name and password)\n    // - host\n    // - port (optional, included only as a string)\n    function parseAuthority(value) {\n        var parsed = {}, parts;\n        // Parse user info\n        parts = rpartition(value, '@');\n        if (parts[1] === '@') {\n            parsed.userInfo = decodeURIComponent(parts[0]);\n            value = parts[2];\n        }\n        // Parse host and port\n        var _a = __read(between(value, \"[\", \"]\"), 2), ipv6Host = _a[0], rest = _a[1];\n        if (ipv6Host !== '') {\n            parsed.host = ipv6Host;\n            parts = partition(rest, ':');\n        }\n        else {\n            parts = partition(value, ':');\n            parsed.host = parts[0];\n        }\n        if (parts[1] === ':') {\n            parsed.port = parts[2];\n        }\n        return parsed;\n    }\n    var parsed = {}, parts;\n    // Parse scheme\n    parts = partition(value, ':');\n    if (parts[1] === ':') {\n        parsed.scheme = decodeURIComponent(parts[0]);\n        value = parts[2];\n    }\n    // Parse fragment\n    parts = partition(value, '#');\n    if (parts[1] === '#') {\n        parsed.fragment = decodeURIComponent(parts[2]);\n        value = parts[0];\n    }\n    // Parse query\n    parts = partition(value, '?');\n    if (parts[1] === '?') {\n        parsed.query = parts[2];\n        value = parts[0];\n    }\n    // Parse authority and path\n    if (value.startsWith('//')) {\n        parts = partition(value.substr(2), '/');\n        parsed = __assign(__assign({}, parsed), parseAuthority(parts[0]));\n        parsed.path = parts[1] + parts[2];\n    }\n    else {\n        parsed.path = value;\n    }\n    return parsed;\n}\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,QAAQ,GAAI,IAAI,IAAI,IAAI,CAACA,QAAQ,IAAK,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAASC,CAAC,EAAE;IACpC,KAAK,IAAIC,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAC,CAAC;MAChB,KAAK,IAAII,CAAC,IAAIL,CAAC;QAAE,IAAIH,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAC3DN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;MAAC;IACpB;IACA,OAAON,CAAC;EACZ,CAAC;EACD,OAAOH,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEN,SAAS,CAAC;AAC1C,CAAC;AACD,IAAIO,MAAM,GAAI,IAAI,IAAI,IAAI,CAACA,MAAM,IAAK,UAAUC,CAAC,EAAET,CAAC,EAAE;EAClD,IAAIU,CAAC,GAAG,OAAOC,MAAM,KAAK,UAAU,IAAIF,CAAC,CAACE,MAAM,CAACC,QAAQ,CAAC;EAC1D,IAAI,CAACF,CAAC,EAAE,OAAOD,CAAC;EAChB,IAAIV,CAAC,GAAGW,CAAC,CAACJ,IAAI,CAACG,CAAC,CAAC;IAAEI,CAAC;IAAEC,EAAE,GAAG,EAAE;IAAEC,CAAC;EAChC,IAAI;IACA,OAAO,CAACf,CAAC,KAAK,KAAK,CAAC,IAAIA,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAACa,CAAC,GAAGd,CAAC,CAACiB,IAAI,EAAE,EAAEC,IAAI;MAAEH,EAAE,CAACI,IAAI,CAACL,CAAC,CAACM,KAAK,CAAC;IAAC;EAC/E,CAAC,CACD,OAAOC,KAAK,EAAE;IAAEL,CAAC,GAAG;MAAEK,KAAK,EAAEA;IAAM,CAAC;EAAE,CAAC,SAC/B;IACJ,IAAI;MACA,IAAIP,CAAC,IAAI,CAACA,CAAC,CAACI,IAAI,KAAKP,CAAC,GAAGX,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAEW,CAAC,CAACJ,IAAI,CAACP,CAAC,CAAC;IACpD,CAAC,SACO;MAAE,IAAIgB,CAAC,EAAE,MAAMA,CAAC,CAACK,KAAK;IAAE;EACpC;EACA,OAAON,EAAE;AACb,CAAC;AACDnB,MAAM,CAAC0B,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEH,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DG,OAAO,CAACC,GAAG,GAAGD,OAAO,CAACE,iBAAiB,GAAGF,OAAO,CAACG,iBAAiB,GAAGH,OAAO,CAACI,oBAAoB,GAAGJ,OAAO,CAACK,gBAAgB,GAAG,KAAK,CAAC;AACtI,IAAIC,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC9B,IAAIC,iBAAiB,GAAG,IAAI;AAC5B,IAAIC,iBAAiB,GAAG,IAAI;AAC5B,IAAIC,kBAAkB,GAAG,IAAI;AAC7B,IAAIT,GAAG,GAAG,aAAe,YAAY;EACjC,SAASA,GAAGA,CAACU,MAAM,EAAEC,IAAI,EAAEC,IAAI,EAAEC,WAAW,EAAEC,KAAK,EAAE;IACjD;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACJ,MAAM,GAAGA,MAAM;IACpB;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACC,WAAW,GAAGA,WAAW;IAC9B;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACC,KAAK,GAAGA,KAAK;EACtB;EACA,OAAOd,GAAG;AACd,CAAC,EAAG;AACJD,OAAO,CAACC,GAAG,GAAGA,GAAG;AACjB,SAASI,gBAAgBA,CAACW,GAAG,EAAE;EAC3B,CAAC,CAAC,EAAEV,MAAM,CAACW,YAAY,EAAED,GAAG,EAAE,KAAK,CAAC;EACpC,IAAIE,SAAS,GAAGC,WAAW,CAACH,GAAG,CAAC;EAChC,IAAII,SAAS,GAAGC,UAAU,CAACH,SAAS,CAACF,GAAG,CAAC;EACzC,IAAIL,MAAM,GAAGO,SAAS,CAACI,aAAa,GAC9B,IAAI,GACJC,aAAa,CAACH,SAAS,CAACT,MAAM,CAAC;EACrC,IAAIC,IAAI,GAAGY,WAAW,CAACJ,SAAS,CAACR,IAAI,CAAC,CAAC,CAAC;EACxC,IAAIa,aAAa,GAAGC,UAAU,CAACd,IAAI,CAAC,CAAC,CAAC;EACtC,IAAIC,IAAI,GAAGc,WAAW,CAACP,SAAS,CAACP,IAAI,EAAEF,MAAM,CAAC;EAC9C,IAAIG,WAAW,GAAGW,aAAa,GAAG,GAAG,GAAGZ,IAAI;EAC5C,IAAIE,KAAK,GAAGa,YAAY;EACxB;EACAR,SAAS,CAACL,KAAK,IAAIc,0BAA0B,CAACT,SAAS,CAACU,YAAY,CAAC,EAAEd,GAAG,CAAC;EAC3E,OAAO,IAAIf,GAAG,CAACU,MAAM,EAAEC,IAAI,EAAEC,IAAI,EAAEC,WAAW,EAAEC,KAAK,CAAC;AAC1D;AACAf,OAAO,CAACK,gBAAgB,GAAGA,gBAAgB;AAC3C,SAASwB,0BAA0BA,CAACE,QAAQ,EAAE;EAC1C,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;IAC9B,OAAO,IAAI;EACf;EACA,IAAIC,EAAE,GAAG9C,MAAM,CAAC6C,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAAEC,CAAC,GAAGF,EAAE,CAAC,CAAC,CAAC;IAAEjB,KAAK,GAAGiB,EAAE,CAAC,CAAC,CAAC;EACjE,OAAOjB,KAAK;AAChB;AACA,SAASI,WAAWA,CAACH,GAAG,EAAE;EACtBA,GAAG,GAAGA,GAAG,CAACmB,IAAI,EAAE;EAChB,IAAInB,GAAG,CAACoB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;IAC3B;IACA,OAAO;MAAEd,aAAa,EAAE,IAAI;MAAEN,GAAG,EAAE,SAAS,GAAGA;IAAI,CAAC;EACxD;EACA,OAAO;IAAEM,aAAa,EAAE,KAAK;IAAEN,GAAG,EAAEA;EAAI,CAAC;AAC7C;AACA,SAASO,aAAaA,CAACZ,MAAM,EAAE;EAC3B,IAAIA,MAAM,EAAE;IACRA,MAAM,GAAGA,MAAM,CAACwB,IAAI,EAAE;IACtB,IAAIxB,MAAM,CAAC0B,MAAM,CAAC1B,MAAM,CAAC/B,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;MAC1C+B,MAAM,GAAGA,MAAM,CAAC2B,SAAS,CAAC,CAAC,EAAE3B,MAAM,CAAC/B,MAAM,GAAG,CAAC,CAAC;IACnD;IACA,OAAO+B,MAAM;EACjB;EACA,OAAO,IAAI;AACf;AACA,SAASa,WAAWA,CAACZ,IAAI,EAAEI,GAAG,EAAE;EAC5B,IAAI,CAACJ,IAAI,EAAE;IACP,MAAM,IAAI2B,KAAK,CAAC,8BAA8B,GAAGvB,GAAG,CAAC;EACzD;EACA,OAAOJ,IAAI,CAACuB,IAAI,EAAE;AACtB;AACA,SAASR,WAAWA,CAACa,UAAU,EAAE7B,MAAM,EAAE;EACrC,IAAIE,IAAI,GAAG,OAAO2B,UAAU,KAAK,QAAQ,GAAGC,QAAQ,CAACD,UAAU,EAAE,EAAE,CAAC,GAAGA,UAAU;EACjF,OAAO3B,IAAI,KAAK,CAAC,IAAIA,IAAI,GAAGA,IAAI,GAAGT,oBAAoB,CAACO,MAAM,CAAC;AACnE;AACA,SAASiB,YAAYA,CAACc,WAAW,EAAE1B,GAAG,EAAE;EACpC,IAAID,KAAK,GAAG2B,WAAW,GAAGC,oBAAoB,CAACD,WAAW,CAAC,GAAG,IAAI;EAClE,IAAIE,OAAO,GAAG,CAAC,CAAC;EAChB,IAAI7B,KAAK,EAAE;IACPA,KAAK,CAACkB,KAAK,CAAC,GAAG,CAAC,CAACY,OAAO,CAAC,UAAUC,IAAI,EAAE;MACrC,IAAIC,QAAQ,GAAGD,IAAI,CAACb,KAAK,CAAC,GAAG,CAAC;MAC9B,IAAIc,QAAQ,CAACnE,MAAM,KAAK,CAAC,EAAE;QACvB,MAAM,IAAI2D,KAAK,CAAC,uBAAuB,GAAGQ,QAAQ,GAAG,YAAY,GAAG/B,GAAG,GAAG,IAAI,CAAC;MACnF;MACA,IAAIgC,GAAG,GAAGC,yBAAyB,CAACF,QAAQ,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE/B,GAAG,CAAC;MAC5D,IAAInB,KAAK,GAAGoD,yBAAyB,CAACF,QAAQ,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE/B,GAAG,CAAC;MAChE,IAAI4B,OAAO,CAACI,GAAG,CAAC,EAAE;QACd,MAAM,IAAIT,KAAK,CAAC,wCAAwC,GAAGS,GAAG,GAAG,YAAY,GAAGhC,GAAG,GAAG,GAAG,CAAC;MAC9F;MACA4B,OAAO,CAACI,GAAG,CAAC,GAAGnD,KAAK;IACxB,CAAC,CAAC;EACN;EACA,OAAO+C,OAAO;AAClB;AACA,SAASD,oBAAoBA,CAAC5B,KAAK,EAAE;EACjCA,KAAK,GAAG,CAACA,KAAK,IAAI,EAAE,EAAEoB,IAAI,EAAE;EAC5B,IAAIpB,KAAK,IAAIA,KAAK,CAACsB,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IAClCtB,KAAK,GAAGA,KAAK,CAACuB,SAAS,CAAC,CAAC,EAAEvB,KAAK,CAACnC,MAAM,CAAC;EAC5C;EACA,OAAOmC,KAAK;AAChB;AACA,SAASkC,yBAAyBA,CAACC,OAAO,EAAEC,IAAI,EAAEnC,GAAG,EAAE;EACnDkC,OAAO,GAAG,CAACA,OAAO,IAAI,EAAE,EAAEf,IAAI,EAAE;EAChC,IAAI,CAACe,OAAO,EAAE;IACV,MAAM,IAAIX,KAAK,CAAC,gBAAgB,GAAGY,IAAI,GAAG,iBAAiB,GAAGnC,GAAG,GAAG,GAAG,CAAC;EAC5E;EACA,OAAOkC,OAAO;AAClB;AACA,SAASE,iBAAiBA,CAACC,OAAO,EAAE;EAChC,IAAIC,uBAAuB,GAAGD,OAAO,CAAChB,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG;EACvD,IAAIkB,qBAAqB,GAAGF,OAAO,CAAChB,MAAM,CAACgB,OAAO,CAACzE,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG;EACtE,IAAI,CAAC0E,uBAAuB,IAAI,CAACC,qBAAqB,EAAE;IACpD,OAAO,GAAG,GAAGF,OAAO,GAAG,GAAG;EAC9B,CAAC,MACI,IAAIC,uBAAuB,IAAIC,qBAAqB,EAAE;IACvD,OAAOF,OAAO;EAClB,CAAC,MACI;IACD,MAAM,IAAId,KAAK,CAAC,uBAAuB,GAAGc,OAAO,CAAC;EACtD;AACJ;AACA,SAAS3B,UAAUA,CAACd,IAAI,EAAE;EACtB,IAAI,CAACA,IAAI,EAAE;IACP,MAAM,IAAI2B,KAAK,CAAC,eAAe,GAAG3B,IAAI,CAAC;EAC3C;EACA,IAAI4C,aAAa,GAAG5C,IAAI,CAACwB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;EAC1C,OAAOoB,aAAa,GAAGJ,iBAAiB,CAACxC,IAAI,CAAC,GAAGA,IAAI;AACzD;AACA,SAAST,iBAAiBA,CAACkD,OAAO,EAAExC,IAAI,EAAE;EACtC,OAAOwC,OAAO,GAAG,GAAG,GAAGxC,IAAI;AAC/B;AACAb,OAAO,CAACG,iBAAiB,GAAGA,iBAAiB;AAC7C,SAASD,iBAAiBA,CAACmD,OAAO,EAAExC,IAAI,EAAE;EACtC,IAAI4C,cAAc,GAAGL,iBAAiB,CAACC,OAAO,CAAC;EAC/C,OAAOI,cAAc,GAAG,GAAG,GAAG5C,IAAI;AACtC;AACAb,OAAO,CAACE,iBAAiB,GAAGA,iBAAiB;AAC7C,SAASE,oBAAoBA,CAACO,MAAM,EAAE;EAClC,IAAIA,MAAM,KAAK,MAAM,EAAE;IACnB,OAAOF,iBAAiB;EAC5B,CAAC,MACI,IAAIE,MAAM,KAAK,OAAO,EAAE;IACzB,OAAOD,kBAAkB;EAC7B,CAAC,MACI;IACD,OAAOF,iBAAiB;EAC5B;AACJ;AACAR,OAAO,CAACI,oBAAoB,GAAGA,oBAAoB;AACnD,SAASiB,UAAUA,CAACxB,KAAK,EAAE;EACvB;EACA,SAAS6D,SAASA,CAAClF,CAAC,EAAEmF,SAAS,EAAE;IAC7B,IAAIlF,CAAC,GAAGD,CAAC,CAAC4D,OAAO,CAACuB,SAAS,CAAC;IAC5B,IAAIlF,CAAC,IAAI,CAAC,EACN,OAAO,CAACD,CAAC,CAAC8D,SAAS,CAAC,CAAC,EAAE7D,CAAC,CAAC,EAAED,CAAC,CAACC,CAAC,CAAC,EAAED,CAAC,CAAC8D,SAAS,CAAC7D,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAErD,OAAO,CAACD,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;EAC1B;EACA;EACA,SAASoF,UAAUA,CAACpF,CAAC,EAAEmF,SAAS,EAAE;IAC9B,IAAIlF,CAAC,GAAGD,CAAC,CAACqF,WAAW,CAACF,SAAS,CAAC;IAChC,IAAIlF,CAAC,IAAI,CAAC,EACN,OAAO,CAACD,CAAC,CAAC8D,SAAS,CAAC,CAAC,EAAE7D,CAAC,CAAC,EAAED,CAAC,CAACC,CAAC,CAAC,EAAED,CAAC,CAAC8D,SAAS,CAAC7D,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAErD,OAAO,CAAC,EAAE,EAAE,EAAE,EAAED,CAAC,CAAC;EAC1B;EACA,SAASsF,OAAOA,CAACtF,CAAC,EAAEuF,UAAU,EAAEC,UAAU,EAAE;IACxC,IAAIC,UAAU,GAAGP,SAAS,CAAClF,CAAC,EAAEuF,UAAU,CAAC;IACzC,IAAIH,UAAU,GAAGF,SAAS,CAACO,UAAU,CAAC,CAAC,CAAC,EAAED,UAAU,CAAC;IACrD,OAAO,CAACJ,UAAU,CAAC,CAAC,CAAC,EAAEA,UAAU,CAAC,CAAC,CAAC,CAAC;EACzC;EACA;EACA;EACA;EACA;EACA;EACA,SAASM,cAAcA,CAACrE,KAAK,EAAE;IAC3B,IAAIsE,MAAM,GAAG,CAAC,CAAC;MAAEC,KAAK;IACtB;IACAA,KAAK,GAAGR,UAAU,CAAC/D,KAAK,EAAE,GAAG,CAAC;IAC9B,IAAIuE,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MAClBD,MAAM,CAACE,QAAQ,GAAGC,kBAAkB,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC;MAC9CvE,KAAK,GAAGuE,KAAK,CAAC,CAAC,CAAC;IACpB;IACA;IACA,IAAIpC,EAAE,GAAG9C,MAAM,CAAC4E,OAAO,CAACjE,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;MAAE0E,QAAQ,GAAGvC,EAAE,CAAC,CAAC,CAAC;MAAEwC,IAAI,GAAGxC,EAAE,CAAC,CAAC,CAAC;IAC5E,IAAIuC,QAAQ,KAAK,EAAE,EAAE;MACjBJ,MAAM,CAACvD,IAAI,GAAG2D,QAAQ;MACtBH,KAAK,GAAGV,SAAS,CAACc,IAAI,EAAE,GAAG,CAAC;IAChC,CAAC,MACI;MACDJ,KAAK,GAAGV,SAAS,CAAC7D,KAAK,EAAE,GAAG,CAAC;MAC7BsE,MAAM,CAACvD,IAAI,GAAGwD,KAAK,CAAC,CAAC,CAAC;IAC1B;IACA,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MAClBD,MAAM,CAACtD,IAAI,GAAGuD,KAAK,CAAC,CAAC,CAAC;IAC1B;IACA,OAAOD,MAAM;EACjB;EACA,IAAIA,MAAM,GAAG,CAAC,CAAC;IAAEC,KAAK;EACtB;EACAA,KAAK,GAAGV,SAAS,CAAC7D,KAAK,EAAE,GAAG,CAAC;EAC7B,IAAIuE,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IAClBD,MAAM,CAACxD,MAAM,GAAG2D,kBAAkB,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5CvE,KAAK,GAAGuE,KAAK,CAAC,CAAC,CAAC;EACpB;EACA;EACAA,KAAK,GAAGV,SAAS,CAAC7D,KAAK,EAAE,GAAG,CAAC;EAC7B,IAAIuE,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IAClBD,MAAM,CAACM,QAAQ,GAAGH,kBAAkB,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9CvE,KAAK,GAAGuE,KAAK,CAAC,CAAC,CAAC;EACpB;EACA;EACAA,KAAK,GAAGV,SAAS,CAAC7D,KAAK,EAAE,GAAG,CAAC;EAC7B,IAAIuE,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IAClBD,MAAM,CAACpD,KAAK,GAAGqD,KAAK,CAAC,CAAC,CAAC;IACvBvE,KAAK,GAAGuE,KAAK,CAAC,CAAC,CAAC;EACpB;EACA;EACA,IAAIvE,KAAK,CAAC6E,UAAU,CAAC,IAAI,CAAC,EAAE;IACxBN,KAAK,GAAGV,SAAS,CAAC7D,KAAK,CAAC8E,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;IACvCR,MAAM,GAAG/F,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE+F,MAAM,CAAC,EAAED,cAAc,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACjED,MAAM,CAACS,IAAI,GAAGR,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC;EACrC,CAAC,MACI;IACDD,MAAM,CAACS,IAAI,GAAG/E,KAAK;EACvB;EACA,OAAOsE,MAAM;AACjB"},"metadata":{},"sourceType":"script"}