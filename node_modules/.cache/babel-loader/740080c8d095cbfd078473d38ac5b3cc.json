{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar channel_buf_1 = __importDefault(require(\"./channel-buf\"));\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar buffer_1 = __importDefault(require(\"buffer\"));\nvar string_decoder_1 = require(\"string_decoder\");\nvar decoder = new string_decoder_1.StringDecoder('utf8');\nfunction encode(str) {\n  return new channel_buf_1.default(newBuffer(str));\n}\nfunction decode(buffer, length) {\n  if (Object.prototype.hasOwnProperty.call(buffer, '_buffer')) {\n    return decodeChannelBuffer(buffer, length);\n  } else if (Object.prototype.hasOwnProperty.call(buffer, '_buffers')) {\n    return decodeCombinedBuffer(buffer, length);\n  } else {\n    throw (0, neo4j_driver_core_1.newError)(\"Don't know how to decode strings from '\" + buffer + \"'\");\n  }\n}\nfunction decodeChannelBuffer(buffer, length) {\n  var start = buffer.position;\n  var end = start + length;\n  buffer.position = Math.min(end, buffer.length);\n  return buffer._buffer.toString('utf8', start, end);\n}\nfunction decodeCombinedBuffer(buffer, length) {\n  return streamDecodeCombinedBuffer(buffer, length, function (partBuffer) {\n    return decoder.write(partBuffer._buffer);\n  }, function () {\n    return decoder.end();\n  });\n}\nfunction streamDecodeCombinedBuffer(combinedBuffers, length, decodeFn, endFn) {\n  var remainingBytesToRead = length;\n  var position = combinedBuffers.position;\n  combinedBuffers._updatePos(Math.min(length, combinedBuffers.length - position));\n  // Reduce CombinedBuffers to a decoded string\n  var out = combinedBuffers._buffers.reduce(function (last, partBuffer) {\n    if (remainingBytesToRead <= 0) {\n      return last;\n    } else if (position >= partBuffer.length) {\n      position -= partBuffer.length;\n      return '';\n    } else {\n      partBuffer._updatePos(position - partBuffer.position);\n      var bytesToRead = Math.min(partBuffer.length - position, remainingBytesToRead);\n      var lastSlice = partBuffer.readSlice(bytesToRead);\n      partBuffer._updatePos(bytesToRead);\n      remainingBytesToRead = Math.max(remainingBytesToRead - lastSlice.length, 0);\n      position = 0;\n      return last + decodeFn(lastSlice);\n    }\n  }, '');\n  return out + endFn();\n}\nfunction newBuffer(str) {\n  // use static factory function present in newer NodeJS versions to create a buffer containing the given string\n  // or fallback to the old, potentially deprecated constructor\n  if (typeof buffer_1.default.Buffer.from === 'function') {\n    return buffer_1.default.Buffer.from(str, 'utf8');\n  } else {\n    // eslint-disable-next-line node/no-deprecated-api\n    return new buffer_1.default.Buffer(str, 'utf8');\n  }\n}\nexports.default = {\n  encode: encode,\n  decode: decode\n};","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","channel_buf_1","require","neo4j_driver_core_1","buffer_1","string_decoder_1","decoder","StringDecoder","encode","str","default","newBuffer","decode","buffer","length","prototype","hasOwnProperty","call","decodeChannelBuffer","decodeCombinedBuffer","newError","start","position","end","Math","min","_buffer","toString","streamDecodeCombinedBuffer","partBuffer","write","combinedBuffers","decodeFn","endFn","remainingBytesToRead","_updatePos","out","_buffers","reduce","last","bytesToRead","lastSlice","readSlice","max","Buffer","from"],"sources":["C:/Stanford/DigitalTracesApp3/node_modules/neo4j-driver-bolt-connection/lib/channel/utf8.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar channel_buf_1 = __importDefault(require(\"./channel-buf\"));\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar buffer_1 = __importDefault(require(\"buffer\"));\nvar string_decoder_1 = require(\"string_decoder\");\nvar decoder = new string_decoder_1.StringDecoder('utf8');\nfunction encode(str) {\n    return new channel_buf_1.default(newBuffer(str));\n}\nfunction decode(buffer, length) {\n    if (Object.prototype.hasOwnProperty.call(buffer, '_buffer')) {\n        return decodeChannelBuffer(buffer, length);\n    }\n    else if (Object.prototype.hasOwnProperty.call(buffer, '_buffers')) {\n        return decodeCombinedBuffer(buffer, length);\n    }\n    else {\n        throw (0, neo4j_driver_core_1.newError)(\"Don't know how to decode strings from '\" + buffer + \"'\");\n    }\n}\nfunction decodeChannelBuffer(buffer, length) {\n    var start = buffer.position;\n    var end = start + length;\n    buffer.position = Math.min(end, buffer.length);\n    return buffer._buffer.toString('utf8', start, end);\n}\nfunction decodeCombinedBuffer(buffer, length) {\n    return streamDecodeCombinedBuffer(buffer, length, function (partBuffer) { return decoder.write(partBuffer._buffer); }, function () { return decoder.end(); });\n}\nfunction streamDecodeCombinedBuffer(combinedBuffers, length, decodeFn, endFn) {\n    var remainingBytesToRead = length;\n    var position = combinedBuffers.position;\n    combinedBuffers._updatePos(Math.min(length, combinedBuffers.length - position));\n    // Reduce CombinedBuffers to a decoded string\n    var out = combinedBuffers._buffers.reduce(function (last, partBuffer) {\n        if (remainingBytesToRead <= 0) {\n            return last;\n        }\n        else if (position >= partBuffer.length) {\n            position -= partBuffer.length;\n            return '';\n        }\n        else {\n            partBuffer._updatePos(position - partBuffer.position);\n            var bytesToRead = Math.min(partBuffer.length - position, remainingBytesToRead);\n            var lastSlice = partBuffer.readSlice(bytesToRead);\n            partBuffer._updatePos(bytesToRead);\n            remainingBytesToRead = Math.max(remainingBytesToRead - lastSlice.length, 0);\n            position = 0;\n            return last + decodeFn(lastSlice);\n        }\n    }, '');\n    return out + endFn();\n}\nfunction newBuffer(str) {\n    // use static factory function present in newer NodeJS versions to create a buffer containing the given string\n    // or fallback to the old, potentially deprecated constructor\n    if (typeof buffer_1.default.Buffer.from === 'function') {\n        return buffer_1.default.Buffer.from(str, 'utf8');\n    }\n    else {\n        // eslint-disable-next-line node/no-deprecated-api\n        return new buffer_1.default.Buffer(str, 'utf8');\n    }\n}\nexports.default = {\n    encode: encode,\n    decode: decode\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}