{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Bookmark = void 0;\nvar util = __importStar(require(\"./util\"));\nvar BOOKMARKS_KEY = 'bookmarks';\nvar Bookmark = /** @class */function () {\n  /**\n   * @constructor\n   * @param {string|string[]} values single bookmark as string or multiple bookmarks as a string array.\n   */\n  function Bookmark(values) {\n    this._values = asStringArray(values);\n  }\n  Bookmark.empty = function () {\n    return EMPTY_BOOKMARK;\n  };\n  /**\n   * Check if the given bookmark is meaningful and can be send to the database.\n   * @return {boolean} returns `true` bookmark has a value, `false` otherwise.\n   */\n  Bookmark.prototype.isEmpty = function () {\n    return this._values.length === 0;\n  };\n  /**\n   * Get all bookmark values as an array.\n   * @return {string[]} all values.\n   */\n  Bookmark.prototype.values = function () {\n    return this._values;\n  };\n  /**\n   * Get this bookmark as an object for begin transaction call.\n   * @return {Object} the value of this bookmark as object.\n   */\n  Bookmark.prototype.asBeginTransactionParameters = function () {\n    var _a;\n    if (this.isEmpty()) {\n      return {};\n    }\n    // Driver sends {bookmark: \"max\", bookmarks: [\"one\", \"two\", \"max\"]} instead of simple\n    // {bookmarks: [\"one\", \"two\", \"max\"]} for backwards compatibility reasons. Old servers can only accept single\n    // bookmark that is why driver has to parse and compare given list of bookmarks. This functionality will\n    // eventually be removed.\n    return _a = {}, _a[BOOKMARKS_KEY] = this._values, _a;\n  };\n  return Bookmark;\n}();\nexports.Bookmark = Bookmark;\nvar EMPTY_BOOKMARK = new Bookmark(null);\n/**\n * Converts given value to an array.\n * @param {string|string[]|Array} [value=undefined] argument to convert.\n * @return {string[]} value converted to an array.\n */\nfunction asStringArray(value) {\n  if (!value) {\n    return [];\n  }\n  if (util.isString(value)) {\n    return [value];\n  }\n  if (Array.isArray(value)) {\n    var result = [];\n    var flattenedValue = flattenArray(value);\n    for (var i = 0; i < flattenedValue.length; i++) {\n      var element = flattenedValue[i];\n      // if it is undefined or null, ignore it\n      if (element !== undefined && element !== null) {\n        if (!util.isString(element)) {\n          throw new TypeError(\"Bookmark value should be a string, given: '\" + element + \"'\");\n        }\n        result.push(element);\n      }\n    }\n    return result;\n  }\n  throw new TypeError(\"Bookmark should either be a string or a string array, given: '\" + value + \"'\");\n}\n/**\n * Recursively flattens an array so that the result becomes a single array\n * of values, which does not include any sub-arrays\n *\n * @param {Array} value\n */\nfunction flattenArray(values) {\n  return values.reduce(function (dest, value) {\n    return Array.isArray(value) ? dest.concat(flattenArray(value)) : dest.concat(value);\n  }, []);\n}","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","exports","Bookmark","util","require","BOOKMARKS_KEY","values","_values","asStringArray","empty","EMPTY_BOOKMARK","isEmpty","length","asBeginTransactionParameters","_a","isString","Array","isArray","flattenedValue","flattenArray","i","element","TypeError","push","reduce","dest","concat"],"sources":["C:/Stanford/DigitalTracesApp3/node_modules/neo4j-driver-core/lib/internal/bookmark.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Bookmark = void 0;\nvar util = __importStar(require(\"./util\"));\nvar BOOKMARKS_KEY = 'bookmarks';\nvar Bookmark = /** @class */ (function () {\n    /**\n     * @constructor\n     * @param {string|string[]} values single bookmark as string or multiple bookmarks as a string array.\n     */\n    function Bookmark(values) {\n        this._values = asStringArray(values);\n    }\n    Bookmark.empty = function () {\n        return EMPTY_BOOKMARK;\n    };\n    /**\n     * Check if the given bookmark is meaningful and can be send to the database.\n     * @return {boolean} returns `true` bookmark has a value, `false` otherwise.\n     */\n    Bookmark.prototype.isEmpty = function () {\n        return this._values.length === 0;\n    };\n    /**\n     * Get all bookmark values as an array.\n     * @return {string[]} all values.\n     */\n    Bookmark.prototype.values = function () {\n        return this._values;\n    };\n    /**\n     * Get this bookmark as an object for begin transaction call.\n     * @return {Object} the value of this bookmark as object.\n     */\n    Bookmark.prototype.asBeginTransactionParameters = function () {\n        var _a;\n        if (this.isEmpty()) {\n            return {};\n        }\n        // Driver sends {bookmark: \"max\", bookmarks: [\"one\", \"two\", \"max\"]} instead of simple\n        // {bookmarks: [\"one\", \"two\", \"max\"]} for backwards compatibility reasons. Old servers can only accept single\n        // bookmark that is why driver has to parse and compare given list of bookmarks. This functionality will\n        // eventually be removed.\n        return _a = {},\n            _a[BOOKMARKS_KEY] = this._values,\n            _a;\n    };\n    return Bookmark;\n}());\nexports.Bookmark = Bookmark;\nvar EMPTY_BOOKMARK = new Bookmark(null);\n/**\n * Converts given value to an array.\n * @param {string|string[]|Array} [value=undefined] argument to convert.\n * @return {string[]} value converted to an array.\n */\nfunction asStringArray(value) {\n    if (!value) {\n        return [];\n    }\n    if (util.isString(value)) {\n        return [value];\n    }\n    if (Array.isArray(value)) {\n        var result = [];\n        var flattenedValue = flattenArray(value);\n        for (var i = 0; i < flattenedValue.length; i++) {\n            var element = flattenedValue[i];\n            // if it is undefined or null, ignore it\n            if (element !== undefined && element !== null) {\n                if (!util.isString(element)) {\n                    throw new TypeError(\"Bookmark value should be a string, given: '\" + element + \"'\");\n                }\n                result.push(element);\n            }\n        }\n        return result;\n    }\n    throw new TypeError(\"Bookmark should either be a string or a string array, given: '\" + value + \"'\");\n}\n/**\n * Recursively flattens an array so that the result becomes a single array\n * of values, which does not include any sub-arrays\n *\n * @param {Array} value\n */\nfunction flattenArray(values) {\n    return values.reduce(function (dest, value) {\n        return Array.isArray(value)\n            ? dest.concat(flattenArray(value))\n            : dest.concat(value);\n    }, []);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}