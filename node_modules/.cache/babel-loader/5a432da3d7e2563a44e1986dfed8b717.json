{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.WRITE = exports.READ = exports.Driver = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _neo4jDriverCore = require(\"neo4j-driver-core\");\nvar _sessionRx = _interopRequireDefault(require(\"./session-rx\"));\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar FETCH_ALL = _neo4jDriverCore.internal.constants.FETCH_ALL;\nvar READ = _neo4jDriverCore.driver.READ,\n  WRITE = _neo4jDriverCore.driver.WRITE;\n/**\n * A driver maintains one or more {@link Session}s with a remote\n * Neo4j instance. Through the {@link Session}s you can send queries\n * and retrieve results from the database.\n *\n * Drivers are reasonably expensive to create - you should strive to keep one\n * driver instance around per Neo4j Instance you connect to.\n *\n * @access public\n */\n\nexports.WRITE = WRITE;\nexports.READ = READ;\nvar Driver = /*#__PURE__*/function (_CoreDriver) {\n  (0, _inherits2[\"default\"])(Driver, _CoreDriver);\n  var _super = _createSuper(Driver);\n  function Driver() {\n    (0, _classCallCheck2[\"default\"])(this, Driver);\n    return _super.apply(this, arguments);\n  }\n  (0, _createClass2[\"default\"])(Driver, [{\n    key: \"rxSession\",\n    value:\n    /**\n     * Acquire a reactive session to communicate with the database. The session will\n     * borrow connections from the underlying connection pool as required and\n     * should be considered lightweight and disposable.\n     *\n     * This comes with some responsibility - make sure you always call\n     * {@link close} when you are done using a session, and likewise,\n     * make sure you don't close your session before you are done using it. Once\n     * it is closed, the underlying connection will be released to the connection\n     * pool and made available for others to use.\n     *\n     * @public\n     * @param {Object} param\n     * @param {string} param.defaultAccessMode=WRITE - The access mode of this session, allowed values are {@link READ} and {@link WRITE}.\n     * @param {string|string[]} param.bookmarks - The initial reference or references to some previous transactions. Value is optional and\n     * absence indicates that the bookmarks do not exist or are unknown.\n     * @param {string} param.database - The database this session will operate on.\n     * @param {string} param.impersonatedUser - The name of the user which should be impersonated for the duration of the session.\n     * @returns {RxSession} new reactive session.\n     */\n    function rxSession() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$defaultAccessMod = _ref.defaultAccessMode,\n        defaultAccessMode = _ref$defaultAccessMod === void 0 ? WRITE : _ref$defaultAccessMod,\n        bookmarks = _ref.bookmarks,\n        _ref$database = _ref.database,\n        database = _ref$database === void 0 ? '' : _ref$database,\n        fetchSize = _ref.fetchSize,\n        impersonatedUser = _ref.impersonatedUser;\n      return new _sessionRx[\"default\"]({\n        session: this._newSession({\n          defaultAccessMode: defaultAccessMode,\n          bookmarkOrBookmarks: bookmarks,\n          database: database,\n          impersonatedUser: impersonatedUser,\n          reactive: true,\n          fetchSize: validateFetchSizeValue(fetchSize, this._config.fetchSize)\n        }),\n        config: this._config\n      });\n    }\n  }]);\n  return Driver;\n}(_neo4jDriverCore.Driver);\n/**\n * @private\n */\n\nexports.Driver = Driver;\nfunction validateFetchSizeValue(rawValue, defaultWhenAbsent) {\n  var fetchSize = parseInt(rawValue, 10);\n  if (fetchSize > 0 || fetchSize === FETCH_ALL) {\n    return fetchSize;\n  } else if (fetchSize === 0 || fetchSize < 0) {\n    throw new Error(\"The fetch size can only be a positive value or \".concat(FETCH_ALL, \" for ALL. However fetchSize = \").concat(fetchSize));\n  } else {\n    return defaultWhenAbsent;\n  }\n}\nvar _default = Driver;\nexports[\"default\"] = _default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","WRITE","READ","Driver","_classCallCheck2","_createClass2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_neo4jDriverCore","_sessionRx","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","FETCH_ALL","internal","constants","driver","_CoreDriver","_super","key","rxSession","_ref","length","undefined","_ref$defaultAccessMod","defaultAccessMode","bookmarks","_ref$database","database","fetchSize","impersonatedUser","session","_newSession","bookmarkOrBookmarks","reactive","validateFetchSizeValue","_config","config","rawValue","defaultWhenAbsent","parseInt","Error","concat","_default"],"sources":["C:/Stanford/DigitalTracesApp3/node_modules/neo4j-driver/lib/driver.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.WRITE = exports.READ = exports.Driver = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _neo4jDriverCore = require(\"neo4j-driver-core\");\n\nvar _sessionRx = _interopRequireDefault(require(\"./session-rx\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar FETCH_ALL = _neo4jDriverCore.internal.constants.FETCH_ALL;\nvar READ = _neo4jDriverCore.driver.READ,\n    WRITE = _neo4jDriverCore.driver.WRITE;\n/**\n * A driver maintains one or more {@link Session}s with a remote\n * Neo4j instance. Through the {@link Session}s you can send queries\n * and retrieve results from the database.\n *\n * Drivers are reasonably expensive to create - you should strive to keep one\n * driver instance around per Neo4j Instance you connect to.\n *\n * @access public\n */\n\nexports.WRITE = WRITE;\nexports.READ = READ;\n\nvar Driver = /*#__PURE__*/function (_CoreDriver) {\n  (0, _inherits2[\"default\"])(Driver, _CoreDriver);\n\n  var _super = _createSuper(Driver);\n\n  function Driver() {\n    (0, _classCallCheck2[\"default\"])(this, Driver);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2[\"default\"])(Driver, [{\n    key: \"rxSession\",\n    value:\n    /**\n     * Acquire a reactive session to communicate with the database. The session will\n     * borrow connections from the underlying connection pool as required and\n     * should be considered lightweight and disposable.\n     *\n     * This comes with some responsibility - make sure you always call\n     * {@link close} when you are done using a session, and likewise,\n     * make sure you don't close your session before you are done using it. Once\n     * it is closed, the underlying connection will be released to the connection\n     * pool and made available for others to use.\n     *\n     * @public\n     * @param {Object} param\n     * @param {string} param.defaultAccessMode=WRITE - The access mode of this session, allowed values are {@link READ} and {@link WRITE}.\n     * @param {string|string[]} param.bookmarks - The initial reference or references to some previous transactions. Value is optional and\n     * absence indicates that the bookmarks do not exist or are unknown.\n     * @param {string} param.database - The database this session will operate on.\n     * @param {string} param.impersonatedUser - The name of the user which should be impersonated for the duration of the session.\n     * @returns {RxSession} new reactive session.\n     */\n    function rxSession() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$defaultAccessMod = _ref.defaultAccessMode,\n          defaultAccessMode = _ref$defaultAccessMod === void 0 ? WRITE : _ref$defaultAccessMod,\n          bookmarks = _ref.bookmarks,\n          _ref$database = _ref.database,\n          database = _ref$database === void 0 ? '' : _ref$database,\n          fetchSize = _ref.fetchSize,\n          impersonatedUser = _ref.impersonatedUser;\n\n      return new _sessionRx[\"default\"]({\n        session: this._newSession({\n          defaultAccessMode: defaultAccessMode,\n          bookmarkOrBookmarks: bookmarks,\n          database: database,\n          impersonatedUser: impersonatedUser,\n          reactive: true,\n          fetchSize: validateFetchSizeValue(fetchSize, this._config.fetchSize)\n        }),\n        config: this._config\n      });\n    }\n  }]);\n  return Driver;\n}(_neo4jDriverCore.Driver);\n/**\n * @private\n */\n\n\nexports.Driver = Driver;\n\nfunction validateFetchSizeValue(rawValue, defaultWhenAbsent) {\n  var fetchSize = parseInt(rawValue, 10);\n\n  if (fetchSize > 0 || fetchSize === FETCH_ALL) {\n    return fetchSize;\n  } else if (fetchSize === 0 || fetchSize < 0) {\n    throw new Error(\"The fetch size can only be a positive value or \".concat(FETCH_ALL, \" for ALL. However fetchSize = \").concat(fetchSize));\n  } else {\n    return defaultWhenAbsent;\n  }\n}\n\nvar _default = Driver;\nexports[\"default\"] = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}