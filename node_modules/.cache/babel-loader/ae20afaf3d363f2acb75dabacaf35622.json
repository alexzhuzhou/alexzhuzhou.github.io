{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProcedureRouteObserver = exports.RouteObserver = exports.CompletedObserver = exports.FailedObserver = exports.ResetObserver = exports.LoginObserver = exports.ResultStreamObserver = exports.StreamObserver = void 0;\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar routing_table_raw_1 = __importDefault(require(\"./routing-table-raw\"));\nvar FETCH_ALL = neo4j_driver_core_1.internal.constants.FETCH_ALL;\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\nvar StreamObserver = /** @class */function () {\n  function StreamObserver() {}\n  StreamObserver.prototype.onNext = function (rawRecord) {};\n  StreamObserver.prototype.onError = function (error) {};\n  StreamObserver.prototype.onCompleted = function (meta) {};\n  return StreamObserver;\n}();\nexports.StreamObserver = StreamObserver;\n/**\n * Handles a RUN/PULL_ALL, or RUN/DISCARD_ALL requests, maps the responses\n * in a way that a user-provided observer can see these as a clean Stream\n * of records.\n * This class will queue up incoming messages until a user-provided observer\n * for the incoming stream is registered. Thus, we keep fields around\n * for tracking head/records/tail. These are only used if there is no\n * observer registered.\n * @access private\n */\nvar ResultStreamObserver = /** @class */function (_super) {\n  __extends(ResultStreamObserver, _super);\n  /**\n   *\n   * @param {Object} param\n   * @param {Object} param.server\n   * @param {boolean} param.reactive\n   * @param {function(stmtId: number|Integer, n: number|Integer, observer: StreamObserver)} param.moreFunction -\n   * @param {function(stmtId: number|Integer, observer: StreamObserver)} param.discardFunction -\n   * @param {number|Integer} param.fetchSize -\n   * @param {function(err: Error): Promise|void} param.beforeError -\n   * @param {function(err: Error): Promise|void} param.afterError -\n   * @param {function(keys: string[]): Promise|void} param.beforeKeys -\n   * @param {function(keys: string[]): Promise|void} param.afterKeys -\n   * @param {function(metadata: Object): Promise|void} param.beforeComplete -\n   * @param {function(metadata: Object): Promise|void} param.afterComplete -\n   */\n  function ResultStreamObserver(_a) {\n    var _b = _a === void 0 ? {} : _a,\n      _c = _b.reactive,\n      reactive = _c === void 0 ? false : _c,\n      moreFunction = _b.moreFunction,\n      discardFunction = _b.discardFunction,\n      _d = _b.fetchSize,\n      fetchSize = _d === void 0 ? FETCH_ALL : _d,\n      beforeError = _b.beforeError,\n      afterError = _b.afterError,\n      beforeKeys = _b.beforeKeys,\n      afterKeys = _b.afterKeys,\n      beforeComplete = _b.beforeComplete,\n      afterComplete = _b.afterComplete,\n      server = _b.server;\n    var _this = _super.call(this) || this;\n    _this._fieldKeys = null;\n    _this._fieldLookup = null;\n    _this._head = null;\n    _this._queuedRecords = [];\n    _this._tail = null;\n    _this._error = null;\n    _this._observers = [];\n    _this._meta = {};\n    _this._server = server;\n    _this._beforeError = beforeError;\n    _this._afterError = afterError;\n    _this._beforeKeys = beforeKeys;\n    _this._afterKeys = afterKeys;\n    _this._beforeComplete = beforeComplete;\n    _this._afterComplete = afterComplete;\n    _this._queryId = null;\n    _this._moreFunction = moreFunction;\n    _this._discardFunction = discardFunction;\n    _this._discard = false;\n    _this._fetchSize = fetchSize;\n    _this._setState(reactive ? _states.READY : _states.READY_STREAMING);\n    _this._setupAuoPull(fetchSize);\n    return _this;\n  }\n  /**\n   * Will be called on every record that comes in and transform a raw record\n   * to a Object. If user-provided observer is present, pass transformed record\n   * to it's onNext method, otherwise, push to record que.\n   * @param {Array} rawRecord - An array with the raw record\n   */\n  ResultStreamObserver.prototype.onNext = function (rawRecord) {\n    var record = new neo4j_driver_core_1.Record(this._fieldKeys, rawRecord, this._fieldLookup);\n    if (this._observers.some(function (o) {\n      return o.onNext;\n    })) {\n      this._observers.forEach(function (o) {\n        if (o.onNext) {\n          o.onNext(record);\n        }\n      });\n    } else {\n      this._queuedRecords.push(record);\n      if (this._queuedRecords.length > this._highRecordWatermark) {\n        this._autoPull = false;\n      }\n    }\n  };\n  ResultStreamObserver.prototype.onCompleted = function (meta) {\n    this._state.onSuccess(this, meta);\n  };\n  /**\n   * Will be called on errors.\n   * If user-provided observer is present, pass the error\n   * to it's onError method, otherwise set instance variable _error.\n   * @param {Object} error - An error object\n   */\n  ResultStreamObserver.prototype.onError = function (error) {\n    this._state.onError(this, error);\n  };\n  /**\n   * Cancel pending record stream\n   */\n  ResultStreamObserver.prototype.cancel = function () {\n    this._discard = true;\n  };\n  /**\n   * Stream observer defaults to handling responses for two messages: RUN + PULL_ALL or RUN + DISCARD_ALL.\n   * Response for RUN initializes query keys. Response for PULL_ALL / DISCARD_ALL exposes the result stream.\n   *\n   * However, some operations can be represented as a single message which receives full metadata in a single response.\n   * For example, operations to begin, commit and rollback an explicit transaction use two messages in Bolt V1 but a single message in Bolt V3.\n   * Messages are `RUN \"BEGIN\" {}` + `PULL_ALL` in Bolt V1 and `BEGIN` in Bolt V3.\n   *\n   * This function prepares the observer to only handle a single response message.\n   */\n  ResultStreamObserver.prototype.prepareToHandleSingleResponse = function () {\n    this._head = [];\n    this._fieldKeys = [];\n    this._setState(_states.STREAMING);\n  };\n  /**\n   * Mark this observer as if it has completed with no metadata.\n   */\n  ResultStreamObserver.prototype.markCompleted = function () {\n    this._head = [];\n    this._fieldKeys = [];\n    this._tail = {};\n    this._setState(_states.SUCCEEDED);\n  };\n  /**\n   * Subscribe to events with provided observer.\n   * @param {Object} observer - Observer object\n   * @param {function(keys: String[])} observer.onKeys - Handle stream header, field keys.\n   * @param {function(record: Object)} observer.onNext - Handle records, one by one.\n   * @param {function(metadata: Object)} observer.onCompleted - Handle stream tail, the metadata.\n   * @param {function(error: Object)} observer.onError - Handle errors, should always be provided.\n   */\n  ResultStreamObserver.prototype.subscribe = function (observer) {\n    if (this._error) {\n      observer.onError(this._error);\n      return;\n    }\n    if (this._head && observer.onKeys) {\n      observer.onKeys(this._head);\n    }\n    if (this._queuedRecords.length > 0 && observer.onNext) {\n      for (var i = 0; i < this._queuedRecords.length; i++) {\n        observer.onNext(this._queuedRecords[i]);\n        if (this._queuedRecords.length - i - 1 <= this._lowRecordWatermark) {\n          this._autoPull = true;\n          if (this._state === _states.READY) {\n            this._handleStreaming();\n          }\n        }\n      }\n    }\n    if (this._tail && observer.onCompleted) {\n      observer.onCompleted(this._tail);\n    }\n    this._observers.push(observer);\n    if (this._state === _states.READY) {\n      this._handleStreaming();\n    }\n  };\n  ResultStreamObserver.prototype._handleHasMore = function (meta) {\n    // We've consumed current batch and server notified us that there're more\n    // records to stream. Let's invoke more or discard function based on whether\n    // the user wants to discard streaming or not\n    this._setState(_states.READY); // we've done streaming\n    this._handleStreaming();\n    delete meta.has_more;\n  };\n  ResultStreamObserver.prototype._handlePullSuccess = function (meta) {\n    var _this = this;\n    this._setState(_states.SUCCEEDED);\n    var completionMetadata = Object.assign(this._server ? {\n      server: this._server\n    } : {}, this._meta, meta);\n    var beforeHandlerResult = null;\n    if (this._beforeComplete) {\n      beforeHandlerResult = this._beforeComplete(completionMetadata);\n    }\n    var continuation = function continuation() {\n      // End of stream\n      _this._tail = completionMetadata;\n      if (_this._observers.some(function (o) {\n        return o.onCompleted;\n      })) {\n        _this._observers.forEach(function (o) {\n          if (o.onCompleted) {\n            o.onCompleted(completionMetadata);\n          }\n        });\n      }\n      if (_this._afterComplete) {\n        _this._afterComplete(completionMetadata);\n      }\n    };\n    if (beforeHandlerResult) {\n      Promise.resolve(beforeHandlerResult).then(function () {\n        return continuation();\n      });\n    } else {\n      continuation();\n    }\n  };\n  ResultStreamObserver.prototype._handleRunSuccess = function (meta, afterSuccess) {\n    var _this = this;\n    if (this._fieldKeys === null) {\n      // Stream header, build a name->index field lookup table\n      // to be used by records. This is an optimization to make it\n      // faster to look up fields in a record by name, rather than by index.\n      // Since the records we get back via Bolt are just arrays of values.\n      this._fieldKeys = [];\n      this._fieldLookup = {};\n      if (meta.fields && meta.fields.length > 0) {\n        this._fieldKeys = meta.fields;\n        for (var i = 0; i < meta.fields.length; i++) {\n          this._fieldLookup[meta.fields[i]] = i;\n        }\n        // remove fields key from metadata object\n        delete meta.fields;\n      }\n      // Extract server generated query id for use in requestMore and discard\n      // functions\n      if (meta.qid !== null && meta.qid !== undefined) {\n        this._queryId = meta.qid;\n        // remove qid from metadata object\n        delete meta.qid;\n      }\n      this._storeMetadataForCompletion(meta);\n      var beforeHandlerResult = null;\n      if (this._beforeKeys) {\n        beforeHandlerResult = this._beforeKeys(this._fieldKeys);\n      }\n      var continuation_1 = function continuation_1() {\n        _this._head = _this._fieldKeys;\n        if (_this._observers.some(function (o) {\n          return o.onKeys;\n        })) {\n          _this._observers.forEach(function (o) {\n            if (o.onKeys) {\n              o.onKeys(_this._fieldKeys);\n            }\n          });\n        }\n        if (_this._afterKeys) {\n          _this._afterKeys(_this._fieldKeys);\n        }\n        afterSuccess();\n      };\n      if (beforeHandlerResult) {\n        Promise.resolve(beforeHandlerResult).then(function () {\n          return continuation_1();\n        });\n      } else {\n        continuation_1();\n      }\n    }\n  };\n  ResultStreamObserver.prototype._handleError = function (error) {\n    var _this = this;\n    this._setState(_states.FAILED);\n    this._error = error;\n    var beforeHandlerResult = null;\n    if (this._beforeError) {\n      beforeHandlerResult = this._beforeError(error);\n    }\n    var continuation = function continuation() {\n      if (_this._observers.some(function (o) {\n        return o.onError;\n      })) {\n        _this._observers.forEach(function (o) {\n          if (o.onError) {\n            o.onError(error);\n          }\n        });\n      }\n      if (_this._afterError) {\n        _this._afterError(error);\n      }\n    };\n    if (beforeHandlerResult) {\n      Promise.resolve(beforeHandlerResult).then(function () {\n        return continuation();\n      });\n    } else {\n      continuation();\n    }\n  };\n  ResultStreamObserver.prototype._handleStreaming = function () {\n    if (this._head && this._observers.some(function (o) {\n      return o.onNext || o.onCompleted;\n    })) {\n      if (this._discard) {\n        this._discardFunction(this._queryId, this);\n        this._setState(_states.STREAMING);\n      } else if (this._autoPull) {\n        this._moreFunction(this._queryId, this._fetchSize, this);\n        this._setState(_states.STREAMING);\n      }\n    }\n  };\n  ResultStreamObserver.prototype._storeMetadataForCompletion = function (meta) {\n    var keys = Object.keys(meta);\n    var index = keys.length;\n    var key = '';\n    while (index--) {\n      key = keys[index];\n      this._meta[key] = meta[key];\n    }\n  };\n  ResultStreamObserver.prototype._setState = function (state) {\n    this._state = state;\n  };\n  ResultStreamObserver.prototype._setupAuoPull = function (fetchSize) {\n    this._autoPull = true;\n    if (fetchSize === FETCH_ALL) {\n      this._lowRecordWatermark = Number.MAX_VALUE; // we shall always lower than this number to enable auto pull\n      this._highRecordWatermark = Number.MAX_VALUE; // we shall never reach this number to disable auto pull\n    } else {\n      this._lowRecordWatermark = 0.3 * fetchSize;\n      this._highRecordWatermark = 0.7 * fetchSize;\n    }\n  };\n  return ResultStreamObserver;\n}(StreamObserver);\nexports.ResultStreamObserver = ResultStreamObserver;\nvar LoginObserver = /** @class */function (_super) {\n  __extends(LoginObserver, _super);\n  /**\n   *\n   * @param {Object} param -\n   * @param {function(err: Error)} param.onError\n   * @param {function(metadata)} param.onCompleted\n   */\n  function LoginObserver(_a) {\n    var _b = _a === void 0 ? {} : _a,\n      onError = _b.onError,\n      onCompleted = _b.onCompleted;\n    var _this = _super.call(this) || this;\n    _this._onError = onError;\n    _this._onCompleted = onCompleted;\n    return _this;\n  }\n  LoginObserver.prototype.onNext = function (record) {\n    this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when initializing ' + neo4j_driver_core_1.json.stringify(record)));\n  };\n  LoginObserver.prototype.onError = function (error) {\n    if (this._onError) {\n      this._onError(error);\n    }\n  };\n  LoginObserver.prototype.onCompleted = function (metadata) {\n    if (this._onCompleted) {\n      this._onCompleted(metadata);\n    }\n  };\n  return LoginObserver;\n}(StreamObserver);\nexports.LoginObserver = LoginObserver;\nvar ResetObserver = /** @class */function (_super) {\n  __extends(ResetObserver, _super);\n  /**\n   *\n   * @param {Object} param -\n   * @param {function(err: String)} param.onProtocolError\n   * @param {function(err: Error)} param.onError\n   * @param {function(metadata)} param.onComplete\n   */\n  function ResetObserver(_a) {\n    var _b = _a === void 0 ? {} : _a,\n      onProtocolError = _b.onProtocolError,\n      onError = _b.onError,\n      onComplete = _b.onComplete;\n    var _this = _super.call(this) || this;\n    _this._onProtocolError = onProtocolError;\n    _this._onError = onError;\n    _this._onComplete = onComplete;\n    return _this;\n  }\n  ResetObserver.prototype.onNext = function (record) {\n    this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when resetting: received record is: ' + neo4j_driver_core_1.json.stringify(record), PROTOCOL_ERROR));\n  };\n  ResetObserver.prototype.onError = function (error) {\n    if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\n      this._onProtocolError(error.message);\n    }\n    if (this._onError) {\n      this._onError(error);\n    }\n  };\n  ResetObserver.prototype.onCompleted = function (metadata) {\n    if (this._onComplete) {\n      this._onComplete(metadata);\n    }\n  };\n  return ResetObserver;\n}(StreamObserver);\nexports.ResetObserver = ResetObserver;\nvar FailedObserver = /** @class */function (_super) {\n  __extends(FailedObserver, _super);\n  function FailedObserver(_a) {\n    var error = _a.error,\n      onError = _a.onError;\n    var _this = _super.call(this, {\n      beforeError: onError\n    }) || this;\n    _this.onError(error);\n    return _this;\n  }\n  return FailedObserver;\n}(ResultStreamObserver);\nexports.FailedObserver = FailedObserver;\nvar CompletedObserver = /** @class */function (_super) {\n  __extends(CompletedObserver, _super);\n  function CompletedObserver() {\n    var _this = _super.call(this) || this;\n    _super.prototype.markCompleted.call(_this);\n    return _this;\n  }\n  return CompletedObserver;\n}(ResultStreamObserver);\nexports.CompletedObserver = CompletedObserver;\nvar ProcedureRouteObserver = /** @class */function (_super) {\n  __extends(ProcedureRouteObserver, _super);\n  function ProcedureRouteObserver(_a) {\n    var resultObserver = _a.resultObserver,\n      onProtocolError = _a.onProtocolError,\n      onError = _a.onError,\n      onCompleted = _a.onCompleted;\n    var _this = _super.call(this) || this;\n    _this._resultObserver = resultObserver;\n    _this._onError = onError;\n    _this._onCompleted = onCompleted;\n    _this._records = [];\n    _this._onProtocolError = onProtocolError;\n    resultObserver.subscribe(_this);\n    return _this;\n  }\n  ProcedureRouteObserver.prototype.onNext = function (record) {\n    this._records.push(record);\n  };\n  ProcedureRouteObserver.prototype.onError = function (error) {\n    if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\n      this._onProtocolError(error.message);\n    }\n    if (this._onError) {\n      this._onError(error);\n    }\n  };\n  ProcedureRouteObserver.prototype.onCompleted = function () {\n    if (this._records !== null && this._records.length !== 1) {\n      this.onError((0, neo4j_driver_core_1.newError)('Illegal response from router. Received ' + this._records.length + ' records but expected only one.\\n' + neo4j_driver_core_1.json.stringify(this._records), PROTOCOL_ERROR));\n      return;\n    }\n    if (this._onCompleted) {\n      this._onCompleted(routing_table_raw_1.default.ofRecord(this._records[0]));\n    }\n  };\n  return ProcedureRouteObserver;\n}(StreamObserver);\nexports.ProcedureRouteObserver = ProcedureRouteObserver;\nvar RouteObserver = /** @class */function (_super) {\n  __extends(RouteObserver, _super);\n  /**\n   *\n   * @param {Object} param -\n   * @param {function(err: String)} param.onProtocolError\n   * @param {function(err: Error)} param.onError\n   * @param {function(RawRoutingTable)} param.onCompleted\n   */\n  function RouteObserver(_a) {\n    var _b = _a === void 0 ? {} : _a,\n      onProtocolError = _b.onProtocolError,\n      onError = _b.onError,\n      onCompleted = _b.onCompleted;\n    var _this = _super.call(this) || this;\n    _this._onProtocolError = onProtocolError;\n    _this._onError = onError;\n    _this._onCompleted = onCompleted;\n    return _this;\n  }\n  RouteObserver.prototype.onNext = function (record) {\n    this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when resetting: received record is: ' + neo4j_driver_core_1.json.stringify(record), PROTOCOL_ERROR));\n  };\n  RouteObserver.prototype.onError = function (error) {\n    if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\n      this._onProtocolError(error.message);\n    }\n    if (this._onError) {\n      this._onError(error);\n    }\n  };\n  RouteObserver.prototype.onCompleted = function (metadata) {\n    if (this._onCompleted) {\n      this._onCompleted(routing_table_raw_1.default.ofMessageResponse(metadata));\n    }\n  };\n  return RouteObserver;\n}(StreamObserver);\nexports.RouteObserver = RouteObserver;\nvar _states = {\n  READY_STREAMING: {\n    // async start state\n    onSuccess: function onSuccess(streamObserver, meta) {\n      streamObserver._handleRunSuccess(meta, function () {\n        streamObserver._setState(_states.STREAMING);\n      } // after run succeeded, async directly move to streaming\n      // state\n      );\n    },\n\n    onError: function onError(streamObserver, error) {\n      streamObserver._handleError(error);\n    },\n    name: function name() {\n      return 'READY_STREAMING';\n    }\n  },\n  READY: {\n    // reactive start state\n    onSuccess: function onSuccess(streamObserver, meta) {\n      streamObserver._handleRunSuccess(meta, function () {\n        return streamObserver._handleStreaming();\n      } // after run succeeded received, reactive shall start pulling\n      );\n    },\n\n    onError: function onError(streamObserver, error) {\n      streamObserver._handleError(error);\n    },\n    name: function name() {\n      return 'READY';\n    }\n  },\n  STREAMING: {\n    onSuccess: function onSuccess(streamObserver, meta) {\n      if (meta.has_more) {\n        streamObserver._handleHasMore(meta);\n      } else {\n        streamObserver._handlePullSuccess(meta);\n      }\n    },\n    onError: function onError(streamObserver, error) {\n      streamObserver._handleError(error);\n    },\n    name: function name() {\n      return 'STREAMING';\n    }\n  },\n  FAILED: {\n    onError: function onError(error) {\n      // more errors are ignored\n    },\n    name: function name() {\n      return 'FAILED';\n    }\n  },\n  SUCCEEDED: {\n    name: function name() {\n      return 'SUCCEEDED';\n    }\n  }\n};","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__importDefault","mod","__esModule","defineProperty","exports","value","ProcedureRouteObserver","RouteObserver","CompletedObserver","FailedObserver","ResetObserver","LoginObserver","ResultStreamObserver","StreamObserver","neo4j_driver_core_1","require","routing_table_raw_1","FETCH_ALL","internal","constants","PROTOCOL_ERROR","error","onNext","rawRecord","onError","onCompleted","meta","_super","_a","_b","_c","reactive","moreFunction","discardFunction","_d","fetchSize","beforeError","afterError","beforeKeys","afterKeys","beforeComplete","afterComplete","server","_this","_fieldKeys","_fieldLookup","_head","_queuedRecords","_tail","_error","_observers","_meta","_server","_beforeError","_afterError","_beforeKeys","_afterKeys","_beforeComplete","_afterComplete","_queryId","_moreFunction","_discardFunction","_discard","_fetchSize","_setState","_states","READY","READY_STREAMING","_setupAuoPull","record","Record","some","o","forEach","push","length","_highRecordWatermark","_autoPull","_state","onSuccess","cancel","prepareToHandleSingleResponse","STREAMING","markCompleted","SUCCEEDED","subscribe","observer","onKeys","i","_lowRecordWatermark","_handleStreaming","_handleHasMore","has_more","_handlePullSuccess","completionMetadata","assign","beforeHandlerResult","continuation","Promise","resolve","then","_handleRunSuccess","afterSuccess","fields","qid","undefined","_storeMetadataForCompletion","continuation_1","_handleError","FAILED","keys","index","key","state","Number","MAX_VALUE","_onError","_onCompleted","newError","json","stringify","metadata","onProtocolError","onComplete","_onProtocolError","_onComplete","code","message","resultObserver","_resultObserver","_records","default","ofRecord","ofMessageResponse","streamObserver","name"],"sources":["C:/Stanford/DigitalTracesApp3/node_modules/neo4j-driver-bolt-connection/lib/bolt/stream-observers.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProcedureRouteObserver = exports.RouteObserver = exports.CompletedObserver = exports.FailedObserver = exports.ResetObserver = exports.LoginObserver = exports.ResultStreamObserver = exports.StreamObserver = void 0;\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar routing_table_raw_1 = __importDefault(require(\"./routing-table-raw\"));\nvar FETCH_ALL = neo4j_driver_core_1.internal.constants.FETCH_ALL;\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\nvar StreamObserver = /** @class */ (function () {\n    function StreamObserver() {\n    }\n    StreamObserver.prototype.onNext = function (rawRecord) { };\n    StreamObserver.prototype.onError = function (error) { };\n    StreamObserver.prototype.onCompleted = function (meta) { };\n    return StreamObserver;\n}());\nexports.StreamObserver = StreamObserver;\n/**\n * Handles a RUN/PULL_ALL, or RUN/DISCARD_ALL requests, maps the responses\n * in a way that a user-provided observer can see these as a clean Stream\n * of records.\n * This class will queue up incoming messages until a user-provided observer\n * for the incoming stream is registered. Thus, we keep fields around\n * for tracking head/records/tail. These are only used if there is no\n * observer registered.\n * @access private\n */\nvar ResultStreamObserver = /** @class */ (function (_super) {\n    __extends(ResultStreamObserver, _super);\n    /**\n     *\n     * @param {Object} param\n     * @param {Object} param.server\n     * @param {boolean} param.reactive\n     * @param {function(stmtId: number|Integer, n: number|Integer, observer: StreamObserver)} param.moreFunction -\n     * @param {function(stmtId: number|Integer, observer: StreamObserver)} param.discardFunction -\n     * @param {number|Integer} param.fetchSize -\n     * @param {function(err: Error): Promise|void} param.beforeError -\n     * @param {function(err: Error): Promise|void} param.afterError -\n     * @param {function(keys: string[]): Promise|void} param.beforeKeys -\n     * @param {function(keys: string[]): Promise|void} param.afterKeys -\n     * @param {function(metadata: Object): Promise|void} param.beforeComplete -\n     * @param {function(metadata: Object): Promise|void} param.afterComplete -\n     */\n    function ResultStreamObserver(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.reactive, reactive = _c === void 0 ? false : _c, moreFunction = _b.moreFunction, discardFunction = _b.discardFunction, _d = _b.fetchSize, fetchSize = _d === void 0 ? FETCH_ALL : _d, beforeError = _b.beforeError, afterError = _b.afterError, beforeKeys = _b.beforeKeys, afterKeys = _b.afterKeys, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete, server = _b.server;\n        var _this = _super.call(this) || this;\n        _this._fieldKeys = null;\n        _this._fieldLookup = null;\n        _this._head = null;\n        _this._queuedRecords = [];\n        _this._tail = null;\n        _this._error = null;\n        _this._observers = [];\n        _this._meta = {};\n        _this._server = server;\n        _this._beforeError = beforeError;\n        _this._afterError = afterError;\n        _this._beforeKeys = beforeKeys;\n        _this._afterKeys = afterKeys;\n        _this._beforeComplete = beforeComplete;\n        _this._afterComplete = afterComplete;\n        _this._queryId = null;\n        _this._moreFunction = moreFunction;\n        _this._discardFunction = discardFunction;\n        _this._discard = false;\n        _this._fetchSize = fetchSize;\n        _this._setState(reactive ? _states.READY : _states.READY_STREAMING);\n        _this._setupAuoPull(fetchSize);\n        return _this;\n    }\n    /**\n     * Will be called on every record that comes in and transform a raw record\n     * to a Object. If user-provided observer is present, pass transformed record\n     * to it's onNext method, otherwise, push to record que.\n     * @param {Array} rawRecord - An array with the raw record\n     */\n    ResultStreamObserver.prototype.onNext = function (rawRecord) {\n        var record = new neo4j_driver_core_1.Record(this._fieldKeys, rawRecord, this._fieldLookup);\n        if (this._observers.some(function (o) { return o.onNext; })) {\n            this._observers.forEach(function (o) {\n                if (o.onNext) {\n                    o.onNext(record);\n                }\n            });\n        }\n        else {\n            this._queuedRecords.push(record);\n            if (this._queuedRecords.length > this._highRecordWatermark) {\n                this._autoPull = false;\n            }\n        }\n    };\n    ResultStreamObserver.prototype.onCompleted = function (meta) {\n        this._state.onSuccess(this, meta);\n    };\n    /**\n     * Will be called on errors.\n     * If user-provided observer is present, pass the error\n     * to it's onError method, otherwise set instance variable _error.\n     * @param {Object} error - An error object\n     */\n    ResultStreamObserver.prototype.onError = function (error) {\n        this._state.onError(this, error);\n    };\n    /**\n     * Cancel pending record stream\n     */\n    ResultStreamObserver.prototype.cancel = function () {\n        this._discard = true;\n    };\n    /**\n     * Stream observer defaults to handling responses for two messages: RUN + PULL_ALL or RUN + DISCARD_ALL.\n     * Response for RUN initializes query keys. Response for PULL_ALL / DISCARD_ALL exposes the result stream.\n     *\n     * However, some operations can be represented as a single message which receives full metadata in a single response.\n     * For example, operations to begin, commit and rollback an explicit transaction use two messages in Bolt V1 but a single message in Bolt V3.\n     * Messages are `RUN \"BEGIN\" {}` + `PULL_ALL` in Bolt V1 and `BEGIN` in Bolt V3.\n     *\n     * This function prepares the observer to only handle a single response message.\n     */\n    ResultStreamObserver.prototype.prepareToHandleSingleResponse = function () {\n        this._head = [];\n        this._fieldKeys = [];\n        this._setState(_states.STREAMING);\n    };\n    /**\n     * Mark this observer as if it has completed with no metadata.\n     */\n    ResultStreamObserver.prototype.markCompleted = function () {\n        this._head = [];\n        this._fieldKeys = [];\n        this._tail = {};\n        this._setState(_states.SUCCEEDED);\n    };\n    /**\n     * Subscribe to events with provided observer.\n     * @param {Object} observer - Observer object\n     * @param {function(keys: String[])} observer.onKeys - Handle stream header, field keys.\n     * @param {function(record: Object)} observer.onNext - Handle records, one by one.\n     * @param {function(metadata: Object)} observer.onCompleted - Handle stream tail, the metadata.\n     * @param {function(error: Object)} observer.onError - Handle errors, should always be provided.\n     */\n    ResultStreamObserver.prototype.subscribe = function (observer) {\n        if (this._error) {\n            observer.onError(this._error);\n            return;\n        }\n        if (this._head && observer.onKeys) {\n            observer.onKeys(this._head);\n        }\n        if (this._queuedRecords.length > 0 && observer.onNext) {\n            for (var i = 0; i < this._queuedRecords.length; i++) {\n                observer.onNext(this._queuedRecords[i]);\n                if (this._queuedRecords.length - i - 1 <= this._lowRecordWatermark) {\n                    this._autoPull = true;\n                    if (this._state === _states.READY) {\n                        this._handleStreaming();\n                    }\n                }\n            }\n        }\n        if (this._tail && observer.onCompleted) {\n            observer.onCompleted(this._tail);\n        }\n        this._observers.push(observer);\n        if (this._state === _states.READY) {\n            this._handleStreaming();\n        }\n    };\n    ResultStreamObserver.prototype._handleHasMore = function (meta) {\n        // We've consumed current batch and server notified us that there're more\n        // records to stream. Let's invoke more or discard function based on whether\n        // the user wants to discard streaming or not\n        this._setState(_states.READY); // we've done streaming\n        this._handleStreaming();\n        delete meta.has_more;\n    };\n    ResultStreamObserver.prototype._handlePullSuccess = function (meta) {\n        var _this = this;\n        this._setState(_states.SUCCEEDED);\n        var completionMetadata = Object.assign(this._server ? { server: this._server } : {}, this._meta, meta);\n        var beforeHandlerResult = null;\n        if (this._beforeComplete) {\n            beforeHandlerResult = this._beforeComplete(completionMetadata);\n        }\n        var continuation = function () {\n            // End of stream\n            _this._tail = completionMetadata;\n            if (_this._observers.some(function (o) { return o.onCompleted; })) {\n                _this._observers.forEach(function (o) {\n                    if (o.onCompleted) {\n                        o.onCompleted(completionMetadata);\n                    }\n                });\n            }\n            if (_this._afterComplete) {\n                _this._afterComplete(completionMetadata);\n            }\n        };\n        if (beforeHandlerResult) {\n            Promise.resolve(beforeHandlerResult).then(function () { return continuation(); });\n        }\n        else {\n            continuation();\n        }\n    };\n    ResultStreamObserver.prototype._handleRunSuccess = function (meta, afterSuccess) {\n        var _this = this;\n        if (this._fieldKeys === null) {\n            // Stream header, build a name->index field lookup table\n            // to be used by records. This is an optimization to make it\n            // faster to look up fields in a record by name, rather than by index.\n            // Since the records we get back via Bolt are just arrays of values.\n            this._fieldKeys = [];\n            this._fieldLookup = {};\n            if (meta.fields && meta.fields.length > 0) {\n                this._fieldKeys = meta.fields;\n                for (var i = 0; i < meta.fields.length; i++) {\n                    this._fieldLookup[meta.fields[i]] = i;\n                }\n                // remove fields key from metadata object\n                delete meta.fields;\n            }\n            // Extract server generated query id for use in requestMore and discard\n            // functions\n            if (meta.qid !== null && meta.qid !== undefined) {\n                this._queryId = meta.qid;\n                // remove qid from metadata object\n                delete meta.qid;\n            }\n            this._storeMetadataForCompletion(meta);\n            var beforeHandlerResult = null;\n            if (this._beforeKeys) {\n                beforeHandlerResult = this._beforeKeys(this._fieldKeys);\n            }\n            var continuation_1 = function () {\n                _this._head = _this._fieldKeys;\n                if (_this._observers.some(function (o) { return o.onKeys; })) {\n                    _this._observers.forEach(function (o) {\n                        if (o.onKeys) {\n                            o.onKeys(_this._fieldKeys);\n                        }\n                    });\n                }\n                if (_this._afterKeys) {\n                    _this._afterKeys(_this._fieldKeys);\n                }\n                afterSuccess();\n            };\n            if (beforeHandlerResult) {\n                Promise.resolve(beforeHandlerResult).then(function () { return continuation_1(); });\n            }\n            else {\n                continuation_1();\n            }\n        }\n    };\n    ResultStreamObserver.prototype._handleError = function (error) {\n        var _this = this;\n        this._setState(_states.FAILED);\n        this._error = error;\n        var beforeHandlerResult = null;\n        if (this._beforeError) {\n            beforeHandlerResult = this._beforeError(error);\n        }\n        var continuation = function () {\n            if (_this._observers.some(function (o) { return o.onError; })) {\n                _this._observers.forEach(function (o) {\n                    if (o.onError) {\n                        o.onError(error);\n                    }\n                });\n            }\n            if (_this._afterError) {\n                _this._afterError(error);\n            }\n        };\n        if (beforeHandlerResult) {\n            Promise.resolve(beforeHandlerResult).then(function () { return continuation(); });\n        }\n        else {\n            continuation();\n        }\n    };\n    ResultStreamObserver.prototype._handleStreaming = function () {\n        if (this._head && this._observers.some(function (o) { return o.onNext || o.onCompleted; })) {\n            if (this._discard) {\n                this._discardFunction(this._queryId, this);\n                this._setState(_states.STREAMING);\n            }\n            else if (this._autoPull) {\n                this._moreFunction(this._queryId, this._fetchSize, this);\n                this._setState(_states.STREAMING);\n            }\n        }\n    };\n    ResultStreamObserver.prototype._storeMetadataForCompletion = function (meta) {\n        var keys = Object.keys(meta);\n        var index = keys.length;\n        var key = '';\n        while (index--) {\n            key = keys[index];\n            this._meta[key] = meta[key];\n        }\n    };\n    ResultStreamObserver.prototype._setState = function (state) {\n        this._state = state;\n    };\n    ResultStreamObserver.prototype._setupAuoPull = function (fetchSize) {\n        this._autoPull = true;\n        if (fetchSize === FETCH_ALL) {\n            this._lowRecordWatermark = Number.MAX_VALUE; // we shall always lower than this number to enable auto pull\n            this._highRecordWatermark = Number.MAX_VALUE; // we shall never reach this number to disable auto pull\n        }\n        else {\n            this._lowRecordWatermark = 0.3 * fetchSize;\n            this._highRecordWatermark = 0.7 * fetchSize;\n        }\n    };\n    return ResultStreamObserver;\n}(StreamObserver));\nexports.ResultStreamObserver = ResultStreamObserver;\nvar LoginObserver = /** @class */ (function (_super) {\n    __extends(LoginObserver, _super);\n    /**\n     *\n     * @param {Object} param -\n     * @param {function(err: Error)} param.onError\n     * @param {function(metadata)} param.onCompleted\n     */\n    function LoginObserver(_a) {\n        var _b = _a === void 0 ? {} : _a, onError = _b.onError, onCompleted = _b.onCompleted;\n        var _this = _super.call(this) || this;\n        _this._onError = onError;\n        _this._onCompleted = onCompleted;\n        return _this;\n    }\n    LoginObserver.prototype.onNext = function (record) {\n        this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when initializing ' + neo4j_driver_core_1.json.stringify(record)));\n    };\n    LoginObserver.prototype.onError = function (error) {\n        if (this._onError) {\n            this._onError(error);\n        }\n    };\n    LoginObserver.prototype.onCompleted = function (metadata) {\n        if (this._onCompleted) {\n            this._onCompleted(metadata);\n        }\n    };\n    return LoginObserver;\n}(StreamObserver));\nexports.LoginObserver = LoginObserver;\nvar ResetObserver = /** @class */ (function (_super) {\n    __extends(ResetObserver, _super);\n    /**\n     *\n     * @param {Object} param -\n     * @param {function(err: String)} param.onProtocolError\n     * @param {function(err: Error)} param.onError\n     * @param {function(metadata)} param.onComplete\n     */\n    function ResetObserver(_a) {\n        var _b = _a === void 0 ? {} : _a, onProtocolError = _b.onProtocolError, onError = _b.onError, onComplete = _b.onComplete;\n        var _this = _super.call(this) || this;\n        _this._onProtocolError = onProtocolError;\n        _this._onError = onError;\n        _this._onComplete = onComplete;\n        return _this;\n    }\n    ResetObserver.prototype.onNext = function (record) {\n        this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when resetting: received record is: ' +\n            neo4j_driver_core_1.json.stringify(record), PROTOCOL_ERROR));\n    };\n    ResetObserver.prototype.onError = function (error) {\n        if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\n            this._onProtocolError(error.message);\n        }\n        if (this._onError) {\n            this._onError(error);\n        }\n    };\n    ResetObserver.prototype.onCompleted = function (metadata) {\n        if (this._onComplete) {\n            this._onComplete(metadata);\n        }\n    };\n    return ResetObserver;\n}(StreamObserver));\nexports.ResetObserver = ResetObserver;\nvar FailedObserver = /** @class */ (function (_super) {\n    __extends(FailedObserver, _super);\n    function FailedObserver(_a) {\n        var error = _a.error, onError = _a.onError;\n        var _this = _super.call(this, { beforeError: onError }) || this;\n        _this.onError(error);\n        return _this;\n    }\n    return FailedObserver;\n}(ResultStreamObserver));\nexports.FailedObserver = FailedObserver;\nvar CompletedObserver = /** @class */ (function (_super) {\n    __extends(CompletedObserver, _super);\n    function CompletedObserver() {\n        var _this = _super.call(this) || this;\n        _super.prototype.markCompleted.call(_this);\n        return _this;\n    }\n    return CompletedObserver;\n}(ResultStreamObserver));\nexports.CompletedObserver = CompletedObserver;\nvar ProcedureRouteObserver = /** @class */ (function (_super) {\n    __extends(ProcedureRouteObserver, _super);\n    function ProcedureRouteObserver(_a) {\n        var resultObserver = _a.resultObserver, onProtocolError = _a.onProtocolError, onError = _a.onError, onCompleted = _a.onCompleted;\n        var _this = _super.call(this) || this;\n        _this._resultObserver = resultObserver;\n        _this._onError = onError;\n        _this._onCompleted = onCompleted;\n        _this._records = [];\n        _this._onProtocolError = onProtocolError;\n        resultObserver.subscribe(_this);\n        return _this;\n    }\n    ProcedureRouteObserver.prototype.onNext = function (record) {\n        this._records.push(record);\n    };\n    ProcedureRouteObserver.prototype.onError = function (error) {\n        if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\n            this._onProtocolError(error.message);\n        }\n        if (this._onError) {\n            this._onError(error);\n        }\n    };\n    ProcedureRouteObserver.prototype.onCompleted = function () {\n        if (this._records !== null && this._records.length !== 1) {\n            this.onError((0, neo4j_driver_core_1.newError)('Illegal response from router. Received ' +\n                this._records.length +\n                ' records but expected only one.\\n' +\n                neo4j_driver_core_1.json.stringify(this._records), PROTOCOL_ERROR));\n            return;\n        }\n        if (this._onCompleted) {\n            this._onCompleted(routing_table_raw_1.default.ofRecord(this._records[0]));\n        }\n    };\n    return ProcedureRouteObserver;\n}(StreamObserver));\nexports.ProcedureRouteObserver = ProcedureRouteObserver;\nvar RouteObserver = /** @class */ (function (_super) {\n    __extends(RouteObserver, _super);\n    /**\n     *\n     * @param {Object} param -\n     * @param {function(err: String)} param.onProtocolError\n     * @param {function(err: Error)} param.onError\n     * @param {function(RawRoutingTable)} param.onCompleted\n     */\n    function RouteObserver(_a) {\n        var _b = _a === void 0 ? {} : _a, onProtocolError = _b.onProtocolError, onError = _b.onError, onCompleted = _b.onCompleted;\n        var _this = _super.call(this) || this;\n        _this._onProtocolError = onProtocolError;\n        _this._onError = onError;\n        _this._onCompleted = onCompleted;\n        return _this;\n    }\n    RouteObserver.prototype.onNext = function (record) {\n        this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when resetting: received record is: ' +\n            neo4j_driver_core_1.json.stringify(record), PROTOCOL_ERROR));\n    };\n    RouteObserver.prototype.onError = function (error) {\n        if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\n            this._onProtocolError(error.message);\n        }\n        if (this._onError) {\n            this._onError(error);\n        }\n    };\n    RouteObserver.prototype.onCompleted = function (metadata) {\n        if (this._onCompleted) {\n            this._onCompleted(routing_table_raw_1.default.ofMessageResponse(metadata));\n        }\n    };\n    return RouteObserver;\n}(StreamObserver));\nexports.RouteObserver = RouteObserver;\nvar _states = {\n    READY_STREAMING: {\n        // async start state\n        onSuccess: function (streamObserver, meta) {\n            streamObserver._handleRunSuccess(meta, function () {\n                streamObserver._setState(_states.STREAMING);\n            } // after run succeeded, async directly move to streaming\n            // state\n            );\n        },\n        onError: function (streamObserver, error) {\n            streamObserver._handleError(error);\n        },\n        name: function () {\n            return 'READY_STREAMING';\n        }\n    },\n    READY: {\n        // reactive start state\n        onSuccess: function (streamObserver, meta) {\n            streamObserver._handleRunSuccess(meta, function () { return streamObserver._handleStreaming(); } // after run succeeded received, reactive shall start pulling\n            );\n        },\n        onError: function (streamObserver, error) {\n            streamObserver._handleError(error);\n        },\n        name: function () {\n            return 'READY';\n        }\n    },\n    STREAMING: {\n        onSuccess: function (streamObserver, meta) {\n            if (meta.has_more) {\n                streamObserver._handleHasMore(meta);\n            }\n            else {\n                streamObserver._handlePullSuccess(meta);\n            }\n        },\n        onError: function (streamObserver, error) {\n            streamObserver._handleError(error);\n        },\n        name: function () {\n            return 'STREAMING';\n        }\n    },\n    FAILED: {\n        onError: function (error) {\n            // more errors are ignored\n        },\n        name: function () {\n            return 'FAILED';\n        }\n    },\n    SUCCEEDED: {\n        name: function () {\n            return 'SUCCEEDED';\n        }\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}