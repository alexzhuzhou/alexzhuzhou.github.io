{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar _a = neo4j_driver_core_1.internal.util,\n  ENCRYPTION_OFF = _a.ENCRYPTION_OFF,\n  ENCRYPTION_ON = _a.ENCRYPTION_ON;\nvar SERVICE_UNAVAILABLE = neo4j_driver_core_1.error.SERVICE_UNAVAILABLE;\nvar DEFAULT_CONNECTION_TIMEOUT_MILLIS = 30000; // 30 seconds by default\nvar ALLOWED_VALUES_ENCRYPTED = [null, undefined, true, false, ENCRYPTION_ON, ENCRYPTION_OFF];\nvar ALLOWED_VALUES_TRUST = [null, undefined, 'TRUST_ALL_CERTIFICATES', 'TRUST_CUSTOM_CA_SIGNED_CERTIFICATES', 'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES'];\nvar ChannelConfig = /** @class */function () {\n  /**\n   * @constructor\n   * @param {ServerAddress} address the address for the channel to connect to.\n   * @param {Object} driverConfig the driver config provided by the user when driver is created.\n   * @param {string} connectionErrorCode the default error code to use on connection errors.\n   */\n  function ChannelConfig(address, driverConfig, connectionErrorCode) {\n    this.address = address;\n    this.encrypted = extractEncrypted(driverConfig);\n    this.trust = extractTrust(driverConfig);\n    this.trustedCertificates = extractTrustedCertificates(driverConfig);\n    this.knownHostsPath = extractKnownHostsPath(driverConfig);\n    this.connectionErrorCode = connectionErrorCode || SERVICE_UNAVAILABLE;\n    this.connectionTimeout = extractConnectionTimeout(driverConfig);\n  }\n  return ChannelConfig;\n}();\nexports.default = ChannelConfig;\nfunction extractEncrypted(driverConfig) {\n  var value = driverConfig.encrypted;\n  if (ALLOWED_VALUES_ENCRYPTED.indexOf(value) === -1) {\n    throw (0, neo4j_driver_core_1.newError)(\"Illegal value of the encrypted setting \" + value + \". Expected one of \" + ALLOWED_VALUES_ENCRYPTED);\n  }\n  return value;\n}\nfunction extractTrust(driverConfig) {\n  var value = driverConfig.trust;\n  if (ALLOWED_VALUES_TRUST.indexOf(value) === -1) {\n    throw (0, neo4j_driver_core_1.newError)(\"Illegal value of the trust setting \" + value + \". Expected one of \" + ALLOWED_VALUES_TRUST);\n  }\n  return value;\n}\nfunction extractTrustedCertificates(driverConfig) {\n  return driverConfig.trustedCertificates || [];\n}\nfunction extractKnownHostsPath(driverConfig) {\n  return driverConfig.knownHosts || null;\n}\nfunction extractConnectionTimeout(driverConfig) {\n  var configuredTimeout = parseInt(driverConfig.connectionTimeout, 10);\n  if (configuredTimeout === 0) {\n    // timeout explicitly configured to 0\n    return null;\n  } else if (configuredTimeout && configuredTimeout < 0) {\n    // timeout explicitly configured to a negative value\n    return null;\n  } else if (!configuredTimeout) {\n    // timeout not configured, use default value\n    return DEFAULT_CONNECTION_TIMEOUT_MILLIS;\n  } else {\n    // timeout configured, use the provided value\n    return configuredTimeout;\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","neo4j_driver_core_1","require","_a","internal","util","ENCRYPTION_OFF","ENCRYPTION_ON","SERVICE_UNAVAILABLE","error","DEFAULT_CONNECTION_TIMEOUT_MILLIS","ALLOWED_VALUES_ENCRYPTED","undefined","ALLOWED_VALUES_TRUST","ChannelConfig","address","driverConfig","connectionErrorCode","encrypted","extractEncrypted","trust","extractTrust","trustedCertificates","extractTrustedCertificates","knownHostsPath","extractKnownHostsPath","connectionTimeout","extractConnectionTimeout","default","indexOf","newError","knownHosts","configuredTimeout","parseInt"],"sources":["C:/Stanford/DigitalTracesApp3/node_modules/neo4j-driver-bolt-connection/lib/channel/channel-config.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar _a = neo4j_driver_core_1.internal.util, ENCRYPTION_OFF = _a.ENCRYPTION_OFF, ENCRYPTION_ON = _a.ENCRYPTION_ON;\nvar SERVICE_UNAVAILABLE = neo4j_driver_core_1.error.SERVICE_UNAVAILABLE;\nvar DEFAULT_CONNECTION_TIMEOUT_MILLIS = 30000; // 30 seconds by default\nvar ALLOWED_VALUES_ENCRYPTED = [\n    null,\n    undefined,\n    true,\n    false,\n    ENCRYPTION_ON,\n    ENCRYPTION_OFF\n];\nvar ALLOWED_VALUES_TRUST = [\n    null,\n    undefined,\n    'TRUST_ALL_CERTIFICATES',\n    'TRUST_CUSTOM_CA_SIGNED_CERTIFICATES',\n    'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES'\n];\nvar ChannelConfig = /** @class */ (function () {\n    /**\n     * @constructor\n     * @param {ServerAddress} address the address for the channel to connect to.\n     * @param {Object} driverConfig the driver config provided by the user when driver is created.\n     * @param {string} connectionErrorCode the default error code to use on connection errors.\n     */\n    function ChannelConfig(address, driverConfig, connectionErrorCode) {\n        this.address = address;\n        this.encrypted = extractEncrypted(driverConfig);\n        this.trust = extractTrust(driverConfig);\n        this.trustedCertificates = extractTrustedCertificates(driverConfig);\n        this.knownHostsPath = extractKnownHostsPath(driverConfig);\n        this.connectionErrorCode = connectionErrorCode || SERVICE_UNAVAILABLE;\n        this.connectionTimeout = extractConnectionTimeout(driverConfig);\n    }\n    return ChannelConfig;\n}());\nexports.default = ChannelConfig;\nfunction extractEncrypted(driverConfig) {\n    var value = driverConfig.encrypted;\n    if (ALLOWED_VALUES_ENCRYPTED.indexOf(value) === -1) {\n        throw (0, neo4j_driver_core_1.newError)(\"Illegal value of the encrypted setting \" + value + \". Expected one of \" + ALLOWED_VALUES_ENCRYPTED);\n    }\n    return value;\n}\nfunction extractTrust(driverConfig) {\n    var value = driverConfig.trust;\n    if (ALLOWED_VALUES_TRUST.indexOf(value) === -1) {\n        throw (0, neo4j_driver_core_1.newError)(\"Illegal value of the trust setting \" + value + \". Expected one of \" + ALLOWED_VALUES_TRUST);\n    }\n    return value;\n}\nfunction extractTrustedCertificates(driverConfig) {\n    return driverConfig.trustedCertificates || [];\n}\nfunction extractKnownHostsPath(driverConfig) {\n    return driverConfig.knownHosts || null;\n}\nfunction extractConnectionTimeout(driverConfig) {\n    var configuredTimeout = parseInt(driverConfig.connectionTimeout, 10);\n    if (configuredTimeout === 0) {\n        // timeout explicitly configured to 0\n        return null;\n    }\n    else if (configuredTimeout && configuredTimeout < 0) {\n        // timeout explicitly configured to a negative value\n        return null;\n    }\n    else if (!configuredTimeout) {\n        // timeout not configured, use default value\n        return DEFAULT_CONNECTION_TIMEOUT_MILLIS;\n    }\n    else {\n        // timeout configured, use the provided value\n        return configuredTimeout;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}