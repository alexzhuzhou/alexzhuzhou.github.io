{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar round_robin_array_index_1 = __importDefault(require(\"./round-robin-array-index\"));\nvar load_balancing_strategy_1 = __importDefault(require(\"./load-balancing-strategy\"));\nvar LeastConnectedLoadBalancingStrategy = /** @class */function (_super) {\n  __extends(LeastConnectedLoadBalancingStrategy, _super);\n  /**\n   * @constructor\n   * @param {Pool} connectionPool the connection pool of this driver.\n   */\n  function LeastConnectedLoadBalancingStrategy(connectionPool) {\n    var _this = _super.call(this) || this;\n    _this._readersIndex = new round_robin_array_index_1.default();\n    _this._writersIndex = new round_robin_array_index_1.default();\n    _this._connectionPool = connectionPool;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n  LeastConnectedLoadBalancingStrategy.prototype.selectReader = function (knownReaders) {\n    return this._select(knownReaders, this._readersIndex);\n  };\n  /**\n   * @inheritDoc\n   */\n  LeastConnectedLoadBalancingStrategy.prototype.selectWriter = function (knownWriters) {\n    return this._select(knownWriters, this._writersIndex);\n  };\n  LeastConnectedLoadBalancingStrategy.prototype._select = function (addresses, roundRobinIndex) {\n    var length = addresses.length;\n    if (length === 0) {\n      return null;\n    }\n    // choose start index for iteration in round-robin fashion\n    var startIndex = roundRobinIndex.next(length);\n    var index = startIndex;\n    var leastConnectedAddress = null;\n    var leastActiveConnections = Number.MAX_SAFE_INTEGER;\n    // iterate over the array to find least connected address\n    do {\n      var address = addresses[index];\n      var activeConnections = this._connectionPool.activeResourceCount(address);\n      if (activeConnections < leastActiveConnections) {\n        leastConnectedAddress = address;\n        leastActiveConnections = activeConnections;\n      }\n      // loop over to the start of the array when end is reached\n      if (index === length - 1) {\n        index = 0;\n      } else {\n        index++;\n      }\n    } while (index !== startIndex);\n    return leastConnectedAddress;\n  };\n  return LeastConnectedLoadBalancingStrategy;\n}(load_balancing_strategy_1.default);\nexports.default = LeastConnectedLoadBalancingStrategy;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__importDefault","mod","__esModule","defineProperty","exports","value","round_robin_array_index_1","require","load_balancing_strategy_1","LeastConnectedLoadBalancingStrategy","_super","connectionPool","_this","_readersIndex","default","_writersIndex","_connectionPool","selectReader","knownReaders","_select","selectWriter","knownWriters","addresses","roundRobinIndex","length","startIndex","next","index","leastConnectedAddress","leastActiveConnections","Number","MAX_SAFE_INTEGER","address","activeConnections","activeResourceCount"],"sources":["C:/Stanford/DigitalTracesApp3/node_modules/neo4j-driver-bolt-connection/lib/load-balancing/least-connected-load-balancing-strategy.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar round_robin_array_index_1 = __importDefault(require(\"./round-robin-array-index\"));\nvar load_balancing_strategy_1 = __importDefault(require(\"./load-balancing-strategy\"));\nvar LeastConnectedLoadBalancingStrategy = /** @class */ (function (_super) {\n    __extends(LeastConnectedLoadBalancingStrategy, _super);\n    /**\n     * @constructor\n     * @param {Pool} connectionPool the connection pool of this driver.\n     */\n    function LeastConnectedLoadBalancingStrategy(connectionPool) {\n        var _this = _super.call(this) || this;\n        _this._readersIndex = new round_robin_array_index_1.default();\n        _this._writersIndex = new round_robin_array_index_1.default();\n        _this._connectionPool = connectionPool;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    LeastConnectedLoadBalancingStrategy.prototype.selectReader = function (knownReaders) {\n        return this._select(knownReaders, this._readersIndex);\n    };\n    /**\n     * @inheritDoc\n     */\n    LeastConnectedLoadBalancingStrategy.prototype.selectWriter = function (knownWriters) {\n        return this._select(knownWriters, this._writersIndex);\n    };\n    LeastConnectedLoadBalancingStrategy.prototype._select = function (addresses, roundRobinIndex) {\n        var length = addresses.length;\n        if (length === 0) {\n            return null;\n        }\n        // choose start index for iteration in round-robin fashion\n        var startIndex = roundRobinIndex.next(length);\n        var index = startIndex;\n        var leastConnectedAddress = null;\n        var leastActiveConnections = Number.MAX_SAFE_INTEGER;\n        // iterate over the array to find least connected address\n        do {\n            var address = addresses[index];\n            var activeConnections = this._connectionPool.activeResourceCount(address);\n            if (activeConnections < leastActiveConnections) {\n                leastConnectedAddress = address;\n                leastActiveConnections = activeConnections;\n            }\n            // loop over to the start of the array when end is reached\n            if (index === length - 1) {\n                index = 0;\n            }\n            else {\n                index++;\n            }\n        } while (index !== startIndex);\n        return leastConnectedAddress;\n    };\n    return LeastConnectedLoadBalancingStrategy;\n}(load_balancing_strategy_1.default));\nexports.default = LeastConnectedLoadBalancingStrategy;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}