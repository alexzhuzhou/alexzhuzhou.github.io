{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar bolt_protocol_v1_1 = __importDefault(require(\"./bolt-protocol-v1\"));\nvar bolt_protocol_v2_1 = __importDefault(require(\"./bolt-protocol-v2\"));\nvar bolt_protocol_v3_1 = __importDefault(require(\"./bolt-protocol-v3\"));\nvar bolt_protocol_v4x0_1 = __importDefault(require(\"./bolt-protocol-v4x0\"));\nvar bolt_protocol_v4x1_1 = __importDefault(require(\"./bolt-protocol-v4x1\"));\nvar bolt_protocol_v4x2_1 = __importDefault(require(\"./bolt-protocol-v4x2\"));\nvar bolt_protocol_v4x3_1 = __importDefault(require(\"./bolt-protocol-v4x3\"));\nvar bolt_protocol_v4x4_1 = __importDefault(require(\"./bolt-protocol-v4x4\"));\nvar response_handler_1 = __importDefault(require(\"./response-handler\"));\n/**\n * Creates a protocol with a given version\n *\n * @param {object} config\n * @param {number} config.version The version of the protocol\n * @param {channel} config.channel The channel\n * @param {Chunker} config.chunker The chunker\n * @param {Dechunker} config.dechunker The dechunker\n * @param {Logger} config.log The logger\n * @param {ResponseHandler~Observer} config.observer Observer\n * @param {boolean} config.disableLosslessIntegers Disable the lossless integers\n * @param {boolean} packstreamConfig.useBigInt if this connection should convert all received integers to native BigInt numbers.\n * @param {boolean} config.serversideRouting It's using server side routing\n */\nfunction create(_a) {\n  var _b = _a === void 0 ? {} : _a,\n    version = _b.version,\n    chunker = _b.chunker,\n    dechunker = _b.dechunker,\n    channel = _b.channel,\n    disableLosslessIntegers = _b.disableLosslessIntegers,\n    useBigInt = _b.useBigInt,\n    serversideRouting = _b.serversideRouting,\n    server = _b.server,\n    // server info\n    log = _b.log,\n    observer = _b.observer;\n  var createResponseHandler = function createResponseHandler(protocol) {\n    var responseHandler = new response_handler_1.default({\n      transformMetadata: protocol.transformMetadata.bind(protocol),\n      log: log,\n      observer: observer\n    });\n    // reset the error handler to just handle errors and forget about the handshake promise\n    channel.onerror = observer.onError.bind(observer);\n    // Ok, protocol running. Simply forward all messages to the dechunker\n    channel.onmessage = function (buf) {\n      return dechunker.write(buf);\n    };\n    // setup dechunker to dechunk messages and forward them to the message handler\n    dechunker.onmessage = function (buf) {\n      responseHandler.handleResponse(protocol.unpacker().unpack(buf));\n    };\n    return responseHandler;\n  };\n  return createProtocol(version, server, chunker, {\n    disableLosslessIntegers: disableLosslessIntegers,\n    useBigInt: useBigInt\n  }, serversideRouting, createResponseHandler, observer.onProtocolError.bind(observer), log);\n}\nexports.default = create;\nfunction createProtocol(version, server, chunker, packingConfig, serversideRouting, createResponseHandler, onProtocolError, log) {\n  switch (version) {\n    case 1:\n      return new bolt_protocol_v1_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError);\n    case 2:\n      return new bolt_protocol_v2_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError);\n    case 3:\n      return new bolt_protocol_v3_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError);\n    case 4.0:\n      return new bolt_protocol_v4x0_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError);\n    case 4.1:\n      return new bolt_protocol_v4x1_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\n    case 4.2:\n      return new bolt_protocol_v4x2_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\n    case 4.3:\n      return new bolt_protocol_v4x3_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\n    case 4.4:\n      return new bolt_protocol_v4x4_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\n    default:\n      throw (0, neo4j_driver_core_1.newError)('Unknown Bolt protocol version: ' + version);\n  }\n}","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","neo4j_driver_core_1","require","bolt_protocol_v1_1","bolt_protocol_v2_1","bolt_protocol_v3_1","bolt_protocol_v4x0_1","bolt_protocol_v4x1_1","bolt_protocol_v4x2_1","bolt_protocol_v4x3_1","bolt_protocol_v4x4_1","response_handler_1","create","_a","_b","version","chunker","dechunker","channel","disableLosslessIntegers","useBigInt","serversideRouting","server","log","observer","createResponseHandler","protocol","responseHandler","default","transformMetadata","bind","onerror","onError","onmessage","buf","write","handleResponse","unpacker","unpack","createProtocol","onProtocolError","packingConfig","newError"],"sources":["C:/Stanford/DigitalTracesApp3/node_modules/neo4j-driver-bolt-connection/lib/bolt/create.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar bolt_protocol_v1_1 = __importDefault(require(\"./bolt-protocol-v1\"));\nvar bolt_protocol_v2_1 = __importDefault(require(\"./bolt-protocol-v2\"));\nvar bolt_protocol_v3_1 = __importDefault(require(\"./bolt-protocol-v3\"));\nvar bolt_protocol_v4x0_1 = __importDefault(require(\"./bolt-protocol-v4x0\"));\nvar bolt_protocol_v4x1_1 = __importDefault(require(\"./bolt-protocol-v4x1\"));\nvar bolt_protocol_v4x2_1 = __importDefault(require(\"./bolt-protocol-v4x2\"));\nvar bolt_protocol_v4x3_1 = __importDefault(require(\"./bolt-protocol-v4x3\"));\nvar bolt_protocol_v4x4_1 = __importDefault(require(\"./bolt-protocol-v4x4\"));\nvar response_handler_1 = __importDefault(require(\"./response-handler\"));\n/**\n * Creates a protocol with a given version\n *\n * @param {object} config\n * @param {number} config.version The version of the protocol\n * @param {channel} config.channel The channel\n * @param {Chunker} config.chunker The chunker\n * @param {Dechunker} config.dechunker The dechunker\n * @param {Logger} config.log The logger\n * @param {ResponseHandler~Observer} config.observer Observer\n * @param {boolean} config.disableLosslessIntegers Disable the lossless integers\n * @param {boolean} packstreamConfig.useBigInt if this connection should convert all received integers to native BigInt numbers.\n * @param {boolean} config.serversideRouting It's using server side routing\n */\nfunction create(_a) {\n    var _b = _a === void 0 ? {} : _a, version = _b.version, chunker = _b.chunker, dechunker = _b.dechunker, channel = _b.channel, disableLosslessIntegers = _b.disableLosslessIntegers, useBigInt = _b.useBigInt, serversideRouting = _b.serversideRouting, server = _b.server, // server info\n    log = _b.log, observer = _b.observer;\n    var createResponseHandler = function (protocol) {\n        var responseHandler = new response_handler_1.default({\n            transformMetadata: protocol.transformMetadata.bind(protocol),\n            log: log,\n            observer: observer\n        });\n        // reset the error handler to just handle errors and forget about the handshake promise\n        channel.onerror = observer.onError.bind(observer);\n        // Ok, protocol running. Simply forward all messages to the dechunker\n        channel.onmessage = function (buf) { return dechunker.write(buf); };\n        // setup dechunker to dechunk messages and forward them to the message handler\n        dechunker.onmessage = function (buf) {\n            responseHandler.handleResponse(protocol.unpacker().unpack(buf));\n        };\n        return responseHandler;\n    };\n    return createProtocol(version, server, chunker, { disableLosslessIntegers: disableLosslessIntegers, useBigInt: useBigInt }, serversideRouting, createResponseHandler, observer.onProtocolError.bind(observer), log);\n}\nexports.default = create;\nfunction createProtocol(version, server, chunker, packingConfig, serversideRouting, createResponseHandler, onProtocolError, log) {\n    switch (version) {\n        case 1:\n            return new bolt_protocol_v1_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError);\n        case 2:\n            return new bolt_protocol_v2_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError);\n        case 3:\n            return new bolt_protocol_v3_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError);\n        case 4.0:\n            return new bolt_protocol_v4x0_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError);\n        case 4.1:\n            return new bolt_protocol_v4x1_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\n        case 4.2:\n            return new bolt_protocol_v4x2_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\n        case 4.3:\n            return new bolt_protocol_v4x3_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\n        case 4.4:\n            return new bolt_protocol_v4x4_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\n        default:\n            throw (0, neo4j_driver_core_1.newError)('Unknown Bolt protocol version: ' + version);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}