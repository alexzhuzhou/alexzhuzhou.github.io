{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _neo4jDriverCore = require(\"neo4j-driver-core\");\nvar _rxjs = require(\"rxjs\");\nvar _operators = require(\"rxjs/operators\");\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Logger = _neo4jDriverCore.internal.logger.Logger,\n  canRetryOn = _neo4jDriverCore.internal.retryStrategy.canRetryOn;\nvar SERVICE_UNAVAILABLE = _neo4jDriverCore.error.SERVICE_UNAVAILABLE,\n  SESSION_EXPIRED = _neo4jDriverCore.error.SESSION_EXPIRED;\nvar DEFAULT_MAX_RETRY_TIME_MS = 30 * 1000; // 30 seconds\n\nvar DEFAULT_INITIAL_RETRY_DELAY_MS = 1000; // 1 seconds\n\nvar DEFAULT_RETRY_DELAY_MULTIPLIER = 2.0;\nvar DEFAULT_RETRY_DELAY_JITTER_FACTOR = 0.2;\nvar RxRetryLogic = /*#__PURE__*/function () {\n  /**\n   *\n   * @param {Object} args\n   * @param {Logger} args.logger\n   */\n  function RxRetryLogic() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$maxRetryTimeout = _ref.maxRetryTimeout,\n      maxRetryTimeout = _ref$maxRetryTimeout === void 0 ? DEFAULT_MAX_RETRY_TIME_MS : _ref$maxRetryTimeout,\n      _ref$initialDelay = _ref.initialDelay,\n      initialDelay = _ref$initialDelay === void 0 ? DEFAULT_INITIAL_RETRY_DELAY_MS : _ref$initialDelay,\n      _ref$delayMultiplier = _ref.delayMultiplier,\n      delayMultiplier = _ref$delayMultiplier === void 0 ? DEFAULT_RETRY_DELAY_MULTIPLIER : _ref$delayMultiplier,\n      _ref$delayJitter = _ref.delayJitter,\n      delayJitter = _ref$delayJitter === void 0 ? DEFAULT_RETRY_DELAY_JITTER_FACTOR : _ref$delayJitter,\n      _ref$logger = _ref.logger,\n      logger = _ref$logger === void 0 ? null : _ref$logger;\n    (0, _classCallCheck2[\"default\"])(this, RxRetryLogic);\n    this._maxRetryTimeout = valueOrDefault(maxRetryTimeout, DEFAULT_MAX_RETRY_TIME_MS);\n    this._initialDelay = valueOrDefault(initialDelay, DEFAULT_INITIAL_RETRY_DELAY_MS);\n    this._delayMultiplier = valueOrDefault(delayMultiplier, DEFAULT_RETRY_DELAY_MULTIPLIER);\n    this._delayJitter = valueOrDefault(delayJitter, DEFAULT_RETRY_DELAY_JITTER_FACTOR);\n    this._logger = logger;\n  }\n  /**\n   *\n   * @param {Observable<Any>} work\n   */\n\n  (0, _createClass2[\"default\"])(RxRetryLogic, [{\n    key: \"retry\",\n    value: function retry(work) {\n      var _this = this;\n      return work.pipe((0, _operators.retryWhen)(function (failedWork) {\n        var handledExceptions = [];\n        var startTime = Date.now();\n        var retryCount = 1;\n        var delayDuration = _this._initialDelay;\n        return failedWork.pipe((0, _operators.flatMap)(function (err) {\n          if (!canRetryOn(err)) {\n            return (0, _rxjs.throwError)(err);\n          }\n          handledExceptions.push(err);\n          if (retryCount >= 2 && Date.now() - startTime >= _this._maxRetryTimeout) {\n            var _error = (0, _neo4jDriverCore.newError)(\"Failed after retried for \".concat(retryCount, \" times in \").concat(_this._maxRetryTimeout, \" ms. Make sure that your database is online and retry again.\"), SERVICE_UNAVAILABLE);\n            _error.seenErrors = handledExceptions;\n            return (0, _rxjs.throwError)(_error);\n          }\n          var nextDelayDuration = _this._computeNextDelay(delayDuration);\n          delayDuration = delayDuration * _this._delayMultiplier;\n          retryCount++;\n          if (_this._logger) {\n            _this._logger.warn(\"Transaction failed and will be retried in \".concat(nextDelayDuration));\n          }\n          return (0, _rxjs.of)(1).pipe((0, _operators.delay)(nextDelayDuration));\n        }));\n      }));\n    }\n  }, {\n    key: \"_computeNextDelay\",\n    value: function _computeNextDelay(delay) {\n      var jitter = delay * this._delayJitter;\n      return delay - jitter + 2 * jitter * Math.random();\n    }\n  }]);\n  return RxRetryLogic;\n}();\nexports[\"default\"] = RxRetryLogic;\nfunction valueOrDefault(value, defaultValue) {\n  if (value || value === 0) {\n    return value;\n  }\n  return defaultValue;\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_classCallCheck2","_createClass2","_neo4jDriverCore","_rxjs","_operators","Logger","internal","logger","canRetryOn","retryStrategy","SERVICE_UNAVAILABLE","error","SESSION_EXPIRED","DEFAULT_MAX_RETRY_TIME_MS","DEFAULT_INITIAL_RETRY_DELAY_MS","DEFAULT_RETRY_DELAY_MULTIPLIER","DEFAULT_RETRY_DELAY_JITTER_FACTOR","RxRetryLogic","_ref","arguments","length","undefined","_ref$maxRetryTimeout","maxRetryTimeout","_ref$initialDelay","initialDelay","_ref$delayMultiplier","delayMultiplier","_ref$delayJitter","delayJitter","_ref$logger","_maxRetryTimeout","valueOrDefault","_initialDelay","_delayMultiplier","_delayJitter","_logger","key","retry","work","_this","pipe","retryWhen","failedWork","handledExceptions","startTime","Date","now","retryCount","delayDuration","flatMap","err","throwError","push","_error","newError","concat","seenErrors","nextDelayDuration","_computeNextDelay","warn","of","delay","jitter","Math","random","defaultValue"],"sources":["C:/Stanford/DigitalTracesApp3/node_modules/neo4j-driver/lib/internal/retry-logic-rx.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _neo4jDriverCore = require(\"neo4j-driver-core\");\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Logger = _neo4jDriverCore.internal.logger.Logger,\n    canRetryOn = _neo4jDriverCore.internal.retryStrategy.canRetryOn;\nvar SERVICE_UNAVAILABLE = _neo4jDriverCore.error.SERVICE_UNAVAILABLE,\n    SESSION_EXPIRED = _neo4jDriverCore.error.SESSION_EXPIRED;\nvar DEFAULT_MAX_RETRY_TIME_MS = 30 * 1000; // 30 seconds\n\nvar DEFAULT_INITIAL_RETRY_DELAY_MS = 1000; // 1 seconds\n\nvar DEFAULT_RETRY_DELAY_MULTIPLIER = 2.0;\nvar DEFAULT_RETRY_DELAY_JITTER_FACTOR = 0.2;\n\nvar RxRetryLogic = /*#__PURE__*/function () {\n  /**\n   *\n   * @param {Object} args\n   * @param {Logger} args.logger\n   */\n  function RxRetryLogic() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$maxRetryTimeout = _ref.maxRetryTimeout,\n        maxRetryTimeout = _ref$maxRetryTimeout === void 0 ? DEFAULT_MAX_RETRY_TIME_MS : _ref$maxRetryTimeout,\n        _ref$initialDelay = _ref.initialDelay,\n        initialDelay = _ref$initialDelay === void 0 ? DEFAULT_INITIAL_RETRY_DELAY_MS : _ref$initialDelay,\n        _ref$delayMultiplier = _ref.delayMultiplier,\n        delayMultiplier = _ref$delayMultiplier === void 0 ? DEFAULT_RETRY_DELAY_MULTIPLIER : _ref$delayMultiplier,\n        _ref$delayJitter = _ref.delayJitter,\n        delayJitter = _ref$delayJitter === void 0 ? DEFAULT_RETRY_DELAY_JITTER_FACTOR : _ref$delayJitter,\n        _ref$logger = _ref.logger,\n        logger = _ref$logger === void 0 ? null : _ref$logger;\n\n    (0, _classCallCheck2[\"default\"])(this, RxRetryLogic);\n    this._maxRetryTimeout = valueOrDefault(maxRetryTimeout, DEFAULT_MAX_RETRY_TIME_MS);\n    this._initialDelay = valueOrDefault(initialDelay, DEFAULT_INITIAL_RETRY_DELAY_MS);\n    this._delayMultiplier = valueOrDefault(delayMultiplier, DEFAULT_RETRY_DELAY_MULTIPLIER);\n    this._delayJitter = valueOrDefault(delayJitter, DEFAULT_RETRY_DELAY_JITTER_FACTOR);\n    this._logger = logger;\n  }\n  /**\n   *\n   * @param {Observable<Any>} work\n   */\n\n\n  (0, _createClass2[\"default\"])(RxRetryLogic, [{\n    key: \"retry\",\n    value: function retry(work) {\n      var _this = this;\n\n      return work.pipe((0, _operators.retryWhen)(function (failedWork) {\n        var handledExceptions = [];\n        var startTime = Date.now();\n        var retryCount = 1;\n        var delayDuration = _this._initialDelay;\n        return failedWork.pipe((0, _operators.flatMap)(function (err) {\n          if (!canRetryOn(err)) {\n            return (0, _rxjs.throwError)(err);\n          }\n\n          handledExceptions.push(err);\n\n          if (retryCount >= 2 && Date.now() - startTime >= _this._maxRetryTimeout) {\n            var _error = (0, _neo4jDriverCore.newError)(\"Failed after retried for \".concat(retryCount, \" times in \").concat(_this._maxRetryTimeout, \" ms. Make sure that your database is online and retry again.\"), SERVICE_UNAVAILABLE);\n\n            _error.seenErrors = handledExceptions;\n            return (0, _rxjs.throwError)(_error);\n          }\n\n          var nextDelayDuration = _this._computeNextDelay(delayDuration);\n\n          delayDuration = delayDuration * _this._delayMultiplier;\n          retryCount++;\n\n          if (_this._logger) {\n            _this._logger.warn(\"Transaction failed and will be retried in \".concat(nextDelayDuration));\n          }\n\n          return (0, _rxjs.of)(1).pipe((0, _operators.delay)(nextDelayDuration));\n        }));\n      }));\n    }\n  }, {\n    key: \"_computeNextDelay\",\n    value: function _computeNextDelay(delay) {\n      var jitter = delay * this._delayJitter;\n      return delay - jitter + 2 * jitter * Math.random();\n    }\n  }]);\n  return RxRetryLogic;\n}();\n\nexports[\"default\"] = RxRetryLogic;\n\nfunction valueOrDefault(value, defaultValue) {\n  if (value || value === 0) {\n    return value;\n  }\n\n  return defaultValue;\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}