{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.epochSecondAndNanoToLocalDateTime = exports.nanoOfDayToLocalTime = exports.epochDayToDate = void 0;\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar _a = neo4j_driver_core_1.internal.temporalUtil,\n  DAYS_0000_TO_1970 = _a.DAYS_0000_TO_1970,\n  DAYS_PER_400_YEAR_CYCLE = _a.DAYS_PER_400_YEAR_CYCLE,\n  NANOS_PER_HOUR = _a.NANOS_PER_HOUR,\n  NANOS_PER_MINUTE = _a.NANOS_PER_MINUTE,\n  NANOS_PER_SECOND = _a.NANOS_PER_SECOND,\n  SECONDS_PER_DAY = _a.SECONDS_PER_DAY,\n  floorDiv = _a.floorDiv,\n  floorMod = _a.floorMod;\n/**\n * Converts given epoch day to a local date.\n * @param {Integer|number|string} epochDay the epoch day to convert.\n * @return {Date} the date representing the epoch day in years, months and days.\n */\nfunction epochDayToDate(epochDay) {\n  epochDay = (0, neo4j_driver_core_1.int)(epochDay);\n  var zeroDay = epochDay.add(DAYS_0000_TO_1970).subtract(60);\n  var adjust = (0, neo4j_driver_core_1.int)(0);\n  if (zeroDay.lessThan(0)) {\n    var adjustCycles = zeroDay.add(1).div(DAYS_PER_400_YEAR_CYCLE).subtract(1);\n    adjust = adjustCycles.multiply(400);\n    zeroDay = zeroDay.add(adjustCycles.multiply(-DAYS_PER_400_YEAR_CYCLE));\n  }\n  var year = zeroDay.multiply(400).add(591).div(DAYS_PER_400_YEAR_CYCLE);\n  var dayOfYearEst = zeroDay.subtract(year.multiply(365).add(year.div(4)).subtract(year.div(100)).add(year.div(400)));\n  if (dayOfYearEst.lessThan(0)) {\n    year = year.subtract(1);\n    dayOfYearEst = zeroDay.subtract(year.multiply(365).add(year.div(4)).subtract(year.div(100)).add(year.div(400)));\n  }\n  year = year.add(adjust);\n  var marchDayOfYear = dayOfYearEst;\n  var marchMonth = marchDayOfYear.multiply(5).add(2).div(153);\n  var month = marchMonth.add(2).modulo(12).add(1);\n  var day = marchDayOfYear.subtract(marchMonth.multiply(306).add(5).div(10)).add(1);\n  year = year.add(marchMonth.div(10));\n  return new neo4j_driver_core_1.Date(year, month, day);\n}\nexports.epochDayToDate = epochDayToDate;\n/**\n * Converts nanoseconds of the day into local time.\n * @param {Integer|number|string} nanoOfDay the nanoseconds of the day to convert.\n * @return {LocalTime} the local time representing given nanoseconds of the day.\n */\nfunction nanoOfDayToLocalTime(nanoOfDay) {\n  nanoOfDay = (0, neo4j_driver_core_1.int)(nanoOfDay);\n  var hour = nanoOfDay.div(NANOS_PER_HOUR);\n  nanoOfDay = nanoOfDay.subtract(hour.multiply(NANOS_PER_HOUR));\n  var minute = nanoOfDay.div(NANOS_PER_MINUTE);\n  nanoOfDay = nanoOfDay.subtract(minute.multiply(NANOS_PER_MINUTE));\n  var second = nanoOfDay.div(NANOS_PER_SECOND);\n  var nanosecond = nanoOfDay.subtract(second.multiply(NANOS_PER_SECOND));\n  return new neo4j_driver_core_1.LocalTime(hour, minute, second, nanosecond);\n}\nexports.nanoOfDayToLocalTime = nanoOfDayToLocalTime;\n/**\n * Converts given epoch second and nanosecond adjustment into a local date time object.\n * @param {Integer|number|string} epochSecond the epoch second to use.\n * @param {Integer|number|string} nano the nanosecond to use.\n * @return {LocalDateTime} the local date time representing given epoch second and nano.\n */\nfunction epochSecondAndNanoToLocalDateTime(epochSecond, nano) {\n  var epochDay = floorDiv(epochSecond, SECONDS_PER_DAY);\n  var secondsOfDay = floorMod(epochSecond, SECONDS_PER_DAY);\n  var nanoOfDay = secondsOfDay.multiply(NANOS_PER_SECOND).add(nano);\n  var localDate = epochDayToDate(epochDay);\n  var localTime = nanoOfDayToLocalTime(nanoOfDay);\n  return new neo4j_driver_core_1.LocalDateTime(localDate.year, localDate.month, localDate.day, localTime.hour, localTime.minute, localTime.second, localTime.nanosecond);\n}\nexports.epochSecondAndNanoToLocalDateTime = epochSecondAndNanoToLocalDateTime;","map":{"version":3,"names":["Object","defineProperty","exports","value","epochSecondAndNanoToLocalDateTime","nanoOfDayToLocalTime","epochDayToDate","neo4j_driver_core_1","require","_a","internal","temporalUtil","DAYS_0000_TO_1970","DAYS_PER_400_YEAR_CYCLE","NANOS_PER_HOUR","NANOS_PER_MINUTE","NANOS_PER_SECOND","SECONDS_PER_DAY","floorDiv","floorMod","epochDay","int","zeroDay","add","subtract","adjust","lessThan","adjustCycles","div","multiply","year","dayOfYearEst","marchDayOfYear","marchMonth","month","modulo","day","Date","nanoOfDay","hour","minute","second","nanosecond","LocalTime","epochSecond","nano","secondsOfDay","localDate","localTime","LocalDateTime"],"sources":["C:/Stanford/DigitalTracesApp3/node_modules/neo4j-driver-bolt-connection/lib/packstream/temporal-factory.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.epochSecondAndNanoToLocalDateTime = exports.nanoOfDayToLocalTime = exports.epochDayToDate = void 0;\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar _a = neo4j_driver_core_1.internal.temporalUtil, DAYS_0000_TO_1970 = _a.DAYS_0000_TO_1970, DAYS_PER_400_YEAR_CYCLE = _a.DAYS_PER_400_YEAR_CYCLE, NANOS_PER_HOUR = _a.NANOS_PER_HOUR, NANOS_PER_MINUTE = _a.NANOS_PER_MINUTE, NANOS_PER_SECOND = _a.NANOS_PER_SECOND, SECONDS_PER_DAY = _a.SECONDS_PER_DAY, floorDiv = _a.floorDiv, floorMod = _a.floorMod;\n/**\n * Converts given epoch day to a local date.\n * @param {Integer|number|string} epochDay the epoch day to convert.\n * @return {Date} the date representing the epoch day in years, months and days.\n */\nfunction epochDayToDate(epochDay) {\n    epochDay = (0, neo4j_driver_core_1.int)(epochDay);\n    var zeroDay = epochDay.add(DAYS_0000_TO_1970).subtract(60);\n    var adjust = (0, neo4j_driver_core_1.int)(0);\n    if (zeroDay.lessThan(0)) {\n        var adjustCycles = zeroDay\n            .add(1)\n            .div(DAYS_PER_400_YEAR_CYCLE)\n            .subtract(1);\n        adjust = adjustCycles.multiply(400);\n        zeroDay = zeroDay.add(adjustCycles.multiply(-DAYS_PER_400_YEAR_CYCLE));\n    }\n    var year = zeroDay\n        .multiply(400)\n        .add(591)\n        .div(DAYS_PER_400_YEAR_CYCLE);\n    var dayOfYearEst = zeroDay.subtract(year\n        .multiply(365)\n        .add(year.div(4))\n        .subtract(year.div(100))\n        .add(year.div(400)));\n    if (dayOfYearEst.lessThan(0)) {\n        year = year.subtract(1);\n        dayOfYearEst = zeroDay.subtract(year\n            .multiply(365)\n            .add(year.div(4))\n            .subtract(year.div(100))\n            .add(year.div(400)));\n    }\n    year = year.add(adjust);\n    var marchDayOfYear = dayOfYearEst;\n    var marchMonth = marchDayOfYear\n        .multiply(5)\n        .add(2)\n        .div(153);\n    var month = marchMonth\n        .add(2)\n        .modulo(12)\n        .add(1);\n    var day = marchDayOfYear\n        .subtract(marchMonth\n        .multiply(306)\n        .add(5)\n        .div(10))\n        .add(1);\n    year = year.add(marchMonth.div(10));\n    return new neo4j_driver_core_1.Date(year, month, day);\n}\nexports.epochDayToDate = epochDayToDate;\n/**\n * Converts nanoseconds of the day into local time.\n * @param {Integer|number|string} nanoOfDay the nanoseconds of the day to convert.\n * @return {LocalTime} the local time representing given nanoseconds of the day.\n */\nfunction nanoOfDayToLocalTime(nanoOfDay) {\n    nanoOfDay = (0, neo4j_driver_core_1.int)(nanoOfDay);\n    var hour = nanoOfDay.div(NANOS_PER_HOUR);\n    nanoOfDay = nanoOfDay.subtract(hour.multiply(NANOS_PER_HOUR));\n    var minute = nanoOfDay.div(NANOS_PER_MINUTE);\n    nanoOfDay = nanoOfDay.subtract(minute.multiply(NANOS_PER_MINUTE));\n    var second = nanoOfDay.div(NANOS_PER_SECOND);\n    var nanosecond = nanoOfDay.subtract(second.multiply(NANOS_PER_SECOND));\n    return new neo4j_driver_core_1.LocalTime(hour, minute, second, nanosecond);\n}\nexports.nanoOfDayToLocalTime = nanoOfDayToLocalTime;\n/**\n * Converts given epoch second and nanosecond adjustment into a local date time object.\n * @param {Integer|number|string} epochSecond the epoch second to use.\n * @param {Integer|number|string} nano the nanosecond to use.\n * @return {LocalDateTime} the local date time representing given epoch second and nano.\n */\nfunction epochSecondAndNanoToLocalDateTime(epochSecond, nano) {\n    var epochDay = floorDiv(epochSecond, SECONDS_PER_DAY);\n    var secondsOfDay = floorMod(epochSecond, SECONDS_PER_DAY);\n    var nanoOfDay = secondsOfDay.multiply(NANOS_PER_SECOND).add(nano);\n    var localDate = epochDayToDate(epochDay);\n    var localTime = nanoOfDayToLocalTime(nanoOfDay);\n    return new neo4j_driver_core_1.LocalDateTime(localDate.year, localDate.month, localDate.day, localTime.hour, localTime.minute, localTime.second, localTime.nanosecond);\n}\nexports.epochSecondAndNanoToLocalDateTime = epochSecondAndNanoToLocalDateTime;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}