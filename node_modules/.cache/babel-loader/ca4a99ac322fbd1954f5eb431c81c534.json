{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createChannelConnection = void 0;\nvar channel_1 = require(\"../channel\");\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar connection_1 = __importDefault(require(\"./connection\"));\nvar bolt_1 = __importDefault(require(\"../bolt\"));\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\nvar Logger = neo4j_driver_core_1.internal.logger.Logger;\nvar idGenerator = 0;\n/**\n * Crete new connection to the provided address. Returned connection is not connected.\n * @param {ServerAddress} address - the Bolt endpoint to connect to.\n * @param {Object} config - the driver configuration.\n * @param {ConnectionErrorHandler} errorHandler - the error handler for connection errors.\n * @param {Logger} log - configured logger.\n * @return {Connection} - new connection.\n */\nfunction createChannelConnection(address, config, errorHandler, log, serversideRouting, createChannel) {\n  if (serversideRouting === void 0) {\n    serversideRouting = null;\n  }\n  if (createChannel === void 0) {\n    createChannel = function createChannel(channelConfig) {\n      return new channel_1.Channel(channelConfig);\n    };\n  }\n  var channelConfig = new channel_1.ChannelConfig(address, config, errorHandler.errorCode());\n  var channel = createChannel(channelConfig);\n  return bolt_1.default.handshake(channel).then(function (_a) {\n    var version = _a.protocolVersion,\n      consumeRemainingBuffer = _a.consumeRemainingBuffer;\n    var chunker = new channel_1.Chunker(channel);\n    var dechunker = new channel_1.Dechunker();\n    var createProtocol = function createProtocol(conn) {\n      return bolt_1.default.create({\n        version: version,\n        channel: channel,\n        chunker: chunker,\n        dechunker: dechunker,\n        disableLosslessIntegers: config.disableLosslessIntegers,\n        useBigInt: config.useBigInt,\n        serversideRouting: serversideRouting,\n        server: conn.server,\n        log: conn.logger,\n        observer: {\n          onError: conn._handleFatalError.bind(conn),\n          onFailure: conn._resetOnFailure.bind(conn),\n          onProtocolError: conn._handleProtocolError.bind(conn),\n          onErrorApplyTransformation: function onErrorApplyTransformation(error) {\n            return conn.handleAndTransformError(error, conn._address);\n          }\n        }\n      });\n    };\n    var connection = new ChannelConnection(channel, errorHandler, address, log, config.disableLosslessIntegers, serversideRouting, chunker, createProtocol);\n    // forward all pending bytes to the dechunker\n    consumeRemainingBuffer(function (buffer) {\n      return dechunker.write(buffer);\n    });\n    return connection;\n  }).catch(function (reason) {\n    return channel.close().then(function () {\n      throw reason;\n    });\n  });\n}\nexports.createChannelConnection = createChannelConnection;\nvar ChannelConnection = /** @class */function (_super) {\n  __extends(ChannelConnection, _super);\n  /**\n   * @constructor\n   * @param {Channel} channel - channel with a 'write' function and a 'onmessage' callback property.\n   * @param {ConnectionErrorHandler} errorHandler the error handler.\n   * @param {ServerAddress} address - the server address to connect to.\n   * @param {Logger} log - the configured logger.\n   * @param {boolean} disableLosslessIntegers if this connection should convert all received integers to native JS numbers.\n   * @param {Chunker} chunker the chunker\n   * @param protocolSupplier Bolt protocol supplier\n   */\n  function ChannelConnection(channel, errorHandler, address, log, disableLosslessIntegers, serversideRouting, chunker,\n  // to be removed,\n  protocolSupplier) {\n    if (disableLosslessIntegers === void 0) {\n      disableLosslessIntegers = false;\n    }\n    if (serversideRouting === void 0) {\n      serversideRouting = null;\n    }\n    var _this = _super.call(this, errorHandler) || this;\n    _this._id = idGenerator++;\n    _this._address = address;\n    _this._server = {\n      address: address.asHostPort()\n    };\n    _this.creationTimestamp = Date.now();\n    _this._disableLosslessIntegers = disableLosslessIntegers;\n    _this._ch = channel;\n    _this._chunker = chunker;\n    _this._log = createConnectionLogger(_this, log);\n    _this._serversideRouting = serversideRouting;\n    // connection from the database, returned in response for HELLO message and might not be available\n    _this._dbConnectionId = null;\n    // bolt protocol is initially not initialized\n    /**\n     * @private\n     * @type {BoltProtocol}\n     */\n    _this._protocol = protocolSupplier(_this);\n    // Set to true on fatal errors, to get this out of connection pool.\n    _this._isBroken = false;\n    if (_this._log.isDebugEnabled()) {\n      _this._log.debug(\"created towards \" + address);\n    }\n    return _this;\n  }\n  Object.defineProperty(ChannelConnection.prototype, \"id\", {\n    get: function get() {\n      return this._id;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ChannelConnection.prototype, \"databaseId\", {\n    get: function get() {\n      return this._dbConnectionId;\n    },\n    set: function set(value) {\n      this._dbConnectionId = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Send initialization message.\n   * @param {string} userAgent the user agent for this driver.\n   * @param {Object} authToken the object containing auth information.\n   * @return {Promise<Connection>} promise resolved with the current connection if connection is successful. Rejected promise otherwise.\n   */\n  ChannelConnection.prototype.connect = function (userAgent, authToken) {\n    return this._initialize(userAgent, authToken);\n  };\n  /**\n   * Perform protocol-specific initialization which includes authentication.\n   * @param {string} userAgent the user agent for this driver.\n   * @param {Object} authToken the object containing auth information.\n   * @return {Promise<Connection>} promise resolved with the current connection if initialization is successful. Rejected promise otherwise.\n   */\n  ChannelConnection.prototype._initialize = function (userAgent, authToken) {\n    var _this = this;\n    var self = this;\n    return new Promise(function (resolve, reject) {\n      _this._protocol.initialize({\n        userAgent: userAgent,\n        authToken: authToken,\n        onError: function onError(err) {\n          return reject(err);\n        },\n        onComplete: function onComplete(metadata) {\n          if (metadata) {\n            // read server version from the response metadata, if it is available\n            var serverVersion = metadata.server;\n            if (!_this.version || serverVersion) {\n              _this.version = serverVersion;\n            }\n            // read database connection id from the response metadata, if it is available\n            var dbConnectionId = metadata.connection_id;\n            if (!_this.databaseId) {\n              _this.databaseId = dbConnectionId;\n            }\n            if (metadata.hints) {\n              var receiveTimeoutRaw = metadata.hints['connection.recv_timeout_seconds'];\n              if (receiveTimeoutRaw !== null && receiveTimeoutRaw !== undefined) {\n                var receiveTimeoutInSeconds = (0, neo4j_driver_core_1.toNumber)(receiveTimeoutRaw);\n                if (Number.isInteger(receiveTimeoutInSeconds) && receiveTimeoutInSeconds > 0) {\n                  _this._ch.setupReceiveTimeout(receiveTimeoutInSeconds * 1000);\n                } else {\n                  _this._log.info(\"Server located at \" + _this._address + \" supplied an invalid connection receive timeout value (\" + receiveTimeoutInSeconds + \"). \" + 'Please, verify the server configuration and status because this can be the symptom of a bigger issue.');\n                }\n              }\n            }\n          }\n          resolve(self);\n        }\n      });\n    });\n  };\n  /**\n   * Get the Bolt protocol for the connection.\n   * @return {BoltProtocol} the protocol.\n   */\n  ChannelConnection.prototype.protocol = function () {\n    return this._protocol;\n  };\n  Object.defineProperty(ChannelConnection.prototype, \"address\", {\n    get: function get() {\n      return this._address;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ChannelConnection.prototype, \"version\", {\n    /**\n     * Get the version of the connected server.\n     * Available only after initialization\n     *\n     * @returns {ServerVersion} version\n     */\n    get: function get() {\n      return this._server.version;\n    },\n    set: function set(value) {\n      this._server.version = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ChannelConnection.prototype, \"server\", {\n    get: function get() {\n      return this._server;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ChannelConnection.prototype, \"logger\", {\n    get: function get() {\n      return this._log;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * \"Fatal\" means the connection is dead. Only call this if something\n   * happens that cannot be recovered from. This will lead to all subscribers\n   * failing, and the connection getting ejected from the session pool.\n   *\n   * @param error an error object, forwarded to all current and future subscribers\n   */\n  ChannelConnection.prototype._handleFatalError = function (error) {\n    this._isBroken = true;\n    this._error = this.handleAndTransformError(this._protocol.currentFailure || error, this._address);\n    if (this._log.isErrorEnabled()) {\n      this._log.error(\"experienced a fatal error caused by \" + this._error + \" (\" + neo4j_driver_core_1.json.stringify(this._error) + \")\");\n    }\n    this._protocol.notifyFatalError(this._error);\n  };\n  /**\n   * This method still here because it's used by the {@link PooledConnectionProvider}\n   *\n   * @param {any} observer\n   */\n  ChannelConnection.prototype._queueObserver = function (observer) {\n    return this._protocol.queueObserverIfProtocolIsNotBroken(observer);\n  };\n  ChannelConnection.prototype.hasOngoingObservableRequests = function () {\n    return this._protocol.hasOngoingObservableRequests();\n  };\n  /**\n   * Send a RESET-message to the database. Message is immediately flushed to the network.\n   * @return {Promise<void>} promise resolved when SUCCESS-message response arrives, or failed when other response messages arrives.\n   */\n  ChannelConnection.prototype.resetAndFlush = function () {\n    var _this = this;\n    return new Promise(function (resolve, reject) {\n      _this._protocol.reset({\n        onError: function onError(error) {\n          if (_this._isBroken) {\n            // handling a fatal error, no need to raise a protocol violation\n            reject(error);\n          } else {\n            var neo4jError = _this._handleProtocolError('Received FAILURE as a response for RESET: ' + error);\n            reject(neo4jError);\n          }\n        },\n        onComplete: function onComplete() {\n          resolve();\n        }\n      });\n    });\n  };\n  ChannelConnection.prototype._resetOnFailure = function () {\n    var _this = this;\n    if (!this.isOpen()) {\n      return;\n    }\n    this._protocol.reset({\n      onError: function onError() {\n        _this._protocol.resetFailure();\n      },\n      onComplete: function onComplete() {\n        _this._protocol.resetFailure();\n      }\n    });\n  };\n  /*\n   * Pop next pending observer form the list of observers and make it current observer.\n   * @protected\n   */\n  ChannelConnection.prototype._updateCurrentObserver = function () {\n    this._protocol.updateCurrentObserver();\n  };\n  /** Check if this connection is in working condition */\n  ChannelConnection.prototype.isOpen = function () {\n    return !this._isBroken && this._ch._open;\n  };\n  /**\n   * Call close on the channel.\n   * @returns {Promise<void>} - A promise that will be resolved when the underlying channel is closed.\n   */\n  ChannelConnection.prototype.close = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this._log.isDebugEnabled()) {\n              this._log.debug('closing');\n            }\n            if (this._protocol && this.isOpen()) {\n              // protocol has been initialized and this connection is healthy\n              // notify the database about the upcoming close of the connection\n              this._protocol.prepareToClose();\n            }\n            return [4 /*yield*/, this._ch.close()];\n          case 1:\n            _a.sent();\n            if (this._log.isDebugEnabled()) {\n              this._log.debug('closed');\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  ChannelConnection.prototype.toString = function () {\n    return \"Connection [\" + this.id + \"][\" + (this.databaseId || '') + \"]\";\n  };\n  ChannelConnection.prototype._handleProtocolError = function (message) {\n    this._protocol.resetFailure();\n    this._updateCurrentObserver();\n    var error = (0, neo4j_driver_core_1.newError)(message, PROTOCOL_ERROR);\n    this._handleFatalError(error);\n    return error;\n  };\n  return ChannelConnection;\n}(connection_1.default);\nexports.default = ChannelConnection;\n/**\n * Creates a log with the connection info as prefix\n * @param {Connection} connection The connection\n * @param {Logger} logger The logger\n * @returns {Logger} The new logger with enriched messages\n */\nfunction createConnectionLogger(connection, logger) {\n  return new Logger(logger._level, function (level, message) {\n    return logger._loggerFunction(level, connection + \" \" + message);\n  });\n}","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","pop","length","push","__importDefault","mod","__esModule","defineProperty","exports","createChannelConnection","channel_1","require","neo4j_driver_core_1","connection_1","bolt_1","PROTOCOL_ERROR","error","Logger","internal","logger","idGenerator","address","config","errorHandler","log","serversideRouting","createChannel","channelConfig","Channel","ChannelConfig","errorCode","channel","default","handshake","_a","version","protocolVersion","consumeRemainingBuffer","chunker","Chunker","dechunker","Dechunker","createProtocol","conn","disableLosslessIntegers","useBigInt","server","observer","onError","_handleFatalError","bind","onFailure","_resetOnFailure","onProtocolError","_handleProtocolError","onErrorApplyTransformation","handleAndTransformError","_address","connection","ChannelConnection","buffer","write","catch","reason","close","_super","protocolSupplier","_this","_id","_server","asHostPort","creationTimestamp","Date","now","_disableLosslessIntegers","_ch","_chunker","_log","createConnectionLogger","_serversideRouting","_dbConnectionId","_protocol","_isBroken","isDebugEnabled","debug","get","enumerable","configurable","set","connect","userAgent","authToken","_initialize","self","initialize","err","onComplete","metadata","serverVersion","dbConnectionId","connection_id","databaseId","hints","receiveTimeoutRaw","undefined","receiveTimeoutInSeconds","toNumber","Number","isInteger","setupReceiveTimeout","info","protocol","_error","currentFailure","isErrorEnabled","json","stringify","notifyFatalError","_queueObserver","queueObserverIfProtocolIsNotBroken","hasOngoingObservableRequests","resetAndFlush","reset","neo4jError","isOpen","resetFailure","_updateCurrentObserver","updateCurrentObserver","_open","prepareToClose","toString","id","message","newError","_level","level","_loggerFunction"],"sources":["C:/Stanford/DigitalTracesApp3/node_modules/neo4j-driver-bolt-connection/lib/connection/connection-channel.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createChannelConnection = void 0;\nvar channel_1 = require(\"../channel\");\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar connection_1 = __importDefault(require(\"./connection\"));\nvar bolt_1 = __importDefault(require(\"../bolt\"));\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\nvar Logger = neo4j_driver_core_1.internal.logger.Logger;\nvar idGenerator = 0;\n/**\n * Crete new connection to the provided address. Returned connection is not connected.\n * @param {ServerAddress} address - the Bolt endpoint to connect to.\n * @param {Object} config - the driver configuration.\n * @param {ConnectionErrorHandler} errorHandler - the error handler for connection errors.\n * @param {Logger} log - configured logger.\n * @return {Connection} - new connection.\n */\nfunction createChannelConnection(address, config, errorHandler, log, serversideRouting, createChannel) {\n    if (serversideRouting === void 0) { serversideRouting = null; }\n    if (createChannel === void 0) { createChannel = function (channelConfig) { return new channel_1.Channel(channelConfig); }; }\n    var channelConfig = new channel_1.ChannelConfig(address, config, errorHandler.errorCode());\n    var channel = createChannel(channelConfig);\n    return bolt_1.default.handshake(channel)\n        .then(function (_a) {\n        var version = _a.protocolVersion, consumeRemainingBuffer = _a.consumeRemainingBuffer;\n        var chunker = new channel_1.Chunker(channel);\n        var dechunker = new channel_1.Dechunker();\n        var createProtocol = function (conn) {\n            return bolt_1.default.create({\n                version: version,\n                channel: channel,\n                chunker: chunker,\n                dechunker: dechunker,\n                disableLosslessIntegers: config.disableLosslessIntegers,\n                useBigInt: config.useBigInt,\n                serversideRouting: serversideRouting,\n                server: conn.server,\n                log: conn.logger,\n                observer: {\n                    onError: conn._handleFatalError.bind(conn),\n                    onFailure: conn._resetOnFailure.bind(conn),\n                    onProtocolError: conn._handleProtocolError.bind(conn),\n                    onErrorApplyTransformation: function (error) {\n                        return conn.handleAndTransformError(error, conn._address);\n                    }\n                }\n            });\n        };\n        var connection = new ChannelConnection(channel, errorHandler, address, log, config.disableLosslessIntegers, serversideRouting, chunker, createProtocol);\n        // forward all pending bytes to the dechunker\n        consumeRemainingBuffer(function (buffer) { return dechunker.write(buffer); });\n        return connection;\n    })\n        .catch(function (reason) {\n        return channel.close().then(function () {\n            throw reason;\n        });\n    });\n}\nexports.createChannelConnection = createChannelConnection;\nvar ChannelConnection = /** @class */ (function (_super) {\n    __extends(ChannelConnection, _super);\n    /**\n     * @constructor\n     * @param {Channel} channel - channel with a 'write' function and a 'onmessage' callback property.\n     * @param {ConnectionErrorHandler} errorHandler the error handler.\n     * @param {ServerAddress} address - the server address to connect to.\n     * @param {Logger} log - the configured logger.\n     * @param {boolean} disableLosslessIntegers if this connection should convert all received integers to native JS numbers.\n     * @param {Chunker} chunker the chunker\n     * @param protocolSupplier Bolt protocol supplier\n     */\n    function ChannelConnection(channel, errorHandler, address, log, disableLosslessIntegers, serversideRouting, chunker, // to be removed,\n    protocolSupplier) {\n        if (disableLosslessIntegers === void 0) { disableLosslessIntegers = false; }\n        if (serversideRouting === void 0) { serversideRouting = null; }\n        var _this = _super.call(this, errorHandler) || this;\n        _this._id = idGenerator++;\n        _this._address = address;\n        _this._server = { address: address.asHostPort() };\n        _this.creationTimestamp = Date.now();\n        _this._disableLosslessIntegers = disableLosslessIntegers;\n        _this._ch = channel;\n        _this._chunker = chunker;\n        _this._log = createConnectionLogger(_this, log);\n        _this._serversideRouting = serversideRouting;\n        // connection from the database, returned in response for HELLO message and might not be available\n        _this._dbConnectionId = null;\n        // bolt protocol is initially not initialized\n        /**\n         * @private\n         * @type {BoltProtocol}\n         */\n        _this._protocol = protocolSupplier(_this);\n        // Set to true on fatal errors, to get this out of connection pool.\n        _this._isBroken = false;\n        if (_this._log.isDebugEnabled()) {\n            _this._log.debug(\"created towards \" + address);\n        }\n        return _this;\n    }\n    Object.defineProperty(ChannelConnection.prototype, \"id\", {\n        get: function () {\n            return this._id;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"databaseId\", {\n        get: function () {\n            return this._dbConnectionId;\n        },\n        set: function (value) {\n            this._dbConnectionId = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Send initialization message.\n     * @param {string} userAgent the user agent for this driver.\n     * @param {Object} authToken the object containing auth information.\n     * @return {Promise<Connection>} promise resolved with the current connection if connection is successful. Rejected promise otherwise.\n     */\n    ChannelConnection.prototype.connect = function (userAgent, authToken) {\n        return this._initialize(userAgent, authToken);\n    };\n    /**\n     * Perform protocol-specific initialization which includes authentication.\n     * @param {string} userAgent the user agent for this driver.\n     * @param {Object} authToken the object containing auth information.\n     * @return {Promise<Connection>} promise resolved with the current connection if initialization is successful. Rejected promise otherwise.\n     */\n    ChannelConnection.prototype._initialize = function (userAgent, authToken) {\n        var _this = this;\n        var self = this;\n        return new Promise(function (resolve, reject) {\n            _this._protocol.initialize({\n                userAgent: userAgent,\n                authToken: authToken,\n                onError: function (err) { return reject(err); },\n                onComplete: function (metadata) {\n                    if (metadata) {\n                        // read server version from the response metadata, if it is available\n                        var serverVersion = metadata.server;\n                        if (!_this.version || serverVersion) {\n                            _this.version = serverVersion;\n                        }\n                        // read database connection id from the response metadata, if it is available\n                        var dbConnectionId = metadata.connection_id;\n                        if (!_this.databaseId) {\n                            _this.databaseId = dbConnectionId;\n                        }\n                        if (metadata.hints) {\n                            var receiveTimeoutRaw = metadata.hints['connection.recv_timeout_seconds'];\n                            if (receiveTimeoutRaw !== null &&\n                                receiveTimeoutRaw !== undefined) {\n                                var receiveTimeoutInSeconds = (0, neo4j_driver_core_1.toNumber)(receiveTimeoutRaw);\n                                if (Number.isInteger(receiveTimeoutInSeconds) &&\n                                    receiveTimeoutInSeconds > 0) {\n                                    _this._ch.setupReceiveTimeout(receiveTimeoutInSeconds * 1000);\n                                }\n                                else {\n                                    _this._log.info(\"Server located at \" + _this._address + \" supplied an invalid connection receive timeout value (\" + receiveTimeoutInSeconds + \"). \" +\n                                        'Please, verify the server configuration and status because this can be the symptom of a bigger issue.');\n                                }\n                            }\n                        }\n                    }\n                    resolve(self);\n                }\n            });\n        });\n    };\n    /**\n     * Get the Bolt protocol for the connection.\n     * @return {BoltProtocol} the protocol.\n     */\n    ChannelConnection.prototype.protocol = function () {\n        return this._protocol;\n    };\n    Object.defineProperty(ChannelConnection.prototype, \"address\", {\n        get: function () {\n            return this._address;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"version\", {\n        /**\n         * Get the version of the connected server.\n         * Available only after initialization\n         *\n         * @returns {ServerVersion} version\n         */\n        get: function () {\n            return this._server.version;\n        },\n        set: function (value) {\n            this._server.version = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"server\", {\n        get: function () {\n            return this._server;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"logger\", {\n        get: function () {\n            return this._log;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * \"Fatal\" means the connection is dead. Only call this if something\n     * happens that cannot be recovered from. This will lead to all subscribers\n     * failing, and the connection getting ejected from the session pool.\n     *\n     * @param error an error object, forwarded to all current and future subscribers\n     */\n    ChannelConnection.prototype._handleFatalError = function (error) {\n        this._isBroken = true;\n        this._error = this.handleAndTransformError(this._protocol.currentFailure || error, this._address);\n        if (this._log.isErrorEnabled()) {\n            this._log.error(\"experienced a fatal error caused by \" + this._error + \" (\" + neo4j_driver_core_1.json.stringify(this._error) + \")\");\n        }\n        this._protocol.notifyFatalError(this._error);\n    };\n    /**\n     * This method still here because it's used by the {@link PooledConnectionProvider}\n     *\n     * @param {any} observer\n     */\n    ChannelConnection.prototype._queueObserver = function (observer) {\n        return this._protocol.queueObserverIfProtocolIsNotBroken(observer);\n    };\n    ChannelConnection.prototype.hasOngoingObservableRequests = function () {\n        return this._protocol.hasOngoingObservableRequests();\n    };\n    /**\n     * Send a RESET-message to the database. Message is immediately flushed to the network.\n     * @return {Promise<void>} promise resolved when SUCCESS-message response arrives, or failed when other response messages arrives.\n     */\n    ChannelConnection.prototype.resetAndFlush = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._protocol.reset({\n                onError: function (error) {\n                    if (_this._isBroken) {\n                        // handling a fatal error, no need to raise a protocol violation\n                        reject(error);\n                    }\n                    else {\n                        var neo4jError = _this._handleProtocolError('Received FAILURE as a response for RESET: ' + error);\n                        reject(neo4jError);\n                    }\n                },\n                onComplete: function () {\n                    resolve();\n                }\n            });\n        });\n    };\n    ChannelConnection.prototype._resetOnFailure = function () {\n        var _this = this;\n        if (!this.isOpen()) {\n            return;\n        }\n        this._protocol.reset({\n            onError: function () {\n                _this._protocol.resetFailure();\n            },\n            onComplete: function () {\n                _this._protocol.resetFailure();\n            }\n        });\n    };\n    /*\n     * Pop next pending observer form the list of observers and make it current observer.\n     * @protected\n     */\n    ChannelConnection.prototype._updateCurrentObserver = function () {\n        this._protocol.updateCurrentObserver();\n    };\n    /** Check if this connection is in working condition */\n    ChannelConnection.prototype.isOpen = function () {\n        return !this._isBroken && this._ch._open;\n    };\n    /**\n     * Call close on the channel.\n     * @returns {Promise<void>} - A promise that will be resolved when the underlying channel is closed.\n     */\n    ChannelConnection.prototype.close = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this._log.isDebugEnabled()) {\n                            this._log.debug('closing');\n                        }\n                        if (this._protocol && this.isOpen()) {\n                            // protocol has been initialized and this connection is healthy\n                            // notify the database about the upcoming close of the connection\n                            this._protocol.prepareToClose();\n                        }\n                        return [4 /*yield*/, this._ch.close()];\n                    case 1:\n                        _a.sent();\n                        if (this._log.isDebugEnabled()) {\n                            this._log.debug('closed');\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ChannelConnection.prototype.toString = function () {\n        return \"Connection [\" + this.id + \"][\" + (this.databaseId || '') + \"]\";\n    };\n    ChannelConnection.prototype._handleProtocolError = function (message) {\n        this._protocol.resetFailure();\n        this._updateCurrentObserver();\n        var error = (0, neo4j_driver_core_1.newError)(message, PROTOCOL_ERROR);\n        this._handleFatalError(error);\n        return error;\n    };\n    return ChannelConnection;\n}(connection_1.default));\nexports.default = ChannelConnection;\n/**\n * Creates a log with the connection info as prefix\n * @param {Connection} connection The connection\n * @param {Logger} logger The logger\n * @returns {Logger} The new logger with enriched messages\n */\nfunction createConnectionLogger(connection, logger) {\n    return new Logger(logger._level, function (level, message) {\n        return logger._loggerFunction(level, connection + \" \" + message);\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}