{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar rediscovery_1 = __importStar(require(\"../rediscovery\"));\nvar channel_1 = require(\"../channel\");\nvar connection_provider_single_1 = __importDefault(require(\"./connection-provider-single\"));\nvar connection_provider_pooled_1 = __importDefault(require(\"./connection-provider-pooled\"));\nvar load_balancing_1 = require(\"../load-balancing\");\nvar connection_1 = require(\"../connection\");\nvar SERVICE_UNAVAILABLE = neo4j_driver_core_1.error.SERVICE_UNAVAILABLE,\n  SESSION_EXPIRED = neo4j_driver_core_1.error.SESSION_EXPIRED;\nvar Bookmark = neo4j_driver_core_1.internal.bookmark.Bookmark,\n  _a = neo4j_driver_core_1.internal.constants,\n  READ = _a.ACCESS_MODE_READ,\n  WRITE = _a.ACCESS_MODE_WRITE,\n  BOLT_PROTOCOL_V3 = _a.BOLT_PROTOCOL_V3,\n  BOLT_PROTOCOL_V4_0 = _a.BOLT_PROTOCOL_V4_0,\n  BOLT_PROTOCOL_V4_4 = _a.BOLT_PROTOCOL_V4_4;\nvar UNAUTHORIZED_ERROR_CODE = 'Neo.ClientError.Security.Unauthorized';\nvar DATABASE_NOT_FOUND_ERROR_CODE = 'Neo.ClientError.Database.DatabaseNotFound';\nvar SYSTEM_DB_NAME = 'system';\nvar DEFAULT_DB_NAME = null;\nvar DEFAULT_ROUTING_TABLE_PURGE_DELAY = (0, neo4j_driver_core_1.int)(30000);\nvar RoutingConnectionProvider = /** @class */function (_super) {\n  __extends(RoutingConnectionProvider, _super);\n  function RoutingConnectionProvider(_a) {\n    var id = _a.id,\n      address = _a.address,\n      routingContext = _a.routingContext,\n      hostNameResolver = _a.hostNameResolver,\n      config = _a.config,\n      log = _a.log,\n      userAgent = _a.userAgent,\n      authToken = _a.authToken,\n      routingTablePurgeDelay = _a.routingTablePurgeDelay;\n    var _this = _super.call(this, {\n      id: id,\n      config: config,\n      log: log,\n      userAgent: userAgent,\n      authToken: authToken\n    }, function (address) {\n      return (0, connection_1.createChannelConnection)(address, _this._config, _this._createConnectionErrorHandler(), _this._log, _this._routingContext);\n    }) || this;\n    _this._routingContext = __assign(__assign({}, routingContext), {\n      address: address.toString()\n    });\n    _this._seedRouter = address;\n    _this._rediscovery = new rediscovery_1.default(_this._routingContext);\n    _this._loadBalancingStrategy = new load_balancing_1.LeastConnectedLoadBalancingStrategy(_this._connectionPool);\n    _this._hostNameResolver = hostNameResolver;\n    _this._dnsResolver = new channel_1.HostNameResolver();\n    _this._log = log;\n    _this._useSeedRouter = true;\n    _this._routingTableRegistry = new RoutingTableRegistry(routingTablePurgeDelay ? (0, neo4j_driver_core_1.int)(routingTablePurgeDelay) : DEFAULT_ROUTING_TABLE_PURGE_DELAY);\n    return _this;\n  }\n  RoutingConnectionProvider.prototype._createConnectionErrorHandler = function () {\n    // connection errors mean SERVICE_UNAVAILABLE for direct driver but for routing driver they should only\n    // result in SESSION_EXPIRED because there might still exist other servers capable of serving the request\n    return new connection_1.ConnectionErrorHandler(SESSION_EXPIRED);\n  };\n  RoutingConnectionProvider.prototype._handleUnavailability = function (error, address, database) {\n    this._log.warn(\"Routing driver \" + this._id + \" will forget \" + address + \" for database '\" + database + \"' because of an error \" + error.code + \" '\" + error.message + \"'\");\n    this.forget(address, database || DEFAULT_DB_NAME);\n    return error;\n  };\n  RoutingConnectionProvider.prototype._handleAuthorizationExpired = function (error, address, database) {\n    this._log.warn(\"Routing driver \" + this._id + \" will close connections to \" + address + \" for database '\" + database + \"' because of an error \" + error.code + \" '\" + error.message + \"'\");\n    this._connectionPool.purge(address).catch(function () {});\n    return error;\n  };\n  RoutingConnectionProvider.prototype._handleWriteFailure = function (error, address, database) {\n    this._log.warn(\"Routing driver \" + this._id + \" will forget writer \" + address + \" for database '\" + database + \"' because of an error \" + error.code + \" '\" + error.message + \"'\");\n    this.forgetWriter(address, database || DEFAULT_DB_NAME);\n    return (0, neo4j_driver_core_1.newError)('No longer possible to write to server at ' + address, SESSION_EXPIRED);\n  };\n  /**\n   * See {@link ConnectionProvider} for more information about this method and\n   * its arguments.\n   */\n  RoutingConnectionProvider.prototype.acquireConnection = function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n      accessMode = _b.accessMode,\n      database = _b.database,\n      bookmarks = _b.bookmarks,\n      impersonatedUser = _b.impersonatedUser,\n      _onDatabaseNameResolved = _b.onDatabaseNameResolved;\n    return __awaiter(this, void 0, void 0, function () {\n      var name, address, context, databaseSpecificErrorHandler, routingTable, connection, error_1, transformed;\n      var _this = this;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            context = {\n              database: database || DEFAULT_DB_NAME\n            };\n            databaseSpecificErrorHandler = new connection_1.ConnectionErrorHandler(SESSION_EXPIRED, function (error, address) {\n              return _this._handleUnavailability(error, address, context.database);\n            }, function (error, address) {\n              return _this._handleWriteFailure(error, address, context.database);\n            }, function (error, address) {\n              return _this._handleAuthorizationExpired(error, address, context.database);\n            });\n            return [4 /*yield*/, this._freshRoutingTable({\n              accessMode: accessMode,\n              database: context.database,\n              bookmark: bookmarks,\n              impersonatedUser: impersonatedUser,\n              onDatabaseNameResolved: function onDatabaseNameResolved(databaseName) {\n                context.database = context.database || databaseName;\n                if (_onDatabaseNameResolved) {\n                  _onDatabaseNameResolved(databaseName);\n                }\n              }\n            })\n            // select a target server based on specified access mode\n            ];\n\n          case 1:\n            routingTable = _c.sent();\n            // select a target server based on specified access mode\n            if (accessMode === READ) {\n              address = this._loadBalancingStrategy.selectReader(routingTable.readers);\n              name = 'read';\n            } else if (accessMode === WRITE) {\n              address = this._loadBalancingStrategy.selectWriter(routingTable.writers);\n              name = 'write';\n            } else {\n              throw (0, neo4j_driver_core_1.newError)('Illegal mode ' + accessMode);\n            }\n            // we couldn't select a target server\n            if (!address) {\n              throw (0, neo4j_driver_core_1.newError)(\"Failed to obtain connection towards \" + name + \" server. Known routing table is: \" + routingTable, SESSION_EXPIRED);\n            }\n            _c.label = 2;\n          case 2:\n            _c.trys.push([2, 4,, 5]);\n            return [4 /*yield*/, this._acquireConnectionToServer(address, name, routingTable)];\n          case 3:\n            connection = _c.sent();\n            return [2 /*return*/, new connection_1.DelegateConnection(connection, databaseSpecificErrorHandler)];\n          case 4:\n            error_1 = _c.sent();\n            transformed = databaseSpecificErrorHandler.handleAndTransformError(error_1, address);\n            throw transformed;\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  RoutingConnectionProvider.prototype._hasProtocolVersion = function (versionPredicate) {\n    return __awaiter(this, void 0, void 0, function () {\n      var addresses, lastError, i, connection, protocolVersion, error_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this._resolveSeedRouter(this._seedRouter)];\n          case 1:\n            addresses = _a.sent();\n            i = 0;\n            _a.label = 2;\n          case 2:\n            if (!(i < addresses.length)) return [3 /*break*/, 8];\n            _a.label = 3;\n          case 3:\n            _a.trys.push([3, 6,, 7]);\n            return [4 /*yield*/, (0, connection_1.createChannelConnection)(addresses[i], this._config, this._createConnectionErrorHandler(), this._log)];\n          case 4:\n            connection = _a.sent();\n            protocolVersion = connection.protocol() ? connection.protocol().version : null;\n            return [4 /*yield*/, connection.close()];\n          case 5:\n            _a.sent();\n            if (protocolVersion) {\n              return [2 /*return*/, versionPredicate(protocolVersion)];\n            }\n            return [2 /*return*/, false];\n          case 6:\n            error_2 = _a.sent();\n            lastError = error_2;\n            return [3 /*break*/, 7];\n          case 7:\n            i++;\n            return [3 /*break*/, 2];\n          case 8:\n            if (lastError) {\n              throw lastError;\n            }\n            return [2 /*return*/, false];\n        }\n      });\n    });\n  };\n  RoutingConnectionProvider.prototype.supportsMultiDb = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this._hasProtocolVersion(function (version) {\n              return version >= BOLT_PROTOCOL_V4_0;\n            })];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  RoutingConnectionProvider.prototype.supportsTransactionConfig = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this._hasProtocolVersion(function (version) {\n              return version >= BOLT_PROTOCOL_V3;\n            })];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  RoutingConnectionProvider.prototype.supportsUserImpersonation = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this._hasProtocolVersion(function (version) {\n              return version >= BOLT_PROTOCOL_V4_4;\n            })];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  RoutingConnectionProvider.prototype.forget = function (address, database) {\n    this._routingTableRegistry.apply(database, {\n      applyWhenExists: function applyWhenExists(routingTable) {\n        return routingTable.forget(address);\n      }\n    });\n    // We're firing and forgetting this operation explicitly and listening for any\n    // errors to avoid unhandled promise rejection\n    this._connectionPool.purge(address).catch(function () {});\n  };\n  RoutingConnectionProvider.prototype.forgetWriter = function (address, database) {\n    this._routingTableRegistry.apply(database, {\n      applyWhenExists: function applyWhenExists(routingTable) {\n        return routingTable.forgetWriter(address);\n      }\n    });\n  };\n  RoutingConnectionProvider.prototype._acquireConnectionToServer = function (address, serverName, routingTable) {\n    return this._connectionPool.acquire(address);\n  };\n  RoutingConnectionProvider.prototype._freshRoutingTable = function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n      accessMode = _b.accessMode,\n      database = _b.database,\n      bookmark = _b.bookmark,\n      impersonatedUser = _b.impersonatedUser,\n      onDatabaseNameResolved = _b.onDatabaseNameResolved;\n    var currentRoutingTable = this._routingTableRegistry.get(database, function () {\n      return new rediscovery_1.RoutingTable({\n        database: database\n      });\n    });\n    if (!currentRoutingTable.isStaleFor(accessMode)) {\n      return currentRoutingTable;\n    }\n    this._log.info(\"Routing table is stale for database: \\\"\" + database + \"\\\" and access mode: \\\"\" + accessMode + \"\\\": \" + currentRoutingTable);\n    return this._refreshRoutingTable(currentRoutingTable, bookmark, impersonatedUser, onDatabaseNameResolved);\n  };\n  RoutingConnectionProvider.prototype._refreshRoutingTable = function (currentRoutingTable, bookmark, impersonatedUser, onDatabaseNameResolved) {\n    var knownRouters = currentRoutingTable.routers;\n    if (this._useSeedRouter) {\n      return this._fetchRoutingTableFromSeedRouterFallbackToKnownRouters(knownRouters, currentRoutingTable, bookmark, impersonatedUser, onDatabaseNameResolved);\n    }\n    return this._fetchRoutingTableFromKnownRoutersFallbackToSeedRouter(knownRouters, currentRoutingTable, bookmark, impersonatedUser, onDatabaseNameResolved);\n  };\n  RoutingConnectionProvider.prototype._fetchRoutingTableFromSeedRouterFallbackToKnownRouters = function (knownRouters, currentRoutingTable, bookmark, impersonatedUser, onDatabaseNameResolved) {\n    return __awaiter(this, void 0, void 0, function () {\n      var seenRouters, newRoutingTable;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            seenRouters = [];\n            return [4 /*yield*/, this._fetchRoutingTableUsingSeedRouter(seenRouters, this._seedRouter, currentRoutingTable, bookmark, impersonatedUser)];\n          case 1:\n            newRoutingTable = _a.sent();\n            if (!newRoutingTable) return [3 /*break*/, 2];\n            this._useSeedRouter = false;\n            return [3 /*break*/, 4];\n          case 2:\n            return [4 /*yield*/, this._fetchRoutingTableUsingKnownRouters(knownRouters, currentRoutingTable, bookmark, impersonatedUser)];\n          case 3:\n            // seed router did not return a valid routing table - try to use other known routers\n            newRoutingTable = _a.sent();\n            _a.label = 4;\n          case 4:\n            return [4 /*yield*/, this._applyRoutingTableIfPossible(currentRoutingTable, newRoutingTable, onDatabaseNameResolved)];\n          case 5:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  RoutingConnectionProvider.prototype._fetchRoutingTableFromKnownRoutersFallbackToSeedRouter = function (knownRouters, currentRoutingTable, bookmark, impersonatedUser, onDatabaseNameResolved) {\n    return __awaiter(this, void 0, void 0, function () {\n      var newRoutingTable;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this._fetchRoutingTableUsingKnownRouters(knownRouters, currentRoutingTable, bookmark, impersonatedUser)];\n          case 1:\n            newRoutingTable = _a.sent();\n            if (!!newRoutingTable) return [3 /*break*/, 3];\n            return [4 /*yield*/, this._fetchRoutingTableUsingSeedRouter(knownRouters, this._seedRouter, currentRoutingTable, bookmark, impersonatedUser)];\n          case 2:\n            // none of the known routers returned a valid routing table - try to use seed router address for rediscovery\n            newRoutingTable = _a.sent();\n            _a.label = 3;\n          case 3:\n            return [4 /*yield*/, this._applyRoutingTableIfPossible(currentRoutingTable, newRoutingTable, onDatabaseNameResolved)];\n          case 4:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  RoutingConnectionProvider.prototype._fetchRoutingTableUsingKnownRouters = function (knownRouters, currentRoutingTable, bookmark, impersonatedUser) {\n    return __awaiter(this, void 0, void 0, function () {\n      var newRoutingTable, lastRouterIndex;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this._fetchRoutingTable(knownRouters, currentRoutingTable, bookmark, impersonatedUser)];\n          case 1:\n            newRoutingTable = _a.sent();\n            if (newRoutingTable) {\n              // one of the known routers returned a valid routing table - use it\n              return [2 /*return*/, newRoutingTable];\n            }\n            lastRouterIndex = knownRouters.length - 1;\n            RoutingConnectionProvider._forgetRouter(currentRoutingTable, knownRouters, lastRouterIndex);\n            return [2 /*return*/, null];\n        }\n      });\n    });\n  };\n  RoutingConnectionProvider.prototype._fetchRoutingTableUsingSeedRouter = function (seenRouters, seedRouter, routingTable, bookmark, impersonatedUser) {\n    return __awaiter(this, void 0, void 0, function () {\n      var resolvedAddresses, newAddresses;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this._resolveSeedRouter(seedRouter)\n            // filter out all addresses that we've already tried\n            ];\n\n          case 1:\n            resolvedAddresses = _a.sent();\n            newAddresses = resolvedAddresses.filter(function (address) {\n              return seenRouters.indexOf(address) < 0;\n            });\n            return [4 /*yield*/, this._fetchRoutingTable(newAddresses, routingTable, bookmark, impersonatedUser)];\n          case 2:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  RoutingConnectionProvider.prototype._resolveSeedRouter = function (seedRouter) {\n    return __awaiter(this, void 0, void 0, function () {\n      var resolvedAddresses, dnsResolvedAddresses;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this._hostNameResolver.resolve(seedRouter)];\n          case 1:\n            resolvedAddresses = _a.sent();\n            return [4 /*yield*/, Promise.all(resolvedAddresses.map(function (address) {\n              return _this._dnsResolver.resolve(address);\n            }))];\n          case 2:\n            dnsResolvedAddresses = _a.sent();\n            return [2 /*return*/, [].concat.apply([], dnsResolvedAddresses)];\n        }\n      });\n    });\n  };\n  RoutingConnectionProvider.prototype._fetchRoutingTable = function (routerAddresses, routingTable, bookmark, impersonatedUser) {\n    var _this = this;\n    return routerAddresses.reduce(function (refreshedTablePromise, currentRouter, currentIndex) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var newRoutingTable, previousRouterIndex, session, error_3;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4 /*yield*/, refreshedTablePromise];\n            case 1:\n              newRoutingTable = _a.sent();\n              if (newRoutingTable) {\n                // valid routing table was fetched - just return it, try next router otherwise\n                return [2 /*return*/, newRoutingTable];\n              } else {\n                previousRouterIndex = currentIndex - 1;\n                RoutingConnectionProvider._forgetRouter(routingTable, routerAddresses, previousRouterIndex);\n              }\n              return [4 /*yield*/, this._createSessionForRediscovery(currentRouter, bookmark, impersonatedUser)];\n            case 2:\n              session = _a.sent();\n              if (!session) return [3 /*break*/, 8];\n              _a.label = 3;\n            case 3:\n              _a.trys.push([3, 5, 6, 7]);\n              return [4 /*yield*/, this._rediscovery.lookupRoutingTableOnRouter(session, routingTable.database, currentRouter, impersonatedUser)];\n            case 4:\n              return [2 /*return*/, _a.sent()];\n            case 5:\n              error_3 = _a.sent();\n              if (error_3 && error_3.code === DATABASE_NOT_FOUND_ERROR_CODE) {\n                // not finding the target database is a sign of a configuration issue\n                throw error_3;\n              }\n              this._log.warn(\"unable to fetch routing table because of an error \" + error_3);\n              return [2 /*return*/, null];\n            case 6:\n              session.close();\n              return [7 /*endfinally*/];\n            case 7:\n              return [3 /*break*/, 9];\n            case 8:\n              // unable to acquire connection and create session towards the current router\n              // return null to signal that the next router should be tried\n              return [2 /*return*/, null];\n            case 9:\n              return [2 /*return*/];\n          }\n        });\n      });\n    }, Promise.resolve(null));\n  };\n  RoutingConnectionProvider.prototype._createSessionForRediscovery = function (routerAddress, bookmark, impersonatedUser) {\n    return __awaiter(this, void 0, void 0, function () {\n      var connection, databaseSpecificErrorHandler, connectionProvider, protocolVersion, error_4;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n            return [4 /*yield*/, this._connectionPool.acquire(routerAddress)];\n          case 1:\n            connection = _a.sent();\n            databaseSpecificErrorHandler = connection_1.ConnectionErrorHandler.create({\n              errorCode: SESSION_EXPIRED,\n              handleAuthorizationExpired: function handleAuthorizationExpired(error, address) {\n                return _this._handleAuthorizationExpired(error, address);\n              }\n            });\n            connectionProvider = new connection_provider_single_1.default(new connection_1.DelegateConnection(connection, databaseSpecificErrorHandler));\n            protocolVersion = connection.protocol().version;\n            if (protocolVersion < 4.0) {\n              return [2 /*return*/, new neo4j_driver_core_1.Session({\n                mode: WRITE,\n                bookmark: Bookmark.empty(),\n                connectionProvider: connectionProvider\n              })];\n            }\n            return [2 /*return*/, new neo4j_driver_core_1.Session({\n              mode: READ,\n              database: SYSTEM_DB_NAME,\n              bookmark: bookmark,\n              connectionProvider: connectionProvider,\n              impersonatedUser: impersonatedUser\n            })];\n          case 2:\n            error_4 = _a.sent();\n            // unable to acquire connection towards the given router\n            if (error_4 && error_4.code === UNAUTHORIZED_ERROR_CODE) {\n              // auth error and not finding system database is a sign of a configuration issue\n              // discovery should not proceed\n              throw error_4;\n            }\n            return [2 /*return*/, null];\n          case 3:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  RoutingConnectionProvider.prototype._applyRoutingTableIfPossible = function (currentRoutingTable, newRoutingTable, onDatabaseNameResolved) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!newRoutingTable) {\n              // none of routing servers returned valid routing table, throw exception\n              throw (0, neo4j_driver_core_1.newError)(\"Could not perform discovery. No routing servers available. Known routing table: \" + currentRoutingTable, SERVICE_UNAVAILABLE);\n            }\n            if (newRoutingTable.writers.length === 0) {\n              // use seed router next time. this is important when cluster is partitioned. it tries to make sure driver\n              // does not always get routing table without writers because it talks exclusively to a minority partition\n              this._useSeedRouter = true;\n            }\n            return [4 /*yield*/, this._updateRoutingTable(newRoutingTable, onDatabaseNameResolved)];\n          case 1:\n            _a.sent();\n            return [2 /*return*/, newRoutingTable];\n        }\n      });\n    });\n  };\n  RoutingConnectionProvider.prototype._updateRoutingTable = function (newRoutingTable, onDatabaseNameResolved) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // close old connections to servers not present in the new routing table\n            return [4 /*yield*/, this._connectionPool.keepAll(newRoutingTable.allServers())];\n          case 1:\n            // close old connections to servers not present in the new routing table\n            _a.sent();\n            this._routingTableRegistry.removeExpired();\n            this._routingTableRegistry.register(newRoutingTable);\n            onDatabaseNameResolved(newRoutingTable.database);\n            this._log.info(\"Updated routing table \" + newRoutingTable);\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  RoutingConnectionProvider._forgetRouter = function (routingTable, routersArray, routerIndex) {\n    var address = routersArray[routerIndex];\n    if (routingTable && address) {\n      routingTable.forgetRouter(address);\n    }\n  };\n  return RoutingConnectionProvider;\n}(connection_provider_pooled_1.default);\nexports.default = RoutingConnectionProvider;\n/**\n * Responsible for keeping track of the existing routing tables\n */\nvar RoutingTableRegistry = /** @class */function () {\n  /**\n   * Constructor\n   * @param {int} routingTablePurgeDelay The routing table purge delay\n   */\n  function RoutingTableRegistry(routingTablePurgeDelay) {\n    this._tables = new Map();\n    this._routingTablePurgeDelay = routingTablePurgeDelay;\n  }\n  /**\n   * Put a routing table in the registry\n   *\n   * @param {RoutingTable} table The routing table\n   * @returns {RoutingTableRegistry} this\n   */\n  RoutingTableRegistry.prototype.register = function (table) {\n    this._tables.set(table.database, table);\n    return this;\n  };\n  /**\n   * Apply function in the routing table for an specific database. If the database name is not defined, the function will\n   * be applied for each element\n   *\n   * @param {string} database The database name\n   * @param {object} callbacks The actions\n   * @param {function (RoutingTable)} callbacks.applyWhenExists Call when the db exists or when the database property is not informed\n   * @param {function ()} callbacks.applyWhenDontExists Call when the database doesn't have the routing table registred\n   * @returns {RoutingTableRegistry} this\n   */\n  RoutingTableRegistry.prototype.apply = function (database, _a) {\n    var _b = _a === void 0 ? {} : _a,\n      applyWhenExists = _b.applyWhenExists,\n      _c = _b.applyWhenDontExists,\n      applyWhenDontExists = _c === void 0 ? function () {} : _c;\n    if (this._tables.has(database)) {\n      applyWhenExists(this._tables.get(database));\n    } else if (typeof database === 'string' || database === null) {\n      applyWhenDontExists();\n    } else {\n      this._forEach(applyWhenExists);\n    }\n    return this;\n  };\n  /**\n   * Retrieves a routing table from a given database name\n   *\n   * @param {string|impersonatedUser} impersonatedUser The impersonated User\n   * @param {string} database The database name\n   * @param {function()|RoutingTable} defaultSupplier The routing table supplier, if it's not a function or not exists, it will return itself as default value\n   * @returns {RoutingTable} The routing table for the respective database\n   */\n  RoutingTableRegistry.prototype.get = function (database, defaultSupplier) {\n    if (this._tables.has(database)) {\n      return this._tables.get(database);\n    }\n    return typeof defaultSupplier === 'function' ? defaultSupplier() : defaultSupplier;\n  };\n  /**\n   * Remove the routing table which is already expired\n   * @returns {RoutingTableRegistry} this\n   */\n  RoutingTableRegistry.prototype.removeExpired = function () {\n    var _this = this;\n    return this._removeIf(function (value) {\n      return value.isExpiredFor(_this._routingTablePurgeDelay);\n    });\n  };\n  RoutingTableRegistry.prototype._forEach = function (apply) {\n    var e_1, _a;\n    try {\n      for (var _b = __values(this._tables), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var _d = __read(_c.value, 2),\n          value = _d[1];\n        apply(value);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    return this;\n  };\n  RoutingTableRegistry.prototype._remove = function (key) {\n    this._tables.delete(key);\n    return this;\n  };\n  RoutingTableRegistry.prototype._removeIf = function (predicate) {\n    var e_2, _a;\n    try {\n      for (var _b = __values(this._tables), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var _d = __read(_c.value, 2),\n          key = _d[0],\n          value = _d[1];\n        if (predicate(value)) {\n          this._remove(key);\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n    return this;\n  };\n  return RoutingTableRegistry;\n}();","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__createBinding","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","op","pop","push","__values","__read","r","ar","error","__importDefault","exports","neo4j_driver_core_1","require","rediscovery_1","channel_1","connection_provider_single_1","connection_provider_pooled_1","load_balancing_1","connection_1","SERVICE_UNAVAILABLE","SESSION_EXPIRED","Bookmark","internal","bookmark","_a","constants","READ","ACCESS_MODE_READ","WRITE","ACCESS_MODE_WRITE","BOLT_PROTOCOL_V3","BOLT_PROTOCOL_V4_0","BOLT_PROTOCOL_V4_4","UNAUTHORIZED_ERROR_CODE","DATABASE_NOT_FOUND_ERROR_CODE","SYSTEM_DB_NAME","DEFAULT_DB_NAME","DEFAULT_ROUTING_TABLE_PURGE_DELAY","int","RoutingConnectionProvider","_super","id","address","routingContext","hostNameResolver","config","log","userAgent","authToken","routingTablePurgeDelay","_this","createChannelConnection","_config","_createConnectionErrorHandler","_log","_routingContext","toString","_seedRouter","_rediscovery","default","_loadBalancingStrategy","LeastConnectedLoadBalancingStrategy","_connectionPool","_hostNameResolver","_dnsResolver","HostNameResolver","_useSeedRouter","_routingTableRegistry","RoutingTableRegistry","ConnectionErrorHandler","_handleUnavailability","database","warn","_id","code","message","forget","_handleAuthorizationExpired","purge","catch","_handleWriteFailure","forgetWriter","newError","acquireConnection","_b","accessMode","bookmarks","impersonatedUser","onDatabaseNameResolved","name","context","databaseSpecificErrorHandler","routingTable","connection","error_1","transformed","_c","_freshRoutingTable","databaseName","selectReader","readers","selectWriter","writers","_acquireConnectionToServer","DelegateConnection","handleAndTransformError","_hasProtocolVersion","versionPredicate","addresses","lastError","protocolVersion","error_2","_resolveSeedRouter","protocol","version","close","supportsMultiDb","supportsTransactionConfig","supportsUserImpersonation","applyWhenExists","serverName","acquire","currentRoutingTable","RoutingTable","isStaleFor","info","_refreshRoutingTable","knownRouters","routers","_fetchRoutingTableFromSeedRouterFallbackToKnownRouters","_fetchRoutingTableFromKnownRoutersFallbackToSeedRouter","seenRouters","newRoutingTable","_fetchRoutingTableUsingSeedRouter","_fetchRoutingTableUsingKnownRouters","_applyRoutingTableIfPossible","lastRouterIndex","_fetchRoutingTable","_forgetRouter","seedRouter","resolvedAddresses","newAddresses","filter","indexOf","dnsResolvedAddresses","all","map","concat","routerAddresses","reduce","refreshedTablePromise","currentRouter","currentIndex","previousRouterIndex","session","error_3","_createSessionForRediscovery","lookupRoutingTableOnRouter","routerAddress","connectionProvider","error_4","errorCode","handleAuthorizationExpired","Session","mode","empty","_updateRoutingTable","keepAll","allServers","removeExpired","register","routersArray","routerIndex","forgetRouter","_tables","Map","_routingTablePurgeDelay","table","set","applyWhenDontExists","has","_forEach","defaultSupplier","_removeIf","isExpiredFor","e_1","_d","e_1_1","return","_remove","key","delete","predicate","e_2","e_2_1"],"sources":["C:/Stanford/DigitalTracesApp3/node_modules/neo4j-driver-bolt-connection/lib/connection-provider/connection-provider-routing.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [http://neo4j.com]\n *\n * This file is part of Neo4j.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar rediscovery_1 = __importStar(require(\"../rediscovery\"));\nvar channel_1 = require(\"../channel\");\nvar connection_provider_single_1 = __importDefault(require(\"./connection-provider-single\"));\nvar connection_provider_pooled_1 = __importDefault(require(\"./connection-provider-pooled\"));\nvar load_balancing_1 = require(\"../load-balancing\");\nvar connection_1 = require(\"../connection\");\nvar SERVICE_UNAVAILABLE = neo4j_driver_core_1.error.SERVICE_UNAVAILABLE, SESSION_EXPIRED = neo4j_driver_core_1.error.SESSION_EXPIRED;\nvar Bookmark = neo4j_driver_core_1.internal.bookmark.Bookmark, _a = neo4j_driver_core_1.internal.constants, READ = _a.ACCESS_MODE_READ, WRITE = _a.ACCESS_MODE_WRITE, BOLT_PROTOCOL_V3 = _a.BOLT_PROTOCOL_V3, BOLT_PROTOCOL_V4_0 = _a.BOLT_PROTOCOL_V4_0, BOLT_PROTOCOL_V4_4 = _a.BOLT_PROTOCOL_V4_4;\nvar UNAUTHORIZED_ERROR_CODE = 'Neo.ClientError.Security.Unauthorized';\nvar DATABASE_NOT_FOUND_ERROR_CODE = 'Neo.ClientError.Database.DatabaseNotFound';\nvar SYSTEM_DB_NAME = 'system';\nvar DEFAULT_DB_NAME = null;\nvar DEFAULT_ROUTING_TABLE_PURGE_DELAY = (0, neo4j_driver_core_1.int)(30000);\nvar RoutingConnectionProvider = /** @class */ (function (_super) {\n    __extends(RoutingConnectionProvider, _super);\n    function RoutingConnectionProvider(_a) {\n        var id = _a.id, address = _a.address, routingContext = _a.routingContext, hostNameResolver = _a.hostNameResolver, config = _a.config, log = _a.log, userAgent = _a.userAgent, authToken = _a.authToken, routingTablePurgeDelay = _a.routingTablePurgeDelay;\n        var _this = _super.call(this, { id: id, config: config, log: log, userAgent: userAgent, authToken: authToken }, function (address) {\n            return (0, connection_1.createChannelConnection)(address, _this._config, _this._createConnectionErrorHandler(), _this._log, _this._routingContext);\n        }) || this;\n        _this._routingContext = __assign(__assign({}, routingContext), { address: address.toString() });\n        _this._seedRouter = address;\n        _this._rediscovery = new rediscovery_1.default(_this._routingContext);\n        _this._loadBalancingStrategy = new load_balancing_1.LeastConnectedLoadBalancingStrategy(_this._connectionPool);\n        _this._hostNameResolver = hostNameResolver;\n        _this._dnsResolver = new channel_1.HostNameResolver();\n        _this._log = log;\n        _this._useSeedRouter = true;\n        _this._routingTableRegistry = new RoutingTableRegistry(routingTablePurgeDelay\n            ? (0, neo4j_driver_core_1.int)(routingTablePurgeDelay)\n            : DEFAULT_ROUTING_TABLE_PURGE_DELAY);\n        return _this;\n    }\n    RoutingConnectionProvider.prototype._createConnectionErrorHandler = function () {\n        // connection errors mean SERVICE_UNAVAILABLE for direct driver but for routing driver they should only\n        // result in SESSION_EXPIRED because there might still exist other servers capable of serving the request\n        return new connection_1.ConnectionErrorHandler(SESSION_EXPIRED);\n    };\n    RoutingConnectionProvider.prototype._handleUnavailability = function (error, address, database) {\n        this._log.warn(\"Routing driver \" + this._id + \" will forget \" + address + \" for database '\" + database + \"' because of an error \" + error.code + \" '\" + error.message + \"'\");\n        this.forget(address, database || DEFAULT_DB_NAME);\n        return error;\n    };\n    RoutingConnectionProvider.prototype._handleAuthorizationExpired = function (error, address, database) {\n        this._log.warn(\"Routing driver \" + this._id + \" will close connections to \" + address + \" for database '\" + database + \"' because of an error \" + error.code + \" '\" + error.message + \"'\");\n        this._connectionPool.purge(address).catch(function () { });\n        return error;\n    };\n    RoutingConnectionProvider.prototype._handleWriteFailure = function (error, address, database) {\n        this._log.warn(\"Routing driver \" + this._id + \" will forget writer \" + address + \" for database '\" + database + \"' because of an error \" + error.code + \" '\" + error.message + \"'\");\n        this.forgetWriter(address, database || DEFAULT_DB_NAME);\n        return (0, neo4j_driver_core_1.newError)('No longer possible to write to server at ' + address, SESSION_EXPIRED);\n    };\n    /**\n     * See {@link ConnectionProvider} for more information about this method and\n     * its arguments.\n     */\n    RoutingConnectionProvider.prototype.acquireConnection = function (_a) {\n        var _b = _a === void 0 ? {} : _a, accessMode = _b.accessMode, database = _b.database, bookmarks = _b.bookmarks, impersonatedUser = _b.impersonatedUser, onDatabaseNameResolved = _b.onDatabaseNameResolved;\n        return __awaiter(this, void 0, void 0, function () {\n            var name, address, context, databaseSpecificErrorHandler, routingTable, connection, error_1, transformed;\n            var _this = this;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        context = { database: database || DEFAULT_DB_NAME };\n                        databaseSpecificErrorHandler = new connection_1.ConnectionErrorHandler(SESSION_EXPIRED, function (error, address) { return _this._handleUnavailability(error, address, context.database); }, function (error, address) { return _this._handleWriteFailure(error, address, context.database); }, function (error, address) {\n                            return _this._handleAuthorizationExpired(error, address, context.database);\n                        });\n                        return [4 /*yield*/, this._freshRoutingTable({\n                                accessMode: accessMode,\n                                database: context.database,\n                                bookmark: bookmarks,\n                                impersonatedUser: impersonatedUser,\n                                onDatabaseNameResolved: function (databaseName) {\n                                    context.database = context.database || databaseName;\n                                    if (onDatabaseNameResolved) {\n                                        onDatabaseNameResolved(databaseName);\n                                    }\n                                }\n                            })\n                            // select a target server based on specified access mode\n                        ];\n                    case 1:\n                        routingTable = _c.sent();\n                        // select a target server based on specified access mode\n                        if (accessMode === READ) {\n                            address = this._loadBalancingStrategy.selectReader(routingTable.readers);\n                            name = 'read';\n                        }\n                        else if (accessMode === WRITE) {\n                            address = this._loadBalancingStrategy.selectWriter(routingTable.writers);\n                            name = 'write';\n                        }\n                        else {\n                            throw (0, neo4j_driver_core_1.newError)('Illegal mode ' + accessMode);\n                        }\n                        // we couldn't select a target server\n                        if (!address) {\n                            throw (0, neo4j_driver_core_1.newError)(\"Failed to obtain connection towards \" + name + \" server. Known routing table is: \" + routingTable, SESSION_EXPIRED);\n                        }\n                        _c.label = 2;\n                    case 2:\n                        _c.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, this._acquireConnectionToServer(address, name, routingTable)];\n                    case 3:\n                        connection = _c.sent();\n                        return [2 /*return*/, new connection_1.DelegateConnection(connection, databaseSpecificErrorHandler)];\n                    case 4:\n                        error_1 = _c.sent();\n                        transformed = databaseSpecificErrorHandler.handleAndTransformError(error_1, address);\n                        throw transformed;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._hasProtocolVersion = function (versionPredicate) {\n        return __awaiter(this, void 0, void 0, function () {\n            var addresses, lastError, i, connection, protocolVersion, error_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._resolveSeedRouter(this._seedRouter)];\n                    case 1:\n                        addresses = _a.sent();\n                        i = 0;\n                        _a.label = 2;\n                    case 2:\n                        if (!(i < addresses.length)) return [3 /*break*/, 8];\n                        _a.label = 3;\n                    case 3:\n                        _a.trys.push([3, 6, , 7]);\n                        return [4 /*yield*/, (0, connection_1.createChannelConnection)(addresses[i], this._config, this._createConnectionErrorHandler(), this._log)];\n                    case 4:\n                        connection = _a.sent();\n                        protocolVersion = connection.protocol()\n                            ? connection.protocol().version\n                            : null;\n                        return [4 /*yield*/, connection.close()];\n                    case 5:\n                        _a.sent();\n                        if (protocolVersion) {\n                            return [2 /*return*/, versionPredicate(protocolVersion)];\n                        }\n                        return [2 /*return*/, false];\n                    case 6:\n                        error_2 = _a.sent();\n                        lastError = error_2;\n                        return [3 /*break*/, 7];\n                    case 7:\n                        i++;\n                        return [3 /*break*/, 2];\n                    case 8:\n                        if (lastError) {\n                            throw lastError;\n                        }\n                        return [2 /*return*/, false];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype.supportsMultiDb = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._hasProtocolVersion(function (version) { return version >= BOLT_PROTOCOL_V4_0; })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype.supportsTransactionConfig = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._hasProtocolVersion(function (version) { return version >= BOLT_PROTOCOL_V3; })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype.supportsUserImpersonation = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._hasProtocolVersion(function (version) { return version >= BOLT_PROTOCOL_V4_4; })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype.forget = function (address, database) {\n        this._routingTableRegistry.apply(database, {\n            applyWhenExists: function (routingTable) { return routingTable.forget(address); }\n        });\n        // We're firing and forgetting this operation explicitly and listening for any\n        // errors to avoid unhandled promise rejection\n        this._connectionPool.purge(address).catch(function () { });\n    };\n    RoutingConnectionProvider.prototype.forgetWriter = function (address, database) {\n        this._routingTableRegistry.apply(database, {\n            applyWhenExists: function (routingTable) { return routingTable.forgetWriter(address); }\n        });\n    };\n    RoutingConnectionProvider.prototype._acquireConnectionToServer = function (address, serverName, routingTable) {\n        return this._connectionPool.acquire(address);\n    };\n    RoutingConnectionProvider.prototype._freshRoutingTable = function (_a) {\n        var _b = _a === void 0 ? {} : _a, accessMode = _b.accessMode, database = _b.database, bookmark = _b.bookmark, impersonatedUser = _b.impersonatedUser, onDatabaseNameResolved = _b.onDatabaseNameResolved;\n        var currentRoutingTable = this._routingTableRegistry.get(database, function () { return new rediscovery_1.RoutingTable({ database: database }); });\n        if (!currentRoutingTable.isStaleFor(accessMode)) {\n            return currentRoutingTable;\n        }\n        this._log.info(\"Routing table is stale for database: \\\"\" + database + \"\\\" and access mode: \\\"\" + accessMode + \"\\\": \" + currentRoutingTable);\n        return this._refreshRoutingTable(currentRoutingTable, bookmark, impersonatedUser, onDatabaseNameResolved);\n    };\n    RoutingConnectionProvider.prototype._refreshRoutingTable = function (currentRoutingTable, bookmark, impersonatedUser, onDatabaseNameResolved) {\n        var knownRouters = currentRoutingTable.routers;\n        if (this._useSeedRouter) {\n            return this._fetchRoutingTableFromSeedRouterFallbackToKnownRouters(knownRouters, currentRoutingTable, bookmark, impersonatedUser, onDatabaseNameResolved);\n        }\n        return this._fetchRoutingTableFromKnownRoutersFallbackToSeedRouter(knownRouters, currentRoutingTable, bookmark, impersonatedUser, onDatabaseNameResolved);\n    };\n    RoutingConnectionProvider.prototype._fetchRoutingTableFromSeedRouterFallbackToKnownRouters = function (knownRouters, currentRoutingTable, bookmark, impersonatedUser, onDatabaseNameResolved) {\n        return __awaiter(this, void 0, void 0, function () {\n            var seenRouters, newRoutingTable;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        seenRouters = [];\n                        return [4 /*yield*/, this._fetchRoutingTableUsingSeedRouter(seenRouters, this._seedRouter, currentRoutingTable, bookmark, impersonatedUser)];\n                    case 1:\n                        newRoutingTable = _a.sent();\n                        if (!newRoutingTable) return [3 /*break*/, 2];\n                        this._useSeedRouter = false;\n                        return [3 /*break*/, 4];\n                    case 2: return [4 /*yield*/, this._fetchRoutingTableUsingKnownRouters(knownRouters, currentRoutingTable, bookmark, impersonatedUser)];\n                    case 3:\n                        // seed router did not return a valid routing table - try to use other known routers\n                        newRoutingTable = _a.sent();\n                        _a.label = 4;\n                    case 4: return [4 /*yield*/, this._applyRoutingTableIfPossible(currentRoutingTable, newRoutingTable, onDatabaseNameResolved)];\n                    case 5: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._fetchRoutingTableFromKnownRoutersFallbackToSeedRouter = function (knownRouters, currentRoutingTable, bookmark, impersonatedUser, onDatabaseNameResolved) {\n        return __awaiter(this, void 0, void 0, function () {\n            var newRoutingTable;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._fetchRoutingTableUsingKnownRouters(knownRouters, currentRoutingTable, bookmark, impersonatedUser)];\n                    case 1:\n                        newRoutingTable = _a.sent();\n                        if (!!newRoutingTable) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this._fetchRoutingTableUsingSeedRouter(knownRouters, this._seedRouter, currentRoutingTable, bookmark, impersonatedUser)];\n                    case 2:\n                        // none of the known routers returned a valid routing table - try to use seed router address for rediscovery\n                        newRoutingTable = _a.sent();\n                        _a.label = 3;\n                    case 3: return [4 /*yield*/, this._applyRoutingTableIfPossible(currentRoutingTable, newRoutingTable, onDatabaseNameResolved)];\n                    case 4: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._fetchRoutingTableUsingKnownRouters = function (knownRouters, currentRoutingTable, bookmark, impersonatedUser) {\n        return __awaiter(this, void 0, void 0, function () {\n            var newRoutingTable, lastRouterIndex;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._fetchRoutingTable(knownRouters, currentRoutingTable, bookmark, impersonatedUser)];\n                    case 1:\n                        newRoutingTable = _a.sent();\n                        if (newRoutingTable) {\n                            // one of the known routers returned a valid routing table - use it\n                            return [2 /*return*/, newRoutingTable];\n                        }\n                        lastRouterIndex = knownRouters.length - 1;\n                        RoutingConnectionProvider._forgetRouter(currentRoutingTable, knownRouters, lastRouterIndex);\n                        return [2 /*return*/, null];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._fetchRoutingTableUsingSeedRouter = function (seenRouters, seedRouter, routingTable, bookmark, impersonatedUser) {\n        return __awaiter(this, void 0, void 0, function () {\n            var resolvedAddresses, newAddresses;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._resolveSeedRouter(seedRouter)\n                        // filter out all addresses that we've already tried\n                    ];\n                    case 1:\n                        resolvedAddresses = _a.sent();\n                        newAddresses = resolvedAddresses.filter(function (address) { return seenRouters.indexOf(address) < 0; });\n                        return [4 /*yield*/, this._fetchRoutingTable(newAddresses, routingTable, bookmark, impersonatedUser)];\n                    case 2: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._resolveSeedRouter = function (seedRouter) {\n        return __awaiter(this, void 0, void 0, function () {\n            var resolvedAddresses, dnsResolvedAddresses;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._hostNameResolver.resolve(seedRouter)];\n                    case 1:\n                        resolvedAddresses = _a.sent();\n                        return [4 /*yield*/, Promise.all(resolvedAddresses.map(function (address) { return _this._dnsResolver.resolve(address); }))];\n                    case 2:\n                        dnsResolvedAddresses = _a.sent();\n                        return [2 /*return*/, [].concat.apply([], dnsResolvedAddresses)];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._fetchRoutingTable = function (routerAddresses, routingTable, bookmark, impersonatedUser) {\n        var _this = this;\n        return routerAddresses.reduce(function (refreshedTablePromise, currentRouter, currentIndex) { return __awaiter(_this, void 0, void 0, function () {\n            var newRoutingTable, previousRouterIndex, session, error_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, refreshedTablePromise];\n                    case 1:\n                        newRoutingTable = _a.sent();\n                        if (newRoutingTable) {\n                            // valid routing table was fetched - just return it, try next router otherwise\n                            return [2 /*return*/, newRoutingTable];\n                        }\n                        else {\n                            previousRouterIndex = currentIndex - 1;\n                            RoutingConnectionProvider._forgetRouter(routingTable, routerAddresses, previousRouterIndex);\n                        }\n                        return [4 /*yield*/, this._createSessionForRediscovery(currentRouter, bookmark, impersonatedUser)];\n                    case 2:\n                        session = _a.sent();\n                        if (!session) return [3 /*break*/, 8];\n                        _a.label = 3;\n                    case 3:\n                        _a.trys.push([3, 5, 6, 7]);\n                        return [4 /*yield*/, this._rediscovery.lookupRoutingTableOnRouter(session, routingTable.database, currentRouter, impersonatedUser)];\n                    case 4: return [2 /*return*/, _a.sent()];\n                    case 5:\n                        error_3 = _a.sent();\n                        if (error_3 && error_3.code === DATABASE_NOT_FOUND_ERROR_CODE) {\n                            // not finding the target database is a sign of a configuration issue\n                            throw error_3;\n                        }\n                        this._log.warn(\"unable to fetch routing table because of an error \" + error_3);\n                        return [2 /*return*/, null];\n                    case 6:\n                        session.close();\n                        return [7 /*endfinally*/];\n                    case 7: return [3 /*break*/, 9];\n                    case 8: \n                    // unable to acquire connection and create session towards the current router\n                    // return null to signal that the next router should be tried\n                    return [2 /*return*/, null];\n                    case 9: return [2 /*return*/];\n                }\n            });\n        }); }, Promise.resolve(null));\n    };\n    RoutingConnectionProvider.prototype._createSessionForRediscovery = function (routerAddress, bookmark, impersonatedUser) {\n        return __awaiter(this, void 0, void 0, function () {\n            var connection, databaseSpecificErrorHandler, connectionProvider, protocolVersion, error_4;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this._connectionPool.acquire(routerAddress)];\n                    case 1:\n                        connection = _a.sent();\n                        databaseSpecificErrorHandler = connection_1.ConnectionErrorHandler.create({\n                            errorCode: SESSION_EXPIRED,\n                            handleAuthorizationExpired: function (error, address) { return _this._handleAuthorizationExpired(error, address); }\n                        });\n                        connectionProvider = new connection_provider_single_1.default(new connection_1.DelegateConnection(connection, databaseSpecificErrorHandler));\n                        protocolVersion = connection.protocol().version;\n                        if (protocolVersion < 4.0) {\n                            return [2 /*return*/, new neo4j_driver_core_1.Session({\n                                    mode: WRITE,\n                                    bookmark: Bookmark.empty(),\n                                    connectionProvider: connectionProvider\n                                })];\n                        }\n                        return [2 /*return*/, new neo4j_driver_core_1.Session({\n                                mode: READ,\n                                database: SYSTEM_DB_NAME,\n                                bookmark: bookmark,\n                                connectionProvider: connectionProvider,\n                                impersonatedUser: impersonatedUser\n                            })];\n                    case 2:\n                        error_4 = _a.sent();\n                        // unable to acquire connection towards the given router\n                        if (error_4 && error_4.code === UNAUTHORIZED_ERROR_CODE) {\n                            // auth error and not finding system database is a sign of a configuration issue\n                            // discovery should not proceed\n                            throw error_4;\n                        }\n                        return [2 /*return*/, null];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._applyRoutingTableIfPossible = function (currentRoutingTable, newRoutingTable, onDatabaseNameResolved) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!newRoutingTable) {\n                            // none of routing servers returned valid routing table, throw exception\n                            throw (0, neo4j_driver_core_1.newError)(\"Could not perform discovery. No routing servers available. Known routing table: \" + currentRoutingTable, SERVICE_UNAVAILABLE);\n                        }\n                        if (newRoutingTable.writers.length === 0) {\n                            // use seed router next time. this is important when cluster is partitioned. it tries to make sure driver\n                            // does not always get routing table without writers because it talks exclusively to a minority partition\n                            this._useSeedRouter = true;\n                        }\n                        return [4 /*yield*/, this._updateRoutingTable(newRoutingTable, onDatabaseNameResolved)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, newRoutingTable];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._updateRoutingTable = function (newRoutingTable, onDatabaseNameResolved) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: \n                    // close old connections to servers not present in the new routing table\n                    return [4 /*yield*/, this._connectionPool.keepAll(newRoutingTable.allServers())];\n                    case 1:\n                        // close old connections to servers not present in the new routing table\n                        _a.sent();\n                        this._routingTableRegistry.removeExpired();\n                        this._routingTableRegistry.register(newRoutingTable);\n                        onDatabaseNameResolved(newRoutingTable.database);\n                        this._log.info(\"Updated routing table \" + newRoutingTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider._forgetRouter = function (routingTable, routersArray, routerIndex) {\n        var address = routersArray[routerIndex];\n        if (routingTable && address) {\n            routingTable.forgetRouter(address);\n        }\n    };\n    return RoutingConnectionProvider;\n}(connection_provider_pooled_1.default));\nexports.default = RoutingConnectionProvider;\n/**\n * Responsible for keeping track of the existing routing tables\n */\nvar RoutingTableRegistry = /** @class */ (function () {\n    /**\n     * Constructor\n     * @param {int} routingTablePurgeDelay The routing table purge delay\n     */\n    function RoutingTableRegistry(routingTablePurgeDelay) {\n        this._tables = new Map();\n        this._routingTablePurgeDelay = routingTablePurgeDelay;\n    }\n    /**\n     * Put a routing table in the registry\n     *\n     * @param {RoutingTable} table The routing table\n     * @returns {RoutingTableRegistry} this\n     */\n    RoutingTableRegistry.prototype.register = function (table) {\n        this._tables.set(table.database, table);\n        return this;\n    };\n    /**\n     * Apply function in the routing table for an specific database. If the database name is not defined, the function will\n     * be applied for each element\n     *\n     * @param {string} database The database name\n     * @param {object} callbacks The actions\n     * @param {function (RoutingTable)} callbacks.applyWhenExists Call when the db exists or when the database property is not informed\n     * @param {function ()} callbacks.applyWhenDontExists Call when the database doesn't have the routing table registred\n     * @returns {RoutingTableRegistry} this\n     */\n    RoutingTableRegistry.prototype.apply = function (database, _a) {\n        var _b = _a === void 0 ? {} : _a, applyWhenExists = _b.applyWhenExists, _c = _b.applyWhenDontExists, applyWhenDontExists = _c === void 0 ? function () { } : _c;\n        if (this._tables.has(database)) {\n            applyWhenExists(this._tables.get(database));\n        }\n        else if (typeof database === 'string' || database === null) {\n            applyWhenDontExists();\n        }\n        else {\n            this._forEach(applyWhenExists);\n        }\n        return this;\n    };\n    /**\n     * Retrieves a routing table from a given database name\n     *\n     * @param {string|impersonatedUser} impersonatedUser The impersonated User\n     * @param {string} database The database name\n     * @param {function()|RoutingTable} defaultSupplier The routing table supplier, if it's not a function or not exists, it will return itself as default value\n     * @returns {RoutingTable} The routing table for the respective database\n     */\n    RoutingTableRegistry.prototype.get = function (database, defaultSupplier) {\n        if (this._tables.has(database)) {\n            return this._tables.get(database);\n        }\n        return typeof defaultSupplier === 'function'\n            ? defaultSupplier()\n            : defaultSupplier;\n    };\n    /**\n     * Remove the routing table which is already expired\n     * @returns {RoutingTableRegistry} this\n     */\n    RoutingTableRegistry.prototype.removeExpired = function () {\n        var _this = this;\n        return this._removeIf(function (value) {\n            return value.isExpiredFor(_this._routingTablePurgeDelay);\n        });\n    };\n    RoutingTableRegistry.prototype._forEach = function (apply) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(this._tables), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), value = _d[1];\n                apply(value);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return this;\n    };\n    RoutingTableRegistry.prototype._remove = function (key) {\n        this._tables.delete(key);\n        return this;\n    };\n    RoutingTableRegistry.prototype._removeIf = function (predicate) {\n        var e_2, _a;\n        try {\n            for (var _b = __values(this._tables), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), key = _d[0], value = _d[1];\n                if (predicate(value)) {\n                    this._remove(key);\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return this;\n    };\n    return RoutingTableRegistry;\n}());\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}